//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AcPrincDrug_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "AcPrincDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AcPrincDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refActiviePrinciple), "AcPrincDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AcPrincDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AdmNoTemp_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCProvider), "AdmNoTemp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AdmNoTemp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.AdmNoTemp), "AdmNoTempHolding", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.AdmNoTempHolding), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AdmNoTempHolding_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.UserAccount), "AdmNoTempHolding", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AdmNoTempHolding), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AdvancedSpecialist_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "AdvancedSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AdvancedSpecialist), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AdvancedSpecialist_refQualification", "refQualification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refQualification), "AdvancedSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AdvancedSpecialist), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Alert_Appointment", "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Appointment), "Alert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Alert), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Alert_Reminder", "ReminderNotices", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ReminderNotices), "Alert", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Alert), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "AllergyIntolerance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AllergyIntolerance), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refAllergyIndex), "AllergyIntolerance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AllergyIntolerance), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AntagonistDrug_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "AntagonistDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AntagonistDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AntagonistDrug_Drug_02", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "AntagonistDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AntagonistDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Application_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Application), "Application1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Application), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrivilegeRole_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Application), "PrivilegeRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrivilegeRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Realms_Application", "Application", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Application), "Realms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Realms), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AppliedMedStandard_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Resource), "AppliedMedStandard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AppliedMedStandard), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.EmpWorkSchedule), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalServiceItem), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_OnlineQueue", "OnlineQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.OnlineQueue), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_refTimeFrame", "refTimeFrame", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refTimeFrame), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Appointment_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.WardInDept), "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Appointment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Prescription_Appointment", "Appointment", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Appointment), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Prescription), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Allocation_ArchitectureResources", "ArchitectureResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ArchitectureResources), "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RoomAllocation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ArchitectureResources), "ArchitectureResources1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ArchitectureResources), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TRolePermission_TRole", "ASPNetRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ASPNetRole), "ASPNetRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetRolePermission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TUserRole_TRole", "ASPNetRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ASPNetRole), "ASPNetUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetUserRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ASPNetRolePermission_refPermission", "refPermission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refPermission), "ASPNetRolePermission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetRolePermission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ASPNetUser_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.UserAccount), "ASPNetUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetUser), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ASPNetUser), "ASPNetUserClaims", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetUserClaims), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ASPNetUser), "ASPNetUserLogin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetUserLogin), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ASPNetUserRole_ASPNetUser", "ASPNetUser", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ASPNetUser), "ASPNetUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ASPNetUserRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEquimentsResources), "AssignMedEquip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AssignMedEquip), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AssignMedEquip_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.RoomAllocation), "AssignMedEquip", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AssignMedEquip), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AssignmentSchedule_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "AssignmentSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AssignmentSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AssignmentSchedule_OperationSchedule", "OperationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.OperationSchedule), "AssignmentSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AssignmentSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AttachedDoc_DocItem", "DocItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.DocItem), "AttachedDoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AttachedDoc), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_AttachedDoc_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientAdmission), "AttachedDoc", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.AttachedDoc), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BedInRoom_PatientBed", "PatientBed", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientBed), "BedInRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BedInRoom), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BedInRoom_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.RoomAllocation), "BedInRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BedInRoom), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientInBedRoom_BedInRoom", "BedInRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.BedInRoom), "PatientInBedRoom", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientInBedRoom), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Bloodbank_refBloodType", "refBloodType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refBloodType), "Bloodbank", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Bloodbank), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BloodDonation_Bloodbank", "Bloodbank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Bloodbank), "BloodDonation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BloodDonation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SeparationOfBlood_Bloodbank", "Bloodbank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Bloodbank), "SeparationOfBlood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SeparationOfBlood), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestBlood_Bloodbank", "Bloodbank", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Bloodbank), "TestBlood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestBlood), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BloodDonation_Donor", "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Donor), "BloodDonation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BloodDonation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedImagingTestItems), "BodyRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BodyRegion), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalReq), "BodyRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BodyRegion), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BodyRegion_refExamAction", "refExamAction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refExamAction), "BodyRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BodyRegion), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.EmpWorkSchedule), "BusySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BusySchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_BusySchedule_refTimeFrame", "refTimeFrame", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refTimeFrame), "BusySchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.BusySchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalServicePackage), "ChainMedicalServices", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ChainMedicalServices), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ClinicalIndicatorType), "MedLabTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTest), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HospitalSpecialist), "ClinicalTrial", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ClinicalTrial), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ClinicalTrial), "ClinicalTrialResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ClinicalTrialResult), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContactDetails_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Contract), "ContactDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContactDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContactDetails_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Resource), "ContactDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContactDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Contract_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Supplier), "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Contract), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContractChange_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Contract), "ContractChange", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContractChange), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContractDocument_Contract", "Contract", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Contract), "ContractDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContractDocument), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContractDocument_ContractChange", "ContractChange", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ContractChange), "ContractDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContractDocument), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ContractDocument_StdKSection", "StdKSection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.StdKSection), "ContractDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ContractDocument), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DDI_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DDI", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DDI), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DDI_Drug_02", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DDI", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DDI), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEncounter), "DeathSituationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DeathSituationInfo), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DeathSituationInfo_ReceivePatient", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientAdmission), "DeathSituationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DeathSituationInfo), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HCRoomBlock), "DHCRoomBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DHCRoomBlock), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DHCRoomBlock_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.RoomAllocation), "DHCRoomBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DHCRoomBlock), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ParaClinicalExamGroup), "DiagDescribeTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DiagDescribeTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.DiagDescribeTmp), "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientDiagnosticImaging), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DisposableMDResource_Resource", "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Resource), "DisposableMDResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DisposableMDResource), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DocItem_refItemType", "refItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refItemType), "DocItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DocItem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Donor_refBloodType", "refBloodType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refBloodType), "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Donor), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DonorMedicalConditions_Donor", "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Donor), "DonorMedicalConditions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DonorMedicalConditions), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DonorMedication_Donor", "Donor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Donor), "DonorMedication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DonorMedication), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedicalCondition), "DonorMedicalConditions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DonorMedicalConditions), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DonorMedication_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DonorMedication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DonorMedication), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrAdviceTmp_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "DrAdviceTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrAdviceTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.DrAdviceTmp), "DrMedicineAdvice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrMedicineAdvice), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.DrMedicineTmp), "DrMedicineAdvice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrMedicineAdvice), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrMedicineTmp_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Drug), "DrMedicineTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrMedicineTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrMedicineTmp_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "DrMedicineTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrMedicineTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmp_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "DrPrescriptionTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmp_ICD10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ICD10), "DrPrescriptionTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.DrPrescriptionTmp), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "DrPrescriptionTmps", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrPrescriptionTmps), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_DrugKind", "refDrugKind", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refDrugKind), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_InsurKind", "refInsurKind", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refInsurKind), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refCountry", "refCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCountry), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refMedcnAdminRoute), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refMedcnVehicleForm), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refUnitOfMeasure), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refUnitOfMeasure), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refUnitOfMeasure), "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Drug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugConfign_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DrugConfign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugConfign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugConfign_Drug_02", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DrugConfign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugConfign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugDepartment_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DrugInDepartment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugInDepartment), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugPrice_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "DrugPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugPrice), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InOutwardDrug_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Drug), "InOutwardDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InOutwardDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Drug), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ProvidableDrugs_Drug", "Drug", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Drug), "ProvidableDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ProvidableDrugs), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refUnitOfMeasure), "DrugConfign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugConfign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_DrugPrice_PriceList", "PriceList", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PriceList), "DrugPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.DrugPrice), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EduLevel_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "EduLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EduLevel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EduLevel_refCertification_", "refCertification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCertification), "EduLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EduLevel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EduLevel_refInstUniversity", "refInstUniversity", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refInstUniversity), "EduLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EduLevel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmpAllocation_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "EmpAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmpAllocation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmpAllocation_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.WardInDept), "EmpAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmpAllocation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employee_HCEnterprise", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCProvider), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Employee), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employee_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HospitalSpecialist), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Employee), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employee_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employee_refAcademicTile", "refAcademicTile", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refAcademicTile), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Employee), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employee_refJobTitle", "refJobTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refJobTitle), "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Employee), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmployeeAnnualLeave_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "EmployeeAnnualLeave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmployeeAnnualLeave), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmployeeLeaveTaken_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "EmployeeLeaveTaken", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmployeeLeaveTaken), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmpWorkSchedule_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmpWorkSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InsuranceRegQueue_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "InsuranceRegQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InsuranceRegQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_JobHistory_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "JobHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.JobHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PersonalProperty_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "PersonalProperty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PersonalProperty), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RegQueue_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "RegQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RegQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ResourceLog_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "ResourceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ResourceLog), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SocialAndHealthInsurance_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "SocialAndHealthInsurance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SocialAndHealthInsurance), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestBlood_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Employee), "TestBlood", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestBlood), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestOnPatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee_02", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Employee), "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestOnPatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refTypeAbsent), "EmployeeAnnualLeave", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmployeeAnnualLeave), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refTypeAbsent), "EmployeeLeaveTaken", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmployeeLeaveTaken), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Employeer_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Person), "Employeer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Employeer), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmpWorkSchedule_Operations", "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Operations), "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmpWorkSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refTypeAbsent), "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EmpWorkSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.EmpWorkSchedule), "RescrUsedInOperation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RescrUsedInOperation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEquimentsResources), "EquipHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EquipHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EquivMedService_HIServiceItem", "HIServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HIServiceItem), "EquivMedService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EquivMedService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalServiceItem), "EquivMedService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.EquivMedService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEquimentsResources), "ExamMaintenanceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ExamMaintenanceHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.TechnicalInspectionAgency), "ExamMaintenanceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ExamMaintenanceHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "FamilyHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.FamilyHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_FamilyHistory_refFAMRelationship", "refFAMRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refFAMRelationship), "FamilyHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.FamilyHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.GenericSocialNetwork), "NetworkGuestAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.NetworkGuestAccount), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCProvider_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCProvider), "HCProvider1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCProvider), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCProvider_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Organization), "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCProvider), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCProvider_refProviderType", "refProviderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refProviderType), "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCProvider), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCProvider_refProvince", "refCityProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refCityProvince), "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCProvider), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCProvider_SatOfHosID", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCProvider), "HCProvider1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCProvider), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HealthInsurance_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HCProvider), "HealthInsurance", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HealthInsurance), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalizationHistory_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HCProvider), "HospitalizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalSpecialist_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HCProvider), "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalSpecialist), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HosRanking_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HCProvider), "HosRanking", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HosRanking), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WorkingSchedule_HCProvider", "HCProvider", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCProvider), "WorkingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WorkingSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HCRoomBlock), "RescrUsedInOperation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RescrUsedInOperation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCStakeholder_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Organization), "HCStakeholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCStakeholder), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HCStakeholder_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Person), "HCStakeholder", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HCStakeholder), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HealthCareQueue_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientAdmission), "HealthCareQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HealthCareQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.RescrUsedInOperation), "HealthCareQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HealthCareQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HIAdmission_HealthInsurance", "HealthInsurance", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HealthInsurance), "HIAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HIAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HIAdmission_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientAdmission), "HIAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HIAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedicalServiceType), "HIServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HIServiceItem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HIServiceItems_HIServiceItem", "HIServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HIServiceItem), "HIServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HIServiceItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HIServiceItems_Quotation", "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Quotation), "HIServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HIServiceItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalServiceItem), "HosFeeTransDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HosFeeTransDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientInvoices), "HospitalFeeTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalFeeTransaction), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HospitalFeeTransaction), "MedicalClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalClaimService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "HospitalizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmissionType", "refAdmissionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refAdmissionType), "HospitalizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refAdmReferralType), "HospitalizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HospitalizationHistory), "HospitalizationHistoryDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.HospitalizationHistoryDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HospitalSpecialist), "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalEncounter), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HospitalSpecialist), "MedSerInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedSerInDept), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WardInDept_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.HospitalSpecialist), "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WardInDept), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.HospitalSpecialist), "WorkingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WorkingSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ICD10_ICD10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ICD10), "ICD101", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ICD10), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ICD10_ICDGroup", "ICDGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ICDGroup), "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ICD10), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedEnctrDiagnosis_IDC10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ICD10), "MedEnctrDiagnosis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedEnctrDiagnosis), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Prescription_ICD10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ICD10), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Prescription), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SpecifiedParaclinical_ICD10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ICD10), "SpecifiedParaclinical", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SpecifiedParaclinical), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SymptomIndicator_IDC10", "ICD10", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ICD10), "SymptomIndicator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SymptomIndicator), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ICDGroup_ICDChapter", "ICDChapter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ICDChapter), "ICDGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ICDGroup), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "ImmunizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ImmunizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ImmunizationHistory_refImmunization", "refImmunization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refImmunization), "ImmunizationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ImmunizationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InOutwardDrug_InOutType", "InOutType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.InOutType), "InOutwardDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InOutwardDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InOutwardDrug_LotNumber", "LotNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.LotNumber), "InOutwardDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InOutwardDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refShelfDrugLocation), "InOutwardDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InOutwardDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InOutwardDrug_refStoreHouse", "refStoreHouse", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refStoreHouse), "InOutwardDrug", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InOutwardDrug), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.InsuranceCompany), "InsuranceBeneficiary", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InsuranceBeneficiary), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_InsuranceRegQueue_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.WardInDept), "InsuranceRegQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.InsuranceRegQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_JobHistory_JobModel", "JobModel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.JobModel), "JobHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.JobHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_JobModel_refJobTitle", "refJobTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refJobTitle), "JobModel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.JobModel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_LanguageLevel_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "LanguageLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.LanguageLevel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_LanguageLevel_refHumanLanguage", "refHumanLanguage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refHumanLanguage), "LanguageLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.LanguageLevel), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PharmaceuticalCompany), "LotNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.LotNumber), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_LotNumber_refCountry", "refCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCountry), "LotNumber", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.LotNumber), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEncounter), "MedEnctrDiagnosis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedEnctrDiagnosis), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalBill_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Prescription), "MedicalBill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalBill), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalBills_MedicalBill", "MedicalBill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalBill), "MedicalBills", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalBills), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedClaimService_MedServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalServiceItem), "MedicalClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalClaimService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalClaimService_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientAdmission), "MedicalClaimService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalClaimService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "MedicalConditionRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalConditionRecord), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedicalCondition), "MedicalConditionRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalConditionRecord), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalDiagnosticMethod), "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalExamGroup), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Encounter_PatientRecords", "PatientMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientMedRecord), "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalEncounter), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Encounter_refDispositionType", "refDischargeDisposition", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDischargeDisposition), "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalEncounter), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalEncounter_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientAdmission), "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalEncounter), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEncounter), "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalReq), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientProblem_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEncounter), "PatientProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientProblem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEncounter), "PatientVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEncounter), "PhysicalExamination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PhysicalExamination), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Prescription_MedicalEncounter", "MedicalEncounter", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEncounter), "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Prescription), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalEquimentsResources), "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientDiagnosticImaging), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalEquimentsResources), "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestOnPatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedicalServiceType), "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalServiceItem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ResearchPartnership), "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalServiceItem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalServiceItem), "MedImagingTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedImagingTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalServiceItem), "MedLabTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalServiceItem), "MOHServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MOHServiceItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PromotionService_MedicalServicePackage", "MedicalServicePackage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalServicePackage), "PromotionService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PromotionService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalTest_refSpecimenType", "refSpecimenType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refSpecimenType), "MedicalTestProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalTestProcedure), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ParaClinicalExamGroup), "MedicalTestProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicalTestProcedure), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedicalTestProcedure), "MedImagingTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedImagingTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalTestProcedure), "MedLabTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedicalTestProcedure), "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalReq), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "MedicationHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedicationHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientDiagnosticImaging), "MedImagingRepository", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedImagingRepository), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalExamGroup), "MedImagingTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedImagingTest), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedImagingTestItem_MedImagingTest", "MedImagingTest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedImagingTest), "MedImagingTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedImagingTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRadiology_MedImagingTest", "MedImagingTest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedImagingTest), "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientDiagnosticImaging), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.TestOnPatientSpecimen), "MedLabRepository", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabRepository), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedLabTestItems_MedLabTest", "MedLabTest", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedLabTest), "MedLabTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTestItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalExamGroup), "MedLabTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTest), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refUnitOfMeasure), "MedLabTest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedLabTest), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedLabTest), "PatientMedLabTestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientMedLabTestResult), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MedLabTestItems), "ParaClinicalReqDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalReqDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedRecOutline_MedRecTmp", "MedRecTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedRecTmp), "MedRecOutline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedRecOutline), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MedRecOutline_MRSection", "MRSection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MRSection), "MedRecOutline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MedRecOutline), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MedRecTmp), "SpecMedRecTmp", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SpecMedRecTmp), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refUnitOfMeasure), "MesrtConv", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MesrtConv), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "MiscDocuments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MiscDocuments), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MiscDocuments_refAdmReferralType", "refAdmReferralType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refAdmReferralType), "MiscDocuments", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MiscDocuments), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MOHServiceItems_Quotation", "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Quotation), "MOHServiceItems", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MOHServiceItems), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MRPar_MRPar", "MRParagraph", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MRParagraph), "MRParagraph1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.MRParagraph), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MRSectionOutline_MRParagraph", "MRParagraph", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MRParagraph), "MRSectionOutline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MRSectionOutline), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_MRSectionOutline_MRSection", "MRSection", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.MRSection), "MRSectionOutline", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.MRSectionOutline), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_NetworkGuestAccount_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Patient), "NetworkGuestAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.NetworkGuestAccount), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_NetworkGuestAccount_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "NetworkGuestAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.NetworkGuestAccount), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.NetworkGuestAccount), "OnlineQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OnlineQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_NextOfKins_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "NextOfKins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.NextOfKins), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_NextOfKins_refFAMRelationship", "refFAMRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refFAMRelationship), "NextOfKins", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.NextOfKins), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OccCareerMOH_refCareerMOH", "refCareerMOH", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refCareerMOH), "OccCareerMOH", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OccCareerMOH), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OccCareerMOH_refOccupation", "refOccupation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refOccupation), "OccCareerMOH", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OccCareerMOH), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OnlineQueue_RegistrationInfo", "RegistrationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.RegistrationInfo), "OnlineQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OnlineQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Operations_OperationSchedule", "OperationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.OperationSchedule), "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Operations), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Operations_refShift", "refShift", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refShift), "Operations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Operations), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OpSkedDistibution_OperationSchedule", "OperationSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.OperationSchedule), "OpSkedDistibution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OpSkedDistibution), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OpSkedDistibution_refRole", "refRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refRole), "OpSkedDistibution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OpSkedDistibution), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_OpSkedDistibution_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.WardInDept), "OpSkedDistibution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.OpSkedDistibution), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Organization_refCountry", "refCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCountry), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Organization), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PharmaceuticalCompany_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Organization), "PharmaceuticalCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PharmaceuticalCompany), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WorkPlace_Organization", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Organization), "WorkPlace", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WorkPlace), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ParaClinicalExamGroup), "ParaClinicalExamGroup1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalExamGroup), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalExamGroup), "SpecifiedParaclinical", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SpecifiedParaclinical), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalReq_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientAdmission), "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalReq), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ParaClinicalReq), "ParaClinicalReqDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ParaClinicalReqDetails), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.ParaClinicalReq), "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientDiagnosticImaging), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalReq), "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestOnPatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.ParaClinicalReqDetails), "PatientMedLabTestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientMedLabTestResult), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientCommonMedRecord), "PastPersonHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PastPersonHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refFAMRelationship), "PastPersonHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PastPersonHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedHisIndex), "PastPersonHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PastPersonHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Patient_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Patient), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Patient_refBloodType", "refBloodType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refBloodType), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Patient), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Patient_refCareerMOH", "refCareerMOH", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refCareerMOH), "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Patient), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientAddressHistory_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientAddressHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAddressHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientAddressHistory_Patient_02", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientAddressHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAddressHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientAdmission_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientClassHistory_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientClassHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientClassHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientPVID_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientPVID", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientPVID), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRadiology_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Patient), "PatientDiagnosticImaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientDiagnosticImaging), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientSpecimen_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientTransaction_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientTransaction), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtMedRecord_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "PatientMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientMedRecord), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RegistrationInfo_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Patient), "RegistrationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RegistrationInfo), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WorkPlace_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Patient), "WorkPlace", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WorkPlace), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientAdmission_PatientClassification", "PatientClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientClassification), "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientAdmission), "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientCommonMedRecord), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientTransaction_PatientAdmission", "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientAdmission), "PatientTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientTransaction), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtAdmission_reDiagnosis", "refDiagnosis", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDiagnosis), "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtAdmission_refAdmissionType", "refAdmissionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refAdmissionType), "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtAdmission_refAdmReferralType", "refAdmReferralType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refAdmReferralType), "PatientAdmission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientAdmission), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtBedFeatures_PtBed", "PatientBed", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientBed), "PatientBedFeatures", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientBedFeatures), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientClassHistory), "PatientTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientTransaction), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PtCHis_PtClassification", "PatientClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientClassification), "PatientClassHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientClassHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientMedRecord), "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientCommonMedRecord), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PatientCommonMedRecord), "PatientVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.TestOnPatientSpecimen), "PatientMedLabTestResult", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientMedLabTestResult), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientProblem_RefProblem", "refProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refProblem), "PatientProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientProblem), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientPVID_PrivacyClass", "PrivacyClass", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PrivacyClass), "PatientPVID", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientPVID), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientSpecimen_refSpecimenType", "refSpecimenType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refSpecimenType), "PatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientSpecimen_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.RoomAllocation), "PatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PatientSpecimen), "TestOnPatientSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.TestOnPatientSpecimen), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientTransaction_refTransactionType", "refTransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refTransactionType), "PatientTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientTransaction), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refUnitOfMeasure), "PatientVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PatientVitalSign_refVitalSign", "refVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refVitalSign), "PatientVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PatientVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refCountry", "refCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCountry), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refDistrict", "refDistrict", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDistrict), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refEducationalLevel", "refEducationalLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refEducationalLevel), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refElthnic", "refElthnic", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refElthnic), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refPersGender", "refPersGender", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refPersGender), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refPersMaritalStatus", "refPersMaritalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refPersMaritalStatus), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refPersRace", "refPersRace", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refPersRace), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refProvince", "refCityProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCityProvince), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refReligion", "refReligion", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refReligion), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Person_refWard", "refWard", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refWard), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Person), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PersonRole_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Person), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PersonRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_UserAccount_Person", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Person), "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.UserAccount), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PersonRole_refRole", "refRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refRole), "PersonRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PersonRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.PharmaceuticalCompany), "ProvidableDrugs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ProvidableDrugs), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PhysicalExamination_RefExamObservation", "refExamObservation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refExamObservation), "PhysicalExamination", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PhysicalExamination), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Prescription), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionHistory_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Prescription), "PrescriptionHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionHistory), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RxHoldConsultation_Prescription", "Prescription", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Prescription), "RxHoldConsultation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RxHoldConsultation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCommonTerm), "PrescriptionDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrescriptionDetail), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PrivilegeRole_UserGroup", "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.UserGroup), "PrivilegeRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PrivilegeRole), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_PromotionService_PromotionPlan", "PromotionPlan", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.PromotionPlan), "PromotionService", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.PromotionService), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Quotation_refCurrency", "refCurrency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refCurrency), "Quotation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Quotation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Realms_refRole", "refRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refRole), "Realms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Realms), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refAllergyCategory), "refAllergyIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refAllergyIndex), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refDistrict_refProvince", "refCityProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCityProvince), "refDistrict", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refDistrict), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refProvince_refCountry", "refCountry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCountry), "refCityProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refCityProvince), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refCLMeasurement), "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refUnitOfMeasure), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Resource_refDepreciationType", "refDepreciationType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDepreciationType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Resource), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refWard_refDistrict", "refDistrict", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDistrict), "refWard", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refWard), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refDrugKind_refDrugKind", "refDrugKind", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refDrugKind), "refDrugKind1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refDrugKind), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refElthnic_refEthnicGroup", "refEthnicGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refEthnicGroup), "refElthnic", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refElthnic), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refExamObservation_refProblem", "refProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refProblem), "refExamObservation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refExamObservation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refJobTitle_refJobBand", "refJobBand", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refJobBand), "refJobTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refJobTitle), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refJobTitle_refJobTitle", "refJobTitle", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refJobTitle), "refJobTitle1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refJobTitle), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refLimVitalSign_refPersGender", "refPersGender", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refPersGender), "refLimVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refLimVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refUnitOfMeasure), "refLimVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refLimVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refLimVitalSign_refVitalSign", "refVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refVitalSign), "refLimVitalSign", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refLimVitalSign), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refMedEquipResourceType), "refMedEquipResourceType1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refMedEquipResourceType), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Resource_refMedEquipResourceType", "refMedEquipResourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedEquipResourceType), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Resource), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refMedHisIndex), "refSocialHisSeverity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refSocialHisSeverity), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RegistrationInfo_refPersGender", "refPersGender", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refPersGender), "RegistrationInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RegistrationInfo), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_SymptomIndicator_refProblem", "refProblem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refProblem), "SymptomIndicator", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.SymptomIndicator), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refTimeFrame_refShift", "refShift", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refShift), "refTimeFrame", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refTimeFrame), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WorkingSchedule_refShift", "refShift", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.refShift), "WorkingSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WorkingSchedule), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_refUnitOfMeasure_SIPrefix", "refSIPrefix", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.refSIPrefix), "refUnitOfMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.refUnitOfMeasure), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RegQueue_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.WardInDept), "RegQueue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RegQueue), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.RoomAllocation), "RescrUsedInOperation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RescrUsedInOperation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Resource_Supplier", "Supplier", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.Supplier), "Resource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Resource), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ResourceLog_RoomAllocation", "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.RoomAllocation), "ResourceLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ResourceLog), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Allocation_WardInDept", "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.WardInDept), "RoomAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.RoomAllocation), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_ServerLog_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.UserAccount), "ServerLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.ServerLog), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_Session_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(SureHisModel.UserAccount), "Session", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.Session), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_UsersInGroup_UserAccount", "UserAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.UserAccount), "UsersInGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.UsersInGroup), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_UsersInGroup_UserGroup", "UserGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.UserGroup), "UsersInGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.UsersInGroup), true)]
[assembly: EdmRelationshipAttribute("SureHisModel", "FK_WardInDept_Ward", "Ward", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SureHisModel.Ward), "WardInDept", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SureHisModel.WardInDept), true)]

#endregion

namespace SureHisModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SureHisEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SureHisEntities object using the connection string found in the 'SureHisEntities' section of the application configuration file.
        /// </summary>
        public SureHisEntities() : base("name=SureHisEntities", "SureHisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SureHisEntities object.
        /// </summary>
        public SureHisEntities(string connectionString) : base(connectionString, "SureHisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SureHisEntities object.
        /// </summary>
        public SureHisEntities(EntityConnection connection) : base(connection, "SureHisEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AcPrincDrug> AcPrincDrug
        {
            get
            {
                if ((_AcPrincDrug == null))
                {
                    _AcPrincDrug = base.CreateObjectSet<AcPrincDrug>("AcPrincDrug");
                }
                return _AcPrincDrug;
            }
        }
        private ObjectSet<AcPrincDrug> _AcPrincDrug;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmNoTemp> AdmNoTemp
        {
            get
            {
                if ((_AdmNoTemp == null))
                {
                    _AdmNoTemp = base.CreateObjectSet<AdmNoTemp>("AdmNoTemp");
                }
                return _AdmNoTemp;
            }
        }
        private ObjectSet<AdmNoTemp> _AdmNoTemp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdmNoTempHolding> AdmNoTempHolding
        {
            get
            {
                if ((_AdmNoTempHolding == null))
                {
                    _AdmNoTempHolding = base.CreateObjectSet<AdmNoTempHolding>("AdmNoTempHolding");
                }
                return _AdmNoTempHolding;
            }
        }
        private ObjectSet<AdmNoTempHolding> _AdmNoTempHolding;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AdvancedSpecialist> AdvancedSpecialist
        {
            get
            {
                if ((_AdvancedSpecialist == null))
                {
                    _AdvancedSpecialist = base.CreateObjectSet<AdvancedSpecialist>("AdvancedSpecialist");
                }
                return _AdvancedSpecialist;
            }
        }
        private ObjectSet<AdvancedSpecialist> _AdvancedSpecialist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Alert> Alert
        {
            get
            {
                if ((_Alert == null))
                {
                    _Alert = base.CreateObjectSet<Alert>("Alert");
                }
                return _Alert;
            }
        }
        private ObjectSet<Alert> _Alert;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AllergyIntolerance> AllergyIntolerance
        {
            get
            {
                if ((_AllergyIntolerance == null))
                {
                    _AllergyIntolerance = base.CreateObjectSet<AllergyIntolerance>("AllergyIntolerance");
                }
                return _AllergyIntolerance;
            }
        }
        private ObjectSet<AllergyIntolerance> _AllergyIntolerance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AntagonistDrug> AntagonistDrug
        {
            get
            {
                if ((_AntagonistDrug == null))
                {
                    _AntagonistDrug = base.CreateObjectSet<AntagonistDrug>("AntagonistDrug");
                }
                return _AntagonistDrug;
            }
        }
        private ObjectSet<AntagonistDrug> _AntagonistDrug;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Application> Application
        {
            get
            {
                if ((_Application == null))
                {
                    _Application = base.CreateObjectSet<Application>("Application");
                }
                return _Application;
            }
        }
        private ObjectSet<Application> _Application;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AppliedMedStandard> AppliedMedStandard
        {
            get
            {
                if ((_AppliedMedStandard == null))
                {
                    _AppliedMedStandard = base.CreateObjectSet<AppliedMedStandard>("AppliedMedStandard");
                }
                return _AppliedMedStandard;
            }
        }
        private ObjectSet<AppliedMedStandard> _AppliedMedStandard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Appointment> Appointment
        {
            get
            {
                if ((_Appointment == null))
                {
                    _Appointment = base.CreateObjectSet<Appointment>("Appointment");
                }
                return _Appointment;
            }
        }
        private ObjectSet<Appointment> _Appointment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ArchitectureResources> ArchitectureResources
        {
            get
            {
                if ((_ArchitectureResources == null))
                {
                    _ArchitectureResources = base.CreateObjectSet<ArchitectureResources>("ArchitectureResources");
                }
                return _ArchitectureResources;
            }
        }
        private ObjectSet<ArchitectureResources> _ArchitectureResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetRole> ASPNetRole
        {
            get
            {
                if ((_ASPNetRole == null))
                {
                    _ASPNetRole = base.CreateObjectSet<ASPNetRole>("ASPNetRole");
                }
                return _ASPNetRole;
            }
        }
        private ObjectSet<ASPNetRole> _ASPNetRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetRolePermission> ASPNetRolePermission
        {
            get
            {
                if ((_ASPNetRolePermission == null))
                {
                    _ASPNetRolePermission = base.CreateObjectSet<ASPNetRolePermission>("ASPNetRolePermission");
                }
                return _ASPNetRolePermission;
            }
        }
        private ObjectSet<ASPNetRolePermission> _ASPNetRolePermission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetToken> ASPNetToken
        {
            get
            {
                if ((_ASPNetToken == null))
                {
                    _ASPNetToken = base.CreateObjectSet<ASPNetToken>("ASPNetToken");
                }
                return _ASPNetToken;
            }
        }
        private ObjectSet<ASPNetToken> _ASPNetToken;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetUser> ASPNetUser
        {
            get
            {
                if ((_ASPNetUser == null))
                {
                    _ASPNetUser = base.CreateObjectSet<ASPNetUser>("ASPNetUser");
                }
                return _ASPNetUser;
            }
        }
        private ObjectSet<ASPNetUser> _ASPNetUser;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetUserClaims> ASPNetUserClaims
        {
            get
            {
                if ((_ASPNetUserClaims == null))
                {
                    _ASPNetUserClaims = base.CreateObjectSet<ASPNetUserClaims>("ASPNetUserClaims");
                }
                return _ASPNetUserClaims;
            }
        }
        private ObjectSet<ASPNetUserClaims> _ASPNetUserClaims;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetUserLogin> ASPNetUserLogin
        {
            get
            {
                if ((_ASPNetUserLogin == null))
                {
                    _ASPNetUserLogin = base.CreateObjectSet<ASPNetUserLogin>("ASPNetUserLogin");
                }
                return _ASPNetUserLogin;
            }
        }
        private ObjectSet<ASPNetUserLogin> _ASPNetUserLogin;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ASPNetUserRole> ASPNetUserRole
        {
            get
            {
                if ((_ASPNetUserRole == null))
                {
                    _ASPNetUserRole = base.CreateObjectSet<ASPNetUserRole>("ASPNetUserRole");
                }
                return _ASPNetUserRole;
            }
        }
        private ObjectSet<ASPNetUserRole> _ASPNetUserRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignMedEquip> AssignMedEquip
        {
            get
            {
                if ((_AssignMedEquip == null))
                {
                    _AssignMedEquip = base.CreateObjectSet<AssignMedEquip>("AssignMedEquip");
                }
                return _AssignMedEquip;
            }
        }
        private ObjectSet<AssignMedEquip> _AssignMedEquip;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssignmentSchedule> AssignmentSchedule
        {
            get
            {
                if ((_AssignmentSchedule == null))
                {
                    _AssignmentSchedule = base.CreateObjectSet<AssignmentSchedule>("AssignmentSchedule");
                }
                return _AssignmentSchedule;
            }
        }
        private ObjectSet<AssignmentSchedule> _AssignmentSchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AttachedDoc> AttachedDoc
        {
            get
            {
                if ((_AttachedDoc == null))
                {
                    _AttachedDoc = base.CreateObjectSet<AttachedDoc>("AttachedDoc");
                }
                return _AttachedDoc;
            }
        }
        private ObjectSet<AttachedDoc> _AttachedDoc;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BedInRoom> BedInRoom
        {
            get
            {
                if ((_BedInRoom == null))
                {
                    _BedInRoom = base.CreateObjectSet<BedInRoom>("BedInRoom");
                }
                return _BedInRoom;
            }
        }
        private ObjectSet<BedInRoom> _BedInRoom;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bloodbank> Bloodbank
        {
            get
            {
                if ((_Bloodbank == null))
                {
                    _Bloodbank = base.CreateObjectSet<Bloodbank>("Bloodbank");
                }
                return _Bloodbank;
            }
        }
        private ObjectSet<Bloodbank> _Bloodbank;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BloodDonation> BloodDonation
        {
            get
            {
                if ((_BloodDonation == null))
                {
                    _BloodDonation = base.CreateObjectSet<BloodDonation>("BloodDonation");
                }
                return _BloodDonation;
            }
        }
        private ObjectSet<BloodDonation> _BloodDonation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BodyRegion> BodyRegion
        {
            get
            {
                if ((_BodyRegion == null))
                {
                    _BodyRegion = base.CreateObjectSet<BodyRegion>("BodyRegion");
                }
                return _BodyRegion;
            }
        }
        private ObjectSet<BodyRegion> _BodyRegion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BusySchedule> BusySchedule
        {
            get
            {
                if ((_BusySchedule == null))
                {
                    _BusySchedule = base.CreateObjectSet<BusySchedule>("BusySchedule");
                }
                return _BusySchedule;
            }
        }
        private ObjectSet<BusySchedule> _BusySchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ChainMedicalServices> ChainMedicalServices
        {
            get
            {
                if ((_ChainMedicalServices == null))
                {
                    _ChainMedicalServices = base.CreateObjectSet<ChainMedicalServices>("ChainMedicalServices");
                }
                return _ChainMedicalServices;
            }
        }
        private ObjectSet<ChainMedicalServices> _ChainMedicalServices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicalIndicatorType> ClinicalIndicatorType
        {
            get
            {
                if ((_ClinicalIndicatorType == null))
                {
                    _ClinicalIndicatorType = base.CreateObjectSet<ClinicalIndicatorType>("ClinicalIndicatorType");
                }
                return _ClinicalIndicatorType;
            }
        }
        private ObjectSet<ClinicalIndicatorType> _ClinicalIndicatorType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicalTrial> ClinicalTrial
        {
            get
            {
                if ((_ClinicalTrial == null))
                {
                    _ClinicalTrial = base.CreateObjectSet<ClinicalTrial>("ClinicalTrial");
                }
                return _ClinicalTrial;
            }
        }
        private ObjectSet<ClinicalTrial> _ClinicalTrial;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClinicalTrialResult> ClinicalTrialResult
        {
            get
            {
                if ((_ClinicalTrialResult == null))
                {
                    _ClinicalTrialResult = base.CreateObjectSet<ClinicalTrialResult>("ClinicalTrialResult");
                }
                return _ClinicalTrialResult;
            }
        }
        private ObjectSet<ClinicalTrialResult> _ClinicalTrialResult;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactDetails> ContactDetails
        {
            get
            {
                if ((_ContactDetails == null))
                {
                    _ContactDetails = base.CreateObjectSet<ContactDetails>("ContactDetails");
                }
                return _ContactDetails;
            }
        }
        private ObjectSet<ContactDetails> _ContactDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contract> Contract
        {
            get
            {
                if ((_Contract == null))
                {
                    _Contract = base.CreateObjectSet<Contract>("Contract");
                }
                return _Contract;
            }
        }
        private ObjectSet<Contract> _Contract;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractChange> ContractChange
        {
            get
            {
                if ((_ContractChange == null))
                {
                    _ContractChange = base.CreateObjectSet<ContractChange>("ContractChange");
                }
                return _ContractChange;
            }
        }
        private ObjectSet<ContractChange> _ContractChange;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractDocument> ContractDocument
        {
            get
            {
                if ((_ContractDocument == null))
                {
                    _ContractDocument = base.CreateObjectSet<ContractDocument>("ContractDocument");
                }
                return _ContractDocument;
            }
        }
        private ObjectSet<ContractDocument> _ContractDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DDI> DDI
        {
            get
            {
                if ((_DDI == null))
                {
                    _DDI = base.CreateObjectSet<DDI>("DDI");
                }
                return _DDI;
            }
        }
        private ObjectSet<DDI> _DDI;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DeathSituationInfo> DeathSituationInfo
        {
            get
            {
                if ((_DeathSituationInfo == null))
                {
                    _DeathSituationInfo = base.CreateObjectSet<DeathSituationInfo>("DeathSituationInfo");
                }
                return _DeathSituationInfo;
            }
        }
        private ObjectSet<DeathSituationInfo> _DeathSituationInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DHCRoomBlock> DHCRoomBlock
        {
            get
            {
                if ((_DHCRoomBlock == null))
                {
                    _DHCRoomBlock = base.CreateObjectSet<DHCRoomBlock>("DHCRoomBlock");
                }
                return _DHCRoomBlock;
            }
        }
        private ObjectSet<DHCRoomBlock> _DHCRoomBlock;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DiagDescribeTmp> DiagDescribeTmp
        {
            get
            {
                if ((_DiagDescribeTmp == null))
                {
                    _DiagDescribeTmp = base.CreateObjectSet<DiagDescribeTmp>("DiagDescribeTmp");
                }
                return _DiagDescribeTmp;
            }
        }
        private ObjectSet<DiagDescribeTmp> _DiagDescribeTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DisposableMDResource> DisposableMDResource
        {
            get
            {
                if ((_DisposableMDResource == null))
                {
                    _DisposableMDResource = base.CreateObjectSet<DisposableMDResource>("DisposableMDResource");
                }
                return _DisposableMDResource;
            }
        }
        private ObjectSet<DisposableMDResource> _DisposableMDResource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocItem> DocItem
        {
            get
            {
                if ((_DocItem == null))
                {
                    _DocItem = base.CreateObjectSet<DocItem>("DocItem");
                }
                return _DocItem;
            }
        }
        private ObjectSet<DocItem> _DocItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Donor> Donor
        {
            get
            {
                if ((_Donor == null))
                {
                    _Donor = base.CreateObjectSet<Donor>("Donor");
                }
                return _Donor;
            }
        }
        private ObjectSet<Donor> _Donor;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DonorMedicalConditions> DonorMedicalConditions
        {
            get
            {
                if ((_DonorMedicalConditions == null))
                {
                    _DonorMedicalConditions = base.CreateObjectSet<DonorMedicalConditions>("DonorMedicalConditions");
                }
                return _DonorMedicalConditions;
            }
        }
        private ObjectSet<DonorMedicalConditions> _DonorMedicalConditions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DonorMedication> DonorMedication
        {
            get
            {
                if ((_DonorMedication == null))
                {
                    _DonorMedication = base.CreateObjectSet<DonorMedication>("DonorMedication");
                }
                return _DonorMedication;
            }
        }
        private ObjectSet<DonorMedication> _DonorMedication;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrAdviceTmp> DrAdviceTmp
        {
            get
            {
                if ((_DrAdviceTmp == null))
                {
                    _DrAdviceTmp = base.CreateObjectSet<DrAdviceTmp>("DrAdviceTmp");
                }
                return _DrAdviceTmp;
            }
        }
        private ObjectSet<DrAdviceTmp> _DrAdviceTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrMedicineAdvice> DrMedicineAdvice
        {
            get
            {
                if ((_DrMedicineAdvice == null))
                {
                    _DrMedicineAdvice = base.CreateObjectSet<DrMedicineAdvice>("DrMedicineAdvice");
                }
                return _DrMedicineAdvice;
            }
        }
        private ObjectSet<DrMedicineAdvice> _DrMedicineAdvice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrMedicineTmp> DrMedicineTmp
        {
            get
            {
                if ((_DrMedicineTmp == null))
                {
                    _DrMedicineTmp = base.CreateObjectSet<DrMedicineTmp>("DrMedicineTmp");
                }
                return _DrMedicineTmp;
            }
        }
        private ObjectSet<DrMedicineTmp> _DrMedicineTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrPrescriptionTmp> DrPrescriptionTmp
        {
            get
            {
                if ((_DrPrescriptionTmp == null))
                {
                    _DrPrescriptionTmp = base.CreateObjectSet<DrPrescriptionTmp>("DrPrescriptionTmp");
                }
                return _DrPrescriptionTmp;
            }
        }
        private ObjectSet<DrPrescriptionTmp> _DrPrescriptionTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrPrescriptionTmps> DrPrescriptionTmps
        {
            get
            {
                if ((_DrPrescriptionTmps == null))
                {
                    _DrPrescriptionTmps = base.CreateObjectSet<DrPrescriptionTmps>("DrPrescriptionTmps");
                }
                return _DrPrescriptionTmps;
            }
        }
        private ObjectSet<DrPrescriptionTmps> _DrPrescriptionTmps;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Drug> Drug
        {
            get
            {
                if ((_Drug == null))
                {
                    _Drug = base.CreateObjectSet<Drug>("Drug");
                }
                return _Drug;
            }
        }
        private ObjectSet<Drug> _Drug;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugConfign> DrugConfign
        {
            get
            {
                if ((_DrugConfign == null))
                {
                    _DrugConfign = base.CreateObjectSet<DrugConfign>("DrugConfign");
                }
                return _DrugConfign;
            }
        }
        private ObjectSet<DrugConfign> _DrugConfign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugInDepartment> DrugInDepartment
        {
            get
            {
                if ((_DrugInDepartment == null))
                {
                    _DrugInDepartment = base.CreateObjectSet<DrugInDepartment>("DrugInDepartment");
                }
                return _DrugInDepartment;
            }
        }
        private ObjectSet<DrugInDepartment> _DrugInDepartment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DrugPrice> DrugPrice
        {
            get
            {
                if ((_DrugPrice == null))
                {
                    _DrugPrice = base.CreateObjectSet<DrugPrice>("DrugPrice");
                }
                return _DrugPrice;
            }
        }
        private ObjectSet<DrugPrice> _DrugPrice;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EduLevel> EduLevel
        {
            get
            {
                if ((_EduLevel == null))
                {
                    _EduLevel = base.CreateObjectSet<EduLevel>("EduLevel");
                }
                return _EduLevel;
            }
        }
        private ObjectSet<EduLevel> _EduLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpAllocation> EmpAllocation
        {
            get
            {
                if ((_EmpAllocation == null))
                {
                    _EmpAllocation = base.CreateObjectSet<EmpAllocation>("EmpAllocation");
                }
                return _EmpAllocation;
            }
        }
        private ObjectSet<EmpAllocation> _EmpAllocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employee
        {
            get
            {
                if ((_Employee == null))
                {
                    _Employee = base.CreateObjectSet<Employee>("Employee");
                }
                return _Employee;
            }
        }
        private ObjectSet<Employee> _Employee;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeAnnualLeave> EmployeeAnnualLeave
        {
            get
            {
                if ((_EmployeeAnnualLeave == null))
                {
                    _EmployeeAnnualLeave = base.CreateObjectSet<EmployeeAnnualLeave>("EmployeeAnnualLeave");
                }
                return _EmployeeAnnualLeave;
            }
        }
        private ObjectSet<EmployeeAnnualLeave> _EmployeeAnnualLeave;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeLeaveTaken> EmployeeLeaveTaken
        {
            get
            {
                if ((_EmployeeLeaveTaken == null))
                {
                    _EmployeeLeaveTaken = base.CreateObjectSet<EmployeeLeaveTaken>("EmployeeLeaveTaken");
                }
                return _EmployeeLeaveTaken;
            }
        }
        private ObjectSet<EmployeeLeaveTaken> _EmployeeLeaveTaken;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employeer> Employeer
        {
            get
            {
                if ((_Employeer == null))
                {
                    _Employeer = base.CreateObjectSet<Employeer>("Employeer");
                }
                return _Employeer;
            }
        }
        private ObjectSet<Employeer> _Employeer;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmpWorkSchedule> EmpWorkSchedule
        {
            get
            {
                if ((_EmpWorkSchedule == null))
                {
                    _EmpWorkSchedule = base.CreateObjectSet<EmpWorkSchedule>("EmpWorkSchedule");
                }
                return _EmpWorkSchedule;
            }
        }
        private ObjectSet<EmpWorkSchedule> _EmpWorkSchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquipHistory> EquipHistory
        {
            get
            {
                if ((_EquipHistory == null))
                {
                    _EquipHistory = base.CreateObjectSet<EquipHistory>("EquipHistory");
                }
                return _EquipHistory;
            }
        }
        private ObjectSet<EquipHistory> _EquipHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquivMedService> EquivMedService
        {
            get
            {
                if ((_EquivMedService == null))
                {
                    _EquivMedService = base.CreateObjectSet<EquivMedService>("EquivMedService");
                }
                return _EquivMedService;
            }
        }
        private ObjectSet<EquivMedService> _EquivMedService;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventHoliday> EventHoliday
        {
            get
            {
                if ((_EventHoliday == null))
                {
                    _EventHoliday = base.CreateObjectSet<EventHoliday>("EventHoliday");
                }
                return _EventHoliday;
            }
        }
        private ObjectSet<EventHoliday> _EventHoliday;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ExamMaintenanceHistory> ExamMaintenanceHistory
        {
            get
            {
                if ((_ExamMaintenanceHistory == null))
                {
                    _ExamMaintenanceHistory = base.CreateObjectSet<ExamMaintenanceHistory>("ExamMaintenanceHistory");
                }
                return _ExamMaintenanceHistory;
            }
        }
        private ObjectSet<ExamMaintenanceHistory> _ExamMaintenanceHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FamilyHistory> FamilyHistory
        {
            get
            {
                if ((_FamilyHistory == null))
                {
                    _FamilyHistory = base.CreateObjectSet<FamilyHistory>("FamilyHistory");
                }
                return _FamilyHistory;
            }
        }
        private ObjectSet<FamilyHistory> _FamilyHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ForeignExchange> ForeignExchange
        {
            get
            {
                if ((_ForeignExchange == null))
                {
                    _ForeignExchange = base.CreateObjectSet<ForeignExchange>("ForeignExchange");
                }
                return _ForeignExchange;
            }
        }
        private ObjectSet<ForeignExchange> _ForeignExchange;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GenericSocialNetwork> GenericSocialNetwork
        {
            get
            {
                if ((_GenericSocialNetwork == null))
                {
                    _GenericSocialNetwork = base.CreateObjectSet<GenericSocialNetwork>("GenericSocialNetwork");
                }
                return _GenericSocialNetwork;
            }
        }
        private ObjectSet<GenericSocialNetwork> _GenericSocialNetwork;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCProvider> HCProvider
        {
            get
            {
                if ((_HCProvider == null))
                {
                    _HCProvider = base.CreateObjectSet<HCProvider>("HCProvider");
                }
                return _HCProvider;
            }
        }
        private ObjectSet<HCProvider> _HCProvider;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCRoomBlock> HCRoomBlock
        {
            get
            {
                if ((_HCRoomBlock == null))
                {
                    _HCRoomBlock = base.CreateObjectSet<HCRoomBlock>("HCRoomBlock");
                }
                return _HCRoomBlock;
            }
        }
        private ObjectSet<HCRoomBlock> _HCRoomBlock;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HCStakeholder> HCStakeholder
        {
            get
            {
                if ((_HCStakeholder == null))
                {
                    _HCStakeholder = base.CreateObjectSet<HCStakeholder>("HCStakeholder");
                }
                return _HCStakeholder;
            }
        }
        private ObjectSet<HCStakeholder> _HCStakeholder;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HealthCareQueue> HealthCareQueue
        {
            get
            {
                if ((_HealthCareQueue == null))
                {
                    _HealthCareQueue = base.CreateObjectSet<HealthCareQueue>("HealthCareQueue");
                }
                return _HealthCareQueue;
            }
        }
        private ObjectSet<HealthCareQueue> _HealthCareQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HealthInsurance> HealthInsurance
        {
            get
            {
                if ((_HealthInsurance == null))
                {
                    _HealthInsurance = base.CreateObjectSet<HealthInsurance>("HealthInsurance");
                }
                return _HealthInsurance;
            }
        }
        private ObjectSet<HealthInsurance> _HealthInsurance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HIAdmission> HIAdmission
        {
            get
            {
                if ((_HIAdmission == null))
                {
                    _HIAdmission = base.CreateObjectSet<HIAdmission>("HIAdmission");
                }
                return _HIAdmission;
            }
        }
        private ObjectSet<HIAdmission> _HIAdmission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HIServiceItem> HIServiceItem
        {
            get
            {
                if ((_HIServiceItem == null))
                {
                    _HIServiceItem = base.CreateObjectSet<HIServiceItem>("HIServiceItem");
                }
                return _HIServiceItem;
            }
        }
        private ObjectSet<HIServiceItem> _HIServiceItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HIServiceItems> HIServiceItems
        {
            get
            {
                if ((_HIServiceItems == null))
                {
                    _HIServiceItems = base.CreateObjectSet<HIServiceItems>("HIServiceItems");
                }
                return _HIServiceItems;
            }
        }
        private ObjectSet<HIServiceItems> _HIServiceItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HistoricalAuditData> HistoricalAuditData
        {
            get
            {
                if ((_HistoricalAuditData == null))
                {
                    _HistoricalAuditData = base.CreateObjectSet<HistoricalAuditData>("HistoricalAuditData");
                }
                return _HistoricalAuditData;
            }
        }
        private ObjectSet<HistoricalAuditData> _HistoricalAuditData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HosFeeTransDetails> HosFeeTransDetails
        {
            get
            {
                if ((_HosFeeTransDetails == null))
                {
                    _HosFeeTransDetails = base.CreateObjectSet<HosFeeTransDetails>("HosFeeTransDetails");
                }
                return _HosFeeTransDetails;
            }
        }
        private ObjectSet<HosFeeTransDetails> _HosFeeTransDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospitalFeeTransaction> HospitalFeeTransaction
        {
            get
            {
                if ((_HospitalFeeTransaction == null))
                {
                    _HospitalFeeTransaction = base.CreateObjectSet<HospitalFeeTransaction>("HospitalFeeTransaction");
                }
                return _HospitalFeeTransaction;
            }
        }
        private ObjectSet<HospitalFeeTransaction> _HospitalFeeTransaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospitalizationHistory> HospitalizationHistory
        {
            get
            {
                if ((_HospitalizationHistory == null))
                {
                    _HospitalizationHistory = base.CreateObjectSet<HospitalizationHistory>("HospitalizationHistory");
                }
                return _HospitalizationHistory;
            }
        }
        private ObjectSet<HospitalizationHistory> _HospitalizationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospitalizationHistoryDetails> HospitalizationHistoryDetails
        {
            get
            {
                if ((_HospitalizationHistoryDetails == null))
                {
                    _HospitalizationHistoryDetails = base.CreateObjectSet<HospitalizationHistoryDetails>("HospitalizationHistoryDetails");
                }
                return _HospitalizationHistoryDetails;
            }
        }
        private ObjectSet<HospitalizationHistoryDetails> _HospitalizationHistoryDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HospitalSpecialist> HospitalSpecialist
        {
            get
            {
                if ((_HospitalSpecialist == null))
                {
                    _HospitalSpecialist = base.CreateObjectSet<HospitalSpecialist>("HospitalSpecialist");
                }
                return _HospitalSpecialist;
            }
        }
        private ObjectSet<HospitalSpecialist> _HospitalSpecialist;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HosRanking> HosRanking
        {
            get
            {
                if ((_HosRanking == null))
                {
                    _HosRanking = base.CreateObjectSet<HosRanking>("HosRanking");
                }
                return _HosRanking;
            }
        }
        private ObjectSet<HosRanking> _HosRanking;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ICD10> ICD10
        {
            get
            {
                if ((_ICD10 == null))
                {
                    _ICD10 = base.CreateObjectSet<ICD10>("ICD10");
                }
                return _ICD10;
            }
        }
        private ObjectSet<ICD10> _ICD10;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ICDChapter> ICDChapter
        {
            get
            {
                if ((_ICDChapter == null))
                {
                    _ICDChapter = base.CreateObjectSet<ICDChapter>("ICDChapter");
                }
                return _ICDChapter;
            }
        }
        private ObjectSet<ICDChapter> _ICDChapter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ICDGroup> ICDGroup
        {
            get
            {
                if ((_ICDGroup == null))
                {
                    _ICDGroup = base.CreateObjectSet<ICDGroup>("ICDGroup");
                }
                return _ICDGroup;
            }
        }
        private ObjectSet<ICDGroup> _ICDGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImmunizationHistory> ImmunizationHistory
        {
            get
            {
                if ((_ImmunizationHistory == null))
                {
                    _ImmunizationHistory = base.CreateObjectSet<ImmunizationHistory>("ImmunizationHistory");
                }
                return _ImmunizationHistory;
            }
        }
        private ObjectSet<ImmunizationHistory> _ImmunizationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InOutType> InOutType
        {
            get
            {
                if ((_InOutType == null))
                {
                    _InOutType = base.CreateObjectSet<InOutType>("InOutType");
                }
                return _InOutType;
            }
        }
        private ObjectSet<InOutType> _InOutType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InOutwardDrug> InOutwardDrug
        {
            get
            {
                if ((_InOutwardDrug == null))
                {
                    _InOutwardDrug = base.CreateObjectSet<InOutwardDrug>("InOutwardDrug");
                }
                return _InOutwardDrug;
            }
        }
        private ObjectSet<InOutwardDrug> _InOutwardDrug;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InputMaskSetting> InputMaskSetting
        {
            get
            {
                if ((_InputMaskSetting == null))
                {
                    _InputMaskSetting = base.CreateObjectSet<InputMaskSetting>("InputMaskSetting");
                }
                return _InputMaskSetting;
            }
        }
        private ObjectSet<InputMaskSetting> _InputMaskSetting;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceBeneficiary> InsuranceBeneficiary
        {
            get
            {
                if ((_InsuranceBeneficiary == null))
                {
                    _InsuranceBeneficiary = base.CreateObjectSet<InsuranceBeneficiary>("InsuranceBeneficiary");
                }
                return _InsuranceBeneficiary;
            }
        }
        private ObjectSet<InsuranceBeneficiary> _InsuranceBeneficiary;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceCompany> InsuranceCompany
        {
            get
            {
                if ((_InsuranceCompany == null))
                {
                    _InsuranceCompany = base.CreateObjectSet<InsuranceCompany>("InsuranceCompany");
                }
                return _InsuranceCompany;
            }
        }
        private ObjectSet<InsuranceCompany> _InsuranceCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceInterests> InsuranceInterests
        {
            get
            {
                if ((_InsuranceInterests == null))
                {
                    _InsuranceInterests = base.CreateObjectSet<InsuranceInterests>("InsuranceInterests");
                }
                return _InsuranceInterests;
            }
        }
        private ObjectSet<InsuranceInterests> _InsuranceInterests;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InsuranceRegQueue> InsuranceRegQueue
        {
            get
            {
                if ((_InsuranceRegQueue == null))
                {
                    _InsuranceRegQueue = base.CreateObjectSet<InsuranceRegQueue>("InsuranceRegQueue");
                }
                return _InsuranceRegQueue;
            }
        }
        private ObjectSet<InsuranceRegQueue> _InsuranceRegQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobHistory> JobHistory
        {
            get
            {
                if ((_JobHistory == null))
                {
                    _JobHistory = base.CreateObjectSet<JobHistory>("JobHistory");
                }
                return _JobHistory;
            }
        }
        private ObjectSet<JobHistory> _JobHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobModel> JobModel
        {
            get
            {
                if ((_JobModel == null))
                {
                    _JobModel = base.CreateObjectSet<JobModel>("JobModel");
                }
                return _JobModel;
            }
        }
        private ObjectSet<JobModel> _JobModel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LanguageLevel> LanguageLevel
        {
            get
            {
                if ((_LanguageLevel == null))
                {
                    _LanguageLevel = base.CreateObjectSet<LanguageLevel>("LanguageLevel");
                }
                return _LanguageLevel;
            }
        }
        private ObjectSet<LanguageLevel> _LanguageLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LotNumber> LotNumber
        {
            get
            {
                if ((_LotNumber == null))
                {
                    _LotNumber = base.CreateObjectSet<LotNumber>("LotNumber");
                }
                return _LotNumber;
            }
        }
        private ObjectSet<LotNumber> _LotNumber;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedEnctrDiagnosis> MedEnctrDiagnosis
        {
            get
            {
                if ((_MedEnctrDiagnosis == null))
                {
                    _MedEnctrDiagnosis = base.CreateObjectSet<MedEnctrDiagnosis>("MedEnctrDiagnosis");
                }
                return _MedEnctrDiagnosis;
            }
        }
        private ObjectSet<MedEnctrDiagnosis> _MedEnctrDiagnosis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalBill> MedicalBill
        {
            get
            {
                if ((_MedicalBill == null))
                {
                    _MedicalBill = base.CreateObjectSet<MedicalBill>("MedicalBill");
                }
                return _MedicalBill;
            }
        }
        private ObjectSet<MedicalBill> _MedicalBill;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalBills> MedicalBills
        {
            get
            {
                if ((_MedicalBills == null))
                {
                    _MedicalBills = base.CreateObjectSet<MedicalBills>("MedicalBills");
                }
                return _MedicalBills;
            }
        }
        private ObjectSet<MedicalBills> _MedicalBills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalClaimService> MedicalClaimService
        {
            get
            {
                if ((_MedicalClaimService == null))
                {
                    _MedicalClaimService = base.CreateObjectSet<MedicalClaimService>("MedicalClaimService");
                }
                return _MedicalClaimService;
            }
        }
        private ObjectSet<MedicalClaimService> _MedicalClaimService;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalConditionRecord> MedicalConditionRecord
        {
            get
            {
                if ((_MedicalConditionRecord == null))
                {
                    _MedicalConditionRecord = base.CreateObjectSet<MedicalConditionRecord>("MedicalConditionRecord");
                }
                return _MedicalConditionRecord;
            }
        }
        private ObjectSet<MedicalConditionRecord> _MedicalConditionRecord;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalDiagnosticMethod> MedicalDiagnosticMethod
        {
            get
            {
                if ((_MedicalDiagnosticMethod == null))
                {
                    _MedicalDiagnosticMethod = base.CreateObjectSet<MedicalDiagnosticMethod>("MedicalDiagnosticMethod");
                }
                return _MedicalDiagnosticMethod;
            }
        }
        private ObjectSet<MedicalDiagnosticMethod> _MedicalDiagnosticMethod;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalEncounter> MedicalEncounter
        {
            get
            {
                if ((_MedicalEncounter == null))
                {
                    _MedicalEncounter = base.CreateObjectSet<MedicalEncounter>("MedicalEncounter");
                }
                return _MedicalEncounter;
            }
        }
        private ObjectSet<MedicalEncounter> _MedicalEncounter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalEquimentsResources> MedicalEquimentsResources
        {
            get
            {
                if ((_MedicalEquimentsResources == null))
                {
                    _MedicalEquimentsResources = base.CreateObjectSet<MedicalEquimentsResources>("MedicalEquimentsResources");
                }
                return _MedicalEquimentsResources;
            }
        }
        private ObjectSet<MedicalEquimentsResources> _MedicalEquimentsResources;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalServiceItem> MedicalServiceItem
        {
            get
            {
                if ((_MedicalServiceItem == null))
                {
                    _MedicalServiceItem = base.CreateObjectSet<MedicalServiceItem>("MedicalServiceItem");
                }
                return _MedicalServiceItem;
            }
        }
        private ObjectSet<MedicalServiceItem> _MedicalServiceItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalServicePackage> MedicalServicePackage
        {
            get
            {
                if ((_MedicalServicePackage == null))
                {
                    _MedicalServicePackage = base.CreateObjectSet<MedicalServicePackage>("MedicalServicePackage");
                }
                return _MedicalServicePackage;
            }
        }
        private ObjectSet<MedicalServicePackage> _MedicalServicePackage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicalTestProcedure> MedicalTestProcedure
        {
            get
            {
                if ((_MedicalTestProcedure == null))
                {
                    _MedicalTestProcedure = base.CreateObjectSet<MedicalTestProcedure>("MedicalTestProcedure");
                }
                return _MedicalTestProcedure;
            }
        }
        private ObjectSet<MedicalTestProcedure> _MedicalTestProcedure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedicationHistory> MedicationHistory
        {
            get
            {
                if ((_MedicationHistory == null))
                {
                    _MedicationHistory = base.CreateObjectSet<MedicationHistory>("MedicationHistory");
                }
                return _MedicationHistory;
            }
        }
        private ObjectSet<MedicationHistory> _MedicationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedImagingRepository> MedImagingRepository
        {
            get
            {
                if ((_MedImagingRepository == null))
                {
                    _MedImagingRepository = base.CreateObjectSet<MedImagingRepository>("MedImagingRepository");
                }
                return _MedImagingRepository;
            }
        }
        private ObjectSet<MedImagingRepository> _MedImagingRepository;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedImagingTest> MedImagingTest
        {
            get
            {
                if ((_MedImagingTest == null))
                {
                    _MedImagingTest = base.CreateObjectSet<MedImagingTest>("MedImagingTest");
                }
                return _MedImagingTest;
            }
        }
        private ObjectSet<MedImagingTest> _MedImagingTest;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedImagingTestItems> MedImagingTestItems
        {
            get
            {
                if ((_MedImagingTestItems == null))
                {
                    _MedImagingTestItems = base.CreateObjectSet<MedImagingTestItems>("MedImagingTestItems");
                }
                return _MedImagingTestItems;
            }
        }
        private ObjectSet<MedImagingTestItems> _MedImagingTestItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedLabRepository> MedLabRepository
        {
            get
            {
                if ((_MedLabRepository == null))
                {
                    _MedLabRepository = base.CreateObjectSet<MedLabRepository>("MedLabRepository");
                }
                return _MedLabRepository;
            }
        }
        private ObjectSet<MedLabRepository> _MedLabRepository;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedLabTest> MedLabTest
        {
            get
            {
                if ((_MedLabTest == null))
                {
                    _MedLabTest = base.CreateObjectSet<MedLabTest>("MedLabTest");
                }
                return _MedLabTest;
            }
        }
        private ObjectSet<MedLabTest> _MedLabTest;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedLabTestItems> MedLabTestItems
        {
            get
            {
                if ((_MedLabTestItems == null))
                {
                    _MedLabTestItems = base.CreateObjectSet<MedLabTestItems>("MedLabTestItems");
                }
                return _MedLabTestItems;
            }
        }
        private ObjectSet<MedLabTestItems> _MedLabTestItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedRecOutline> MedRecOutline
        {
            get
            {
                if ((_MedRecOutline == null))
                {
                    _MedRecOutline = base.CreateObjectSet<MedRecOutline>("MedRecOutline");
                }
                return _MedRecOutline;
            }
        }
        private ObjectSet<MedRecOutline> _MedRecOutline;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedRecTmp> MedRecTmp
        {
            get
            {
                if ((_MedRecTmp == null))
                {
                    _MedRecTmp = base.CreateObjectSet<MedRecTmp>("MedRecTmp");
                }
                return _MedRecTmp;
            }
        }
        private ObjectSet<MedRecTmp> _MedRecTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MedSerInDept> MedSerInDept
        {
            get
            {
                if ((_MedSerInDept == null))
                {
                    _MedSerInDept = base.CreateObjectSet<MedSerInDept>("MedSerInDept");
                }
                return _MedSerInDept;
            }
        }
        private ObjectSet<MedSerInDept> _MedSerInDept;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MesrtConv> MesrtConv
        {
            get
            {
                if ((_MesrtConv == null))
                {
                    _MesrtConv = base.CreateObjectSet<MesrtConv>("MesrtConv");
                }
                return _MesrtConv;
            }
        }
        private ObjectSet<MesrtConv> _MesrtConv;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MiscDocuments> MiscDocuments
        {
            get
            {
                if ((_MiscDocuments == null))
                {
                    _MiscDocuments = base.CreateObjectSet<MiscDocuments>("MiscDocuments");
                }
                return _MiscDocuments;
            }
        }
        private ObjectSet<MiscDocuments> _MiscDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MOHServiceItems> MOHServiceItems
        {
            get
            {
                if ((_MOHServiceItems == null))
                {
                    _MOHServiceItems = base.CreateObjectSet<MOHServiceItems>("MOHServiceItems");
                }
                return _MOHServiceItems;
            }
        }
        private ObjectSet<MOHServiceItems> _MOHServiceItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRParagraph> MRParagraph
        {
            get
            {
                if ((_MRParagraph == null))
                {
                    _MRParagraph = base.CreateObjectSet<MRParagraph>("MRParagraph");
                }
                return _MRParagraph;
            }
        }
        private ObjectSet<MRParagraph> _MRParagraph;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRSection> MRSection
        {
            get
            {
                if ((_MRSection == null))
                {
                    _MRSection = base.CreateObjectSet<MRSection>("MRSection");
                }
                return _MRSection;
            }
        }
        private ObjectSet<MRSection> _MRSection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MRSectionOutline> MRSectionOutline
        {
            get
            {
                if ((_MRSectionOutline == null))
                {
                    _MRSectionOutline = base.CreateObjectSet<MRSectionOutline>("MRSectionOutline");
                }
                return _MRSectionOutline;
            }
        }
        private ObjectSet<MRSectionOutline> _MRSectionOutline;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NetworkGuestAccount> NetworkGuestAccount
        {
            get
            {
                if ((_NetworkGuestAccount == null))
                {
                    _NetworkGuestAccount = base.CreateObjectSet<NetworkGuestAccount>("NetworkGuestAccount");
                }
                return _NetworkGuestAccount;
            }
        }
        private ObjectSet<NetworkGuestAccount> _NetworkGuestAccount;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NextOfKins> NextOfKins
        {
            get
            {
                if ((_NextOfKins == null))
                {
                    _NextOfKins = base.CreateObjectSet<NextOfKins>("NextOfKins");
                }
                return _NextOfKins;
            }
        }
        private ObjectSet<NextOfKins> _NextOfKins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OccCareerMOH> OccCareerMOH
        {
            get
            {
                if ((_OccCareerMOH == null))
                {
                    _OccCareerMOH = base.CreateObjectSet<OccCareerMOH>("OccCareerMOH");
                }
                return _OccCareerMOH;
            }
        }
        private ObjectSet<OccCareerMOH> _OccCareerMOH;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OnlineQueue> OnlineQueue
        {
            get
            {
                if ((_OnlineQueue == null))
                {
                    _OnlineQueue = base.CreateObjectSet<OnlineQueue>("OnlineQueue");
                }
                return _OnlineQueue;
            }
        }
        private ObjectSet<OnlineQueue> _OnlineQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Operations> Operations
        {
            get
            {
                if ((_Operations == null))
                {
                    _Operations = base.CreateObjectSet<Operations>("Operations");
                }
                return _Operations;
            }
        }
        private ObjectSet<Operations> _Operations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OperationSchedule> OperationSchedule
        {
            get
            {
                if ((_OperationSchedule == null))
                {
                    _OperationSchedule = base.CreateObjectSet<OperationSchedule>("OperationSchedule");
                }
                return _OperationSchedule;
            }
        }
        private ObjectSet<OperationSchedule> _OperationSchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OpSkedDistibution> OpSkedDistibution
        {
            get
            {
                if ((_OpSkedDistibution == null))
                {
                    _OpSkedDistibution = base.CreateObjectSet<OpSkedDistibution>("OpSkedDistibution");
                }
                return _OpSkedDistibution;
            }
        }
        private ObjectSet<OpSkedDistibution> _OpSkedDistibution;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organization
        {
            get
            {
                if ((_Organization == null))
                {
                    _Organization = base.CreateObjectSet<Organization>("Organization");
                }
                return _Organization;
            }
        }
        private ObjectSet<Organization> _Organization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParaClinicalExamGroup> ParaClinicalExamGroup
        {
            get
            {
                if ((_ParaClinicalExamGroup == null))
                {
                    _ParaClinicalExamGroup = base.CreateObjectSet<ParaClinicalExamGroup>("ParaClinicalExamGroup");
                }
                return _ParaClinicalExamGroup;
            }
        }
        private ObjectSet<ParaClinicalExamGroup> _ParaClinicalExamGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParaClinicalReq> ParaClinicalReq
        {
            get
            {
                if ((_ParaClinicalReq == null))
                {
                    _ParaClinicalReq = base.CreateObjectSet<ParaClinicalReq>("ParaClinicalReq");
                }
                return _ParaClinicalReq;
            }
        }
        private ObjectSet<ParaClinicalReq> _ParaClinicalReq;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ParaClinicalReqDetails> ParaClinicalReqDetails
        {
            get
            {
                if ((_ParaClinicalReqDetails == null))
                {
                    _ParaClinicalReqDetails = base.CreateObjectSet<ParaClinicalReqDetails>("ParaClinicalReqDetails");
                }
                return _ParaClinicalReqDetails;
            }
        }
        private ObjectSet<ParaClinicalReqDetails> _ParaClinicalReqDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PastPersonHistory> PastPersonHistory
        {
            get
            {
                if ((_PastPersonHistory == null))
                {
                    _PastPersonHistory = base.CreateObjectSet<PastPersonHistory>("PastPersonHistory");
                }
                return _PastPersonHistory;
            }
        }
        private ObjectSet<PastPersonHistory> _PastPersonHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patient
        {
            get
            {
                if ((_Patient == null))
                {
                    _Patient = base.CreateObjectSet<Patient>("Patient");
                }
                return _Patient;
            }
        }
        private ObjectSet<Patient> _Patient;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientAddressHistory> PatientAddressHistory
        {
            get
            {
                if ((_PatientAddressHistory == null))
                {
                    _PatientAddressHistory = base.CreateObjectSet<PatientAddressHistory>("PatientAddressHistory");
                }
                return _PatientAddressHistory;
            }
        }
        private ObjectSet<PatientAddressHistory> _PatientAddressHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientAdmission> PatientAdmission
        {
            get
            {
                if ((_PatientAdmission == null))
                {
                    _PatientAdmission = base.CreateObjectSet<PatientAdmission>("PatientAdmission");
                }
                return _PatientAdmission;
            }
        }
        private ObjectSet<PatientAdmission> _PatientAdmission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientBed> PatientBed
        {
            get
            {
                if ((_PatientBed == null))
                {
                    _PatientBed = base.CreateObjectSet<PatientBed>("PatientBed");
                }
                return _PatientBed;
            }
        }
        private ObjectSet<PatientBed> _PatientBed;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientBedFeatures> PatientBedFeatures
        {
            get
            {
                if ((_PatientBedFeatures == null))
                {
                    _PatientBedFeatures = base.CreateObjectSet<PatientBedFeatures>("PatientBedFeatures");
                }
                return _PatientBedFeatures;
            }
        }
        private ObjectSet<PatientBedFeatures> _PatientBedFeatures;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientClassHistory> PatientClassHistory
        {
            get
            {
                if ((_PatientClassHistory == null))
                {
                    _PatientClassHistory = base.CreateObjectSet<PatientClassHistory>("PatientClassHistory");
                }
                return _PatientClassHistory;
            }
        }
        private ObjectSet<PatientClassHistory> _PatientClassHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientClassification> PatientClassification
        {
            get
            {
                if ((_PatientClassification == null))
                {
                    _PatientClassification = base.CreateObjectSet<PatientClassification>("PatientClassification");
                }
                return _PatientClassification;
            }
        }
        private ObjectSet<PatientClassification> _PatientClassification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientCommonMedRecord> PatientCommonMedRecord
        {
            get
            {
                if ((_PatientCommonMedRecord == null))
                {
                    _PatientCommonMedRecord = base.CreateObjectSet<PatientCommonMedRecord>("PatientCommonMedRecord");
                }
                return _PatientCommonMedRecord;
            }
        }
        private ObjectSet<PatientCommonMedRecord> _PatientCommonMedRecord;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                if ((_PatientDiagnosticImaging == null))
                {
                    _PatientDiagnosticImaging = base.CreateObjectSet<PatientDiagnosticImaging>("PatientDiagnosticImaging");
                }
                return _PatientDiagnosticImaging;
            }
        }
        private ObjectSet<PatientDiagnosticImaging> _PatientDiagnosticImaging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientInBedRoom> PatientInBedRoom
        {
            get
            {
                if ((_PatientInBedRoom == null))
                {
                    _PatientInBedRoom = base.CreateObjectSet<PatientInBedRoom>("PatientInBedRoom");
                }
                return _PatientInBedRoom;
            }
        }
        private ObjectSet<PatientInBedRoom> _PatientInBedRoom;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientInvoices> PatientInvoices
        {
            get
            {
                if ((_PatientInvoices == null))
                {
                    _PatientInvoices = base.CreateObjectSet<PatientInvoices>("PatientInvoices");
                }
                return _PatientInvoices;
            }
        }
        private ObjectSet<PatientInvoices> _PatientInvoices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientMedLabTestResult> PatientMedLabTestResult
        {
            get
            {
                if ((_PatientMedLabTestResult == null))
                {
                    _PatientMedLabTestResult = base.CreateObjectSet<PatientMedLabTestResult>("PatientMedLabTestResult");
                }
                return _PatientMedLabTestResult;
            }
        }
        private ObjectSet<PatientMedLabTestResult> _PatientMedLabTestResult;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientMedRecord> PatientMedRecord
        {
            get
            {
                if ((_PatientMedRecord == null))
                {
                    _PatientMedRecord = base.CreateObjectSet<PatientMedRecord>("PatientMedRecord");
                }
                return _PatientMedRecord;
            }
        }
        private ObjectSet<PatientMedRecord> _PatientMedRecord;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientProblem> PatientProblem
        {
            get
            {
                if ((_PatientProblem == null))
                {
                    _PatientProblem = base.CreateObjectSet<PatientProblem>("PatientProblem");
                }
                return _PatientProblem;
            }
        }
        private ObjectSet<PatientProblem> _PatientProblem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientPVID> PatientPVID
        {
            get
            {
                if ((_PatientPVID == null))
                {
                    _PatientPVID = base.CreateObjectSet<PatientPVID>("PatientPVID");
                }
                return _PatientPVID;
            }
        }
        private ObjectSet<PatientPVID> _PatientPVID;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientSpecimen> PatientSpecimen
        {
            get
            {
                if ((_PatientSpecimen == null))
                {
                    _PatientSpecimen = base.CreateObjectSet<PatientSpecimen>("PatientSpecimen");
                }
                return _PatientSpecimen;
            }
        }
        private ObjectSet<PatientSpecimen> _PatientSpecimen;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientTransaction> PatientTransaction
        {
            get
            {
                if ((_PatientTransaction == null))
                {
                    _PatientTransaction = base.CreateObjectSet<PatientTransaction>("PatientTransaction");
                }
                return _PatientTransaction;
            }
        }
        private ObjectSet<PatientTransaction> _PatientTransaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PatientVitalSign> PatientVitalSign
        {
            get
            {
                if ((_PatientVitalSign == null))
                {
                    _PatientVitalSign = base.CreateObjectSet<PatientVitalSign>("PatientVitalSign");
                }
                return _PatientVitalSign;
            }
        }
        private ObjectSet<PatientVitalSign> _PatientVitalSign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonalProperty> PersonalProperty
        {
            get
            {
                if ((_PersonalProperty == null))
                {
                    _PersonalProperty = base.CreateObjectSet<PersonalProperty>("PersonalProperty");
                }
                return _PersonalProperty;
            }
        }
        private ObjectSet<PersonalProperty> _PersonalProperty;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonRole> PersonRole
        {
            get
            {
                if ((_PersonRole == null))
                {
                    _PersonRole = base.CreateObjectSet<PersonRole>("PersonRole");
                }
                return _PersonRole;
            }
        }
        private ObjectSet<PersonRole> _PersonRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PharmaceuticalCompany> PharmaceuticalCompany
        {
            get
            {
                if ((_PharmaceuticalCompany == null))
                {
                    _PharmaceuticalCompany = base.CreateObjectSet<PharmaceuticalCompany>("PharmaceuticalCompany");
                }
                return _PharmaceuticalCompany;
            }
        }
        private ObjectSet<PharmaceuticalCompany> _PharmaceuticalCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PhysicalExamination> PhysicalExamination
        {
            get
            {
                if ((_PhysicalExamination == null))
                {
                    _PhysicalExamination = base.CreateObjectSet<PhysicalExamination>("PhysicalExamination");
                }
                return _PhysicalExamination;
            }
        }
        private ObjectSet<PhysicalExamination> _PhysicalExamination;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Prescription> Prescription
        {
            get
            {
                if ((_Prescription == null))
                {
                    _Prescription = base.CreateObjectSet<Prescription>("Prescription");
                }
                return _Prescription;
            }
        }
        private ObjectSet<Prescription> _Prescription;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrescriptionDetail> PrescriptionDetail
        {
            get
            {
                if ((_PrescriptionDetail == null))
                {
                    _PrescriptionDetail = base.CreateObjectSet<PrescriptionDetail>("PrescriptionDetail");
                }
                return _PrescriptionDetail;
            }
        }
        private ObjectSet<PrescriptionDetail> _PrescriptionDetail;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrescriptionHistory> PrescriptionHistory
        {
            get
            {
                if ((_PrescriptionHistory == null))
                {
                    _PrescriptionHistory = base.CreateObjectSet<PrescriptionHistory>("PrescriptionHistory");
                }
                return _PrescriptionHistory;
            }
        }
        private ObjectSet<PrescriptionHistory> _PrescriptionHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PriceList> PriceList
        {
            get
            {
                if ((_PriceList == null))
                {
                    _PriceList = base.CreateObjectSet<PriceList>("PriceList");
                }
                return _PriceList;
            }
        }
        private ObjectSet<PriceList> _PriceList;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivacyClass> PrivacyClass
        {
            get
            {
                if ((_PrivacyClass == null))
                {
                    _PrivacyClass = base.CreateObjectSet<PrivacyClass>("PrivacyClass");
                }
                return _PrivacyClass;
            }
        }
        private ObjectSet<PrivacyClass> _PrivacyClass;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PrivilegeRole> PrivilegeRole
        {
            get
            {
                if ((_PrivilegeRole == null))
                {
                    _PrivilegeRole = base.CreateObjectSet<PrivilegeRole>("PrivilegeRole");
                }
                return _PrivilegeRole;
            }
        }
        private ObjectSet<PrivilegeRole> _PrivilegeRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromotionPlan> PromotionPlan
        {
            get
            {
                if ((_PromotionPlan == null))
                {
                    _PromotionPlan = base.CreateObjectSet<PromotionPlan>("PromotionPlan");
                }
                return _PromotionPlan;
            }
        }
        private ObjectSet<PromotionPlan> _PromotionPlan;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PromotionService> PromotionService
        {
            get
            {
                if ((_PromotionService == null))
                {
                    _PromotionService = base.CreateObjectSet<PromotionService>("PromotionService");
                }
                return _PromotionService;
            }
        }
        private ObjectSet<PromotionService> _PromotionService;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProvidableDrugs> ProvidableDrugs
        {
            get
            {
                if ((_ProvidableDrugs == null))
                {
                    _ProvidableDrugs = base.CreateObjectSet<ProvidableDrugs>("ProvidableDrugs");
                }
                return _ProvidableDrugs;
            }
        }
        private ObjectSet<ProvidableDrugs> _ProvidableDrugs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PtCodeCheckDigitTmp> PtCodeCheckDigitTmp
        {
            get
            {
                if ((_PtCodeCheckDigitTmp == null))
                {
                    _PtCodeCheckDigitTmp = base.CreateObjectSet<PtCodeCheckDigitTmp>("PtCodeCheckDigitTmp");
                }
                return _PtCodeCheckDigitTmp;
            }
        }
        private ObjectSet<PtCodeCheckDigitTmp> _PtCodeCheckDigitTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quotation> Quotation
        {
            get
            {
                if ((_Quotation == null))
                {
                    _Quotation = base.CreateObjectSet<Quotation>("Quotation");
                }
                return _Quotation;
            }
        }
        private ObjectSet<Quotation> _Quotation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Realms> Realms
        {
            get
            {
                if ((_Realms == null))
                {
                    _Realms = base.CreateObjectSet<Realms>("Realms");
                }
                return _Realms;
            }
        }
        private ObjectSet<Realms> _Realms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAcademicTile> refAcademicTile
        {
            get
            {
                if ((_refAcademicTile == null))
                {
                    _refAcademicTile = base.CreateObjectSet<refAcademicTile>("refAcademicTile");
                }
                return _refAcademicTile;
            }
        }
        private ObjectSet<refAcademicTile> _refAcademicTile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refActiviePrinciple> refActiviePrinciple
        {
            get
            {
                if ((_refActiviePrinciple == null))
                {
                    _refActiviePrinciple = base.CreateObjectSet<refActiviePrinciple>("refActiviePrinciple");
                }
                return _refActiviePrinciple;
            }
        }
        private ObjectSet<refActiviePrinciple> _refActiviePrinciple;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAdmissionType> refAdmissionType
        {
            get
            {
                if ((_refAdmissionType == null))
                {
                    _refAdmissionType = base.CreateObjectSet<refAdmissionType>("refAdmissionType");
                }
                return _refAdmissionType;
            }
        }
        private ObjectSet<refAdmissionType> _refAdmissionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAdmReferralType> refAdmReferralType
        {
            get
            {
                if ((_refAdmReferralType == null))
                {
                    _refAdmReferralType = base.CreateObjectSet<refAdmReferralType>("refAdmReferralType");
                }
                return _refAdmReferralType;
            }
        }
        private ObjectSet<refAdmReferralType> _refAdmReferralType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAllergyCategory> refAllergyCategory
        {
            get
            {
                if ((_refAllergyCategory == null))
                {
                    _refAllergyCategory = base.CreateObjectSet<refAllergyCategory>("refAllergyCategory");
                }
                return _refAllergyCategory;
            }
        }
        private ObjectSet<refAllergyCategory> _refAllergyCategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAllergyIndex> refAllergyIndex
        {
            get
            {
                if ((_refAllergyIndex == null))
                {
                    _refAllergyIndex = base.CreateObjectSet<refAllergyIndex>("refAllergyIndex");
                }
                return _refAllergyIndex;
            }
        }
        private ObjectSet<refAllergyIndex> _refAllergyIndex;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAnnTemp> refAnnTemp
        {
            get
            {
                if ((_refAnnTemp == null))
                {
                    _refAnnTemp = base.CreateObjectSet<refAnnTemp>("refAnnTemp");
                }
                return _refAnnTemp;
            }
        }
        private ObjectSet<refAnnTemp> _refAnnTemp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refAppConfig> refAppConfig
        {
            get
            {
                if ((_refAppConfig == null))
                {
                    _refAppConfig = base.CreateObjectSet<refAppConfig>("refAppConfig");
                }
                return _refAppConfig;
            }
        }
        private ObjectSet<refAppConfig> _refAppConfig;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refBloodType> refBloodType
        {
            get
            {
                if ((_refBloodType == null))
                {
                    _refBloodType = base.CreateObjectSet<refBloodType>("refBloodType");
                }
                return _refBloodType;
            }
        }
        private ObjectSet<refBloodType> _refBloodType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCareerMOH> refCareerMOH
        {
            get
            {
                if ((_refCareerMOH == null))
                {
                    _refCareerMOH = base.CreateObjectSet<refCareerMOH>("refCareerMOH");
                }
                return _refCareerMOH;
            }
        }
        private ObjectSet<refCareerMOH> _refCareerMOH;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCertification> refCertification
        {
            get
            {
                if ((_refCertification == null))
                {
                    _refCertification = base.CreateObjectSet<refCertification>("refCertification");
                }
                return _refCertification;
            }
        }
        private ObjectSet<refCertification> _refCertification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCityProvince> refCityProvince
        {
            get
            {
                if ((_refCityProvince == null))
                {
                    _refCityProvince = base.CreateObjectSet<refCityProvince>("refCityProvince");
                }
                return _refCityProvince;
            }
        }
        private ObjectSet<refCityProvince> _refCityProvince;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCLMeasurement> refCLMeasurement
        {
            get
            {
                if ((_refCLMeasurement == null))
                {
                    _refCLMeasurement = base.CreateObjectSet<refCLMeasurement>("refCLMeasurement");
                }
                return _refCLMeasurement;
            }
        }
        private ObjectSet<refCLMeasurement> _refCLMeasurement;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCommonTerm> refCommonTerm
        {
            get
            {
                if ((_refCommonTerm == null))
                {
                    _refCommonTerm = base.CreateObjectSet<refCommonTerm>("refCommonTerm");
                }
                return _refCommonTerm;
            }
        }
        private ObjectSet<refCommonTerm> _refCommonTerm;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCountry> refCountry
        {
            get
            {
                if ((_refCountry == null))
                {
                    _refCountry = base.CreateObjectSet<refCountry>("refCountry");
                }
                return _refCountry;
            }
        }
        private ObjectSet<refCountry> _refCountry;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refCurrency> refCurrency
        {
            get
            {
                if ((_refCurrency == null))
                {
                    _refCurrency = base.CreateObjectSet<refCurrency>("refCurrency");
                }
                return _refCurrency;
            }
        }
        private ObjectSet<refCurrency> _refCurrency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDepartment> refDepartment
        {
            get
            {
                if ((_refDepartment == null))
                {
                    _refDepartment = base.CreateObjectSet<refDepartment>("refDepartment");
                }
                return _refDepartment;
            }
        }
        private ObjectSet<refDepartment> _refDepartment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDepreciationType> refDepreciationType
        {
            get
            {
                if ((_refDepreciationType == null))
                {
                    _refDepreciationType = base.CreateObjectSet<refDepreciationType>("refDepreciationType");
                }
                return _refDepreciationType;
            }
        }
        private ObjectSet<refDepreciationType> _refDepreciationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDiagnosis> refDiagnosis
        {
            get
            {
                if ((_refDiagnosis == null))
                {
                    _refDiagnosis = base.CreateObjectSet<refDiagnosis>("refDiagnosis");
                }
                return _refDiagnosis;
            }
        }
        private ObjectSet<refDiagnosis> _refDiagnosis;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDischargeDisposition> refDischargeDisposition
        {
            get
            {
                if ((_refDischargeDisposition == null))
                {
                    _refDischargeDisposition = base.CreateObjectSet<refDischargeDisposition>("refDischargeDisposition");
                }
                return _refDischargeDisposition;
            }
        }
        private ObjectSet<refDischargeDisposition> _refDischargeDisposition;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDistrict> refDistrict
        {
            get
            {
                if ((_refDistrict == null))
                {
                    _refDistrict = base.CreateObjectSet<refDistrict>("refDistrict");
                }
                return _refDistrict;
            }
        }
        private ObjectSet<refDistrict> _refDistrict;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refDrugKind> refDrugKind
        {
            get
            {
                if ((_refDrugKind == null))
                {
                    _refDrugKind = base.CreateObjectSet<refDrugKind>("refDrugKind");
                }
                return _refDrugKind;
            }
        }
        private ObjectSet<refDrugKind> _refDrugKind;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refEducationalLevel> refEducationalLevel
        {
            get
            {
                if ((_refEducationalLevel == null))
                {
                    _refEducationalLevel = base.CreateObjectSet<refEducationalLevel>("refEducationalLevel");
                }
                return _refEducationalLevel;
            }
        }
        private ObjectSet<refEducationalLevel> _refEducationalLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refElthnic> refElthnic
        {
            get
            {
                if ((_refElthnic == null))
                {
                    _refElthnic = base.CreateObjectSet<refElthnic>("refElthnic");
                }
                return _refElthnic;
            }
        }
        private ObjectSet<refElthnic> _refElthnic;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refEthnicGroup> refEthnicGroup
        {
            get
            {
                if ((_refEthnicGroup == null))
                {
                    _refEthnicGroup = base.CreateObjectSet<refEthnicGroup>("refEthnicGroup");
                }
                return _refEthnicGroup;
            }
        }
        private ObjectSet<refEthnicGroup> _refEthnicGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refExamAction> refExamAction
        {
            get
            {
                if ((_refExamAction == null))
                {
                    _refExamAction = base.CreateObjectSet<refExamAction>("refExamAction");
                }
                return _refExamAction;
            }
        }
        private ObjectSet<refExamAction> _refExamAction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refExamObservation> refExamObservation
        {
            get
            {
                if ((_refExamObservation == null))
                {
                    _refExamObservation = base.CreateObjectSet<refExamObservation>("refExamObservation");
                }
                return _refExamObservation;
            }
        }
        private ObjectSet<refExamObservation> _refExamObservation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refFAMRelationship> refFAMRelationship
        {
            get
            {
                if ((_refFAMRelationship == null))
                {
                    _refFAMRelationship = base.CreateObjectSet<refFAMRelationship>("refFAMRelationship");
                }
                return _refFAMRelationship;
            }
        }
        private ObjectSet<refFAMRelationship> _refFAMRelationship;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refHL7> refHL7
        {
            get
            {
                if ((_refHL7 == null))
                {
                    _refHL7 = base.CreateObjectSet<refHL7>("refHL7");
                }
                return _refHL7;
            }
        }
        private ObjectSet<refHL7> _refHL7;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refHumanLanguage> refHumanLanguage
        {
            get
            {
                if ((_refHumanLanguage == null))
                {
                    _refHumanLanguage = base.CreateObjectSet<refHumanLanguage>("refHumanLanguage");
                }
                return _refHumanLanguage;
            }
        }
        private ObjectSet<refHumanLanguage> _refHumanLanguage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refImmunization> refImmunization
        {
            get
            {
                if ((_refImmunization == null))
                {
                    _refImmunization = base.CreateObjectSet<refImmunization>("refImmunization");
                }
                return _refImmunization;
            }
        }
        private ObjectSet<refImmunization> _refImmunization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refInstUniversity> refInstUniversity
        {
            get
            {
                if ((_refInstUniversity == null))
                {
                    _refInstUniversity = base.CreateObjectSet<refInstUniversity>("refInstUniversity");
                }
                return _refInstUniversity;
            }
        }
        private ObjectSet<refInstUniversity> _refInstUniversity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refInsurKind> refInsurKind
        {
            get
            {
                if ((_refInsurKind == null))
                {
                    _refInsurKind = base.CreateObjectSet<refInsurKind>("refInsurKind");
                }
                return _refInsurKind;
            }
        }
        private ObjectSet<refInsurKind> _refInsurKind;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refInternalReceiptType> refInternalReceiptType
        {
            get
            {
                if ((_refInternalReceiptType == null))
                {
                    _refInternalReceiptType = base.CreateObjectSet<refInternalReceiptType>("refInternalReceiptType");
                }
                return _refInternalReceiptType;
            }
        }
        private ObjectSet<refInternalReceiptType> _refInternalReceiptType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refItemType> refItemType
        {
            get
            {
                if ((_refItemType == null))
                {
                    _refItemType = base.CreateObjectSet<refItemType>("refItemType");
                }
                return _refItemType;
            }
        }
        private ObjectSet<refItemType> _refItemType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refJobBand> refJobBand
        {
            get
            {
                if ((_refJobBand == null))
                {
                    _refJobBand = base.CreateObjectSet<refJobBand>("refJobBand");
                }
                return _refJobBand;
            }
        }
        private ObjectSet<refJobBand> _refJobBand;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refJobTitle> refJobTitle
        {
            get
            {
                if ((_refJobTitle == null))
                {
                    _refJobTitle = base.CreateObjectSet<refJobTitle>("refJobTitle");
                }
                return _refJobTitle;
            }
        }
        private ObjectSet<refJobTitle> _refJobTitle;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refLimVitalSign> refLimVitalSign
        {
            get
            {
                if ((_refLimVitalSign == null))
                {
                    _refLimVitalSign = base.CreateObjectSet<refLimVitalSign>("refLimVitalSign");
                }
                return _refLimVitalSign;
            }
        }
        private ObjectSet<refLimVitalSign> _refLimVitalSign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refLookup> refLookup
        {
            get
            {
                if ((_refLookup == null))
                {
                    _refLookup = base.CreateObjectSet<refLookup>("refLookup");
                }
                return _refLookup;
            }
        }
        private ObjectSet<refLookup> _refLookup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedcnAdminRoute> refMedcnAdminRoute
        {
            get
            {
                if ((_refMedcnAdminRoute == null))
                {
                    _refMedcnAdminRoute = base.CreateObjectSet<refMedcnAdminRoute>("refMedcnAdminRoute");
                }
                return _refMedcnAdminRoute;
            }
        }
        private ObjectSet<refMedcnAdminRoute> _refMedcnAdminRoute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedcnVehicleForm> refMedcnVehicleForm
        {
            get
            {
                if ((_refMedcnVehicleForm == null))
                {
                    _refMedcnVehicleForm = base.CreateObjectSet<refMedcnVehicleForm>("refMedcnVehicleForm");
                }
                return _refMedcnVehicleForm;
            }
        }
        private ObjectSet<refMedcnVehicleForm> _refMedcnVehicleForm;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedEquipResourceType> refMedEquipResourceType
        {
            get
            {
                if ((_refMedEquipResourceType == null))
                {
                    _refMedEquipResourceType = base.CreateObjectSet<refMedEquipResourceType>("refMedEquipResourceType");
                }
                return _refMedEquipResourceType;
            }
        }
        private ObjectSet<refMedEquipResourceType> _refMedEquipResourceType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedHisIndex> refMedHisIndex
        {
            get
            {
                if ((_refMedHisIndex == null))
                {
                    _refMedHisIndex = base.CreateObjectSet<refMedHisIndex>("refMedHisIndex");
                }
                return _refMedHisIndex;
            }
        }
        private ObjectSet<refMedHisIndex> _refMedHisIndex;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedicalCondition> refMedicalCondition
        {
            get
            {
                if ((_refMedicalCondition == null))
                {
                    _refMedicalCondition = base.CreateObjectSet<refMedicalCondition>("refMedicalCondition");
                }
                return _refMedicalCondition;
            }
        }
        private ObjectSet<refMedicalCondition> _refMedicalCondition;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refMedicalServiceType> refMedicalServiceType
        {
            get
            {
                if ((_refMedicalServiceType == null))
                {
                    _refMedicalServiceType = base.CreateObjectSet<refMedicalServiceType>("refMedicalServiceType");
                }
                return _refMedicalServiceType;
            }
        }
        private ObjectSet<refMedicalServiceType> _refMedicalServiceType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refOccupation> refOccupation
        {
            get
            {
                if ((_refOccupation == null))
                {
                    _refOccupation = base.CreateObjectSet<refOccupation>("refOccupation");
                }
                return _refOccupation;
            }
        }
        private ObjectSet<refOccupation> _refOccupation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refPermission> refPermission
        {
            get
            {
                if ((_refPermission == null))
                {
                    _refPermission = base.CreateObjectSet<refPermission>("refPermission");
                }
                return _refPermission;
            }
        }
        private ObjectSet<refPermission> _refPermission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refPersGender> refPersGender
        {
            get
            {
                if ((_refPersGender == null))
                {
                    _refPersGender = base.CreateObjectSet<refPersGender>("refPersGender");
                }
                return _refPersGender;
            }
        }
        private ObjectSet<refPersGender> _refPersGender;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refPersMaritalStatus> refPersMaritalStatus
        {
            get
            {
                if ((_refPersMaritalStatus == null))
                {
                    _refPersMaritalStatus = base.CreateObjectSet<refPersMaritalStatus>("refPersMaritalStatus");
                }
                return _refPersMaritalStatus;
            }
        }
        private ObjectSet<refPersMaritalStatus> _refPersMaritalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refPersRace> refPersRace
        {
            get
            {
                if ((_refPersRace == null))
                {
                    _refPersRace = base.CreateObjectSet<refPersRace>("refPersRace");
                }
                return _refPersRace;
            }
        }
        private ObjectSet<refPersRace> _refPersRace;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refProblem> refProblem
        {
            get
            {
                if ((_refProblem == null))
                {
                    _refProblem = base.CreateObjectSet<refProblem>("refProblem");
                }
                return _refProblem;
            }
        }
        private ObjectSet<refProblem> _refProblem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refProviderType> refProviderType
        {
            get
            {
                if ((_refProviderType == null))
                {
                    _refProviderType = base.CreateObjectSet<refProviderType>("refProviderType");
                }
                return _refProviderType;
            }
        }
        private ObjectSet<refProviderType> _refProviderType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refQualification> refQualification
        {
            get
            {
                if ((_refQualification == null))
                {
                    _refQualification = base.CreateObjectSet<refQualification>("refQualification");
                }
                return _refQualification;
            }
        }
        private ObjectSet<refQualification> _refQualification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refReligion> refReligion
        {
            get
            {
                if ((_refReligion == null))
                {
                    _refReligion = base.CreateObjectSet<refReligion>("refReligion");
                }
                return _refReligion;
            }
        }
        private ObjectSet<refReligion> _refReligion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refRole> refRole
        {
            get
            {
                if ((_refRole == null))
                {
                    _refRole = base.CreateObjectSet<refRole>("refRole");
                }
                return _refRole;
            }
        }
        private ObjectSet<refRole> _refRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refShelfDrugLocation> refShelfDrugLocation
        {
            get
            {
                if ((_refShelfDrugLocation == null))
                {
                    _refShelfDrugLocation = base.CreateObjectSet<refShelfDrugLocation>("refShelfDrugLocation");
                }
                return _refShelfDrugLocation;
            }
        }
        private ObjectSet<refShelfDrugLocation> _refShelfDrugLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refShift> refShift
        {
            get
            {
                if ((_refShift == null))
                {
                    _refShift = base.CreateObjectSet<refShift>("refShift");
                }
                return _refShift;
            }
        }
        private ObjectSet<refShift> _refShift;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refSIPrefix> refSIPrefix
        {
            get
            {
                if ((_refSIPrefix == null))
                {
                    _refSIPrefix = base.CreateObjectSet<refSIPrefix>("refSIPrefix");
                }
                return _refSIPrefix;
            }
        }
        private ObjectSet<refSIPrefix> _refSIPrefix;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refSocialHisSeverity> refSocialHisSeverity
        {
            get
            {
                if ((_refSocialHisSeverity == null))
                {
                    _refSocialHisSeverity = base.CreateObjectSet<refSocialHisSeverity>("refSocialHisSeverity");
                }
                return _refSocialHisSeverity;
            }
        }
        private ObjectSet<refSocialHisSeverity> _refSocialHisSeverity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refSpecimenType> refSpecimenType
        {
            get
            {
                if ((_refSpecimenType == null))
                {
                    _refSpecimenType = base.CreateObjectSet<refSpecimenType>("refSpecimenType");
                }
                return _refSpecimenType;
            }
        }
        private ObjectSet<refSpecimenType> _refSpecimenType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refStoreHouse> refStoreHouse
        {
            get
            {
                if ((_refStoreHouse == null))
                {
                    _refStoreHouse = base.CreateObjectSet<refStoreHouse>("refStoreHouse");
                }
                return _refStoreHouse;
            }
        }
        private ObjectSet<refStoreHouse> _refStoreHouse;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refTimeFrame> refTimeFrame
        {
            get
            {
                if ((_refTimeFrame == null))
                {
                    _refTimeFrame = base.CreateObjectSet<refTimeFrame>("refTimeFrame");
                }
                return _refTimeFrame;
            }
        }
        private ObjectSet<refTimeFrame> _refTimeFrame;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refTransactionType> refTransactionType
        {
            get
            {
                if ((_refTransactionType == null))
                {
                    _refTransactionType = base.CreateObjectSet<refTransactionType>("refTransactionType");
                }
                return _refTransactionType;
            }
        }
        private ObjectSet<refTransactionType> _refTransactionType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refTypeAbsent> refTypeAbsent
        {
            get
            {
                if ((_refTypeAbsent == null))
                {
                    _refTypeAbsent = base.CreateObjectSet<refTypeAbsent>("refTypeAbsent");
                }
                return _refTypeAbsent;
            }
        }
        private ObjectSet<refTypeAbsent> _refTypeAbsent;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refUnitOfMeasure> refUnitOfMeasure
        {
            get
            {
                if ((_refUnitOfMeasure == null))
                {
                    _refUnitOfMeasure = base.CreateObjectSet<refUnitOfMeasure>("refUnitOfMeasure");
                }
                return _refUnitOfMeasure;
            }
        }
        private ObjectSet<refUnitOfMeasure> _refUnitOfMeasure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refVitalSign> refVitalSign
        {
            get
            {
                if ((_refVitalSign == null))
                {
                    _refVitalSign = base.CreateObjectSet<refVitalSign>("refVitalSign");
                }
                return _refVitalSign;
            }
        }
        private ObjectSet<refVitalSign> _refVitalSign;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<refWard> refWard
        {
            get
            {
                if ((_refWard == null))
                {
                    _refWard = base.CreateObjectSet<refWard>("refWard");
                }
                return _refWard;
            }
        }
        private ObjectSet<refWard> _refWard;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegistrationInfo> RegistrationInfo
        {
            get
            {
                if ((_RegistrationInfo == null))
                {
                    _RegistrationInfo = base.CreateObjectSet<RegistrationInfo>("RegistrationInfo");
                }
                return _RegistrationInfo;
            }
        }
        private ObjectSet<RegistrationInfo> _RegistrationInfo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RegQueue> RegQueue
        {
            get
            {
                if ((_RegQueue == null))
                {
                    _RegQueue = base.CreateObjectSet<RegQueue>("RegQueue");
                }
                return _RegQueue;
            }
        }
        private ObjectSet<RegQueue> _RegQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReminderNotices> ReminderNotices
        {
            get
            {
                if ((_ReminderNotices == null))
                {
                    _ReminderNotices = base.CreateObjectSet<ReminderNotices>("ReminderNotices");
                }
                return _ReminderNotices;
            }
        }
        private ObjectSet<ReminderNotices> _ReminderNotices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RescrUsedInOperation> RescrUsedInOperation
        {
            get
            {
                if ((_RescrUsedInOperation == null))
                {
                    _RescrUsedInOperation = base.CreateObjectSet<RescrUsedInOperation>("RescrUsedInOperation");
                }
                return _RescrUsedInOperation;
            }
        }
        private ObjectSet<RescrUsedInOperation> _RescrUsedInOperation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResearchPartnership> ResearchPartnership
        {
            get
            {
                if ((_ResearchPartnership == null))
                {
                    _ResearchPartnership = base.CreateObjectSet<ResearchPartnership>("ResearchPartnership");
                }
                return _ResearchPartnership;
            }
        }
        private ObjectSet<ResearchPartnership> _ResearchPartnership;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Resource> Resource
        {
            get
            {
                if ((_Resource == null))
                {
                    _Resource = base.CreateObjectSet<Resource>("Resource");
                }
                return _Resource;
            }
        }
        private ObjectSet<Resource> _Resource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ResourceLog> ResourceLog
        {
            get
            {
                if ((_ResourceLog == null))
                {
                    _ResourceLog = base.CreateObjectSet<ResourceLog>("ResourceLog");
                }
                return _ResourceLog;
            }
        }
        private ObjectSet<ResourceLog> _ResourceLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoomAllocation> RoomAllocation
        {
            get
            {
                if ((_RoomAllocation == null))
                {
                    _RoomAllocation = base.CreateObjectSet<RoomAllocation>("RoomAllocation");
                }
                return _RoomAllocation;
            }
        }
        private ObjectSet<RoomAllocation> _RoomAllocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RxHoldConsultation> RxHoldConsultation
        {
            get
            {
                if ((_RxHoldConsultation == null))
                {
                    _RxHoldConsultation = base.CreateObjectSet<RxHoldConsultation>("RxHoldConsultation");
                }
                return _RxHoldConsultation;
            }
        }
        private ObjectSet<RxHoldConsultation> _RxHoldConsultation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ScheduleDoingTaskLog> ScheduleDoingTaskLog
        {
            get
            {
                if ((_ScheduleDoingTaskLog == null))
                {
                    _ScheduleDoingTaskLog = base.CreateObjectSet<ScheduleDoingTaskLog>("ScheduleDoingTaskLog");
                }
                return _ScheduleDoingTaskLog;
            }
        }
        private ObjectSet<ScheduleDoingTaskLog> _ScheduleDoingTaskLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SeparationOfBlood> SeparationOfBlood
        {
            get
            {
                if ((_SeparationOfBlood == null))
                {
                    _SeparationOfBlood = base.CreateObjectSet<SeparationOfBlood>("SeparationOfBlood");
                }
                return _SeparationOfBlood;
            }
        }
        private ObjectSet<SeparationOfBlood> _SeparationOfBlood;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServerLog> ServerLog
        {
            get
            {
                if ((_ServerLog == null))
                {
                    _ServerLog = base.CreateObjectSet<ServerLog>("ServerLog");
                }
                return _ServerLog;
            }
        }
        private ObjectSet<ServerLog> _ServerLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Session> Session
        {
            get
            {
                if ((_Session == null))
                {
                    _Session = base.CreateObjectSet<Session>("Session");
                }
                return _Session;
            }
        }
        private ObjectSet<Session> _Session;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SocialAndHealthInsurance> SocialAndHealthInsurance
        {
            get
            {
                if ((_SocialAndHealthInsurance == null))
                {
                    _SocialAndHealthInsurance = base.CreateObjectSet<SocialAndHealthInsurance>("SocialAndHealthInsurance");
                }
                return _SocialAndHealthInsurance;
            }
        }
        private ObjectSet<SocialAndHealthInsurance> _SocialAndHealthInsurance;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecifiedParaclinical> SpecifiedParaclinical
        {
            get
            {
                if ((_SpecifiedParaclinical == null))
                {
                    _SpecifiedParaclinical = base.CreateObjectSet<SpecifiedParaclinical>("SpecifiedParaclinical");
                }
                return _SpecifiedParaclinical;
            }
        }
        private ObjectSet<SpecifiedParaclinical> _SpecifiedParaclinical;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecMedRecTmp> SpecMedRecTmp
        {
            get
            {
                if ((_SpecMedRecTmp == null))
                {
                    _SpecMedRecTmp = base.CreateObjectSet<SpecMedRecTmp>("SpecMedRecTmp");
                }
                return _SpecMedRecTmp;
            }
        }
        private ObjectSet<SpecMedRecTmp> _SpecMedRecTmp;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StdKSection> StdKSection
        {
            get
            {
                if ((_StdKSection == null))
                {
                    _StdKSection = base.CreateObjectSet<StdKSection>("StdKSection");
                }
                return _StdKSection;
            }
        }
        private ObjectSet<StdKSection> _StdKSection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Supplier
        {
            get
            {
                if ((_Supplier == null))
                {
                    _Supplier = base.CreateObjectSet<Supplier>("Supplier");
                }
                return _Supplier;
            }
        }
        private ObjectSet<Supplier> _Supplier;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SymptomIndicator> SymptomIndicator
        {
            get
            {
                if ((_SymptomIndicator == null))
                {
                    _SymptomIndicator = base.CreateObjectSet<SymptomIndicator>("SymptomIndicator");
                }
                return _SymptomIndicator;
            }
        }
        private ObjectSet<SymptomIndicator> _SymptomIndicator;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TechnicalInspectionAgency> TechnicalInspectionAgency
        {
            get
            {
                if ((_TechnicalInspectionAgency == null))
                {
                    _TechnicalInspectionAgency = base.CreateObjectSet<TechnicalInspectionAgency>("TechnicalInspectionAgency");
                }
                return _TechnicalInspectionAgency;
            }
        }
        private ObjectSet<TechnicalInspectionAgency> _TechnicalInspectionAgency;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestBlood> TestBlood
        {
            get
            {
                if ((_TestBlood == null))
                {
                    _TestBlood = base.CreateObjectSet<TestBlood>("TestBlood");
                }
                return _TestBlood;
            }
        }
        private ObjectSet<TestBlood> _TestBlood;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TestOnPatientSpecimen> TestOnPatientSpecimen
        {
            get
            {
                if ((_TestOnPatientSpecimen == null))
                {
                    _TestOnPatientSpecimen = base.CreateObjectSet<TestOnPatientSpecimen>("TestOnPatientSpecimen");
                }
                return _TestOnPatientSpecimen;
            }
        }
        private ObjectSet<TestOnPatientSpecimen> _TestOnPatientSpecimen;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Trigs> Trigs
        {
            get
            {
                if ((_Trigs == null))
                {
                    _Trigs = base.CreateObjectSet<Trigs>("Trigs");
                }
                return _Trigs;
            }
        }
        private ObjectSet<Trigs> _Trigs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserAccount> UserAccount
        {
            get
            {
                if ((_UserAccount == null))
                {
                    _UserAccount = base.CreateObjectSet<UserAccount>("UserAccount");
                }
                return _UserAccount;
            }
        }
        private ObjectSet<UserAccount> _UserAccount;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserGroup> UserGroup
        {
            get
            {
                if ((_UserGroup == null))
                {
                    _UserGroup = base.CreateObjectSet<UserGroup>("UserGroup");
                }
                return _UserGroup;
            }
        }
        private ObjectSet<UserGroup> _UserGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersInGroup> UsersInGroup
        {
            get
            {
                if ((_UsersInGroup == null))
                {
                    _UsersInGroup = base.CreateObjectSet<UsersInGroup>("UsersInGroup");
                }
                return _UsersInGroup;
            }
        }
        private ObjectSet<UsersInGroup> _UsersInGroup;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ward> Ward
        {
            get
            {
                if ((_Ward == null))
                {
                    _Ward = base.CreateObjectSet<Ward>("Ward");
                }
                return _Ward;
            }
        }
        private ObjectSet<Ward> _Ward;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WardInDept> WardInDept
        {
            get
            {
                if ((_WardInDept == null))
                {
                    _WardInDept = base.CreateObjectSet<WardInDept>("WardInDept");
                }
                return _WardInDept;
            }
        }
        private ObjectSet<WardInDept> _WardInDept;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkingDay> WorkingDay
        {
            get
            {
                if ((_WorkingDay == null))
                {
                    _WorkingDay = base.CreateObjectSet<WorkingDay>("WorkingDay");
                }
                return _WorkingDay;
            }
        }
        private ObjectSet<WorkingDay> _WorkingDay;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkingSchedule> WorkingSchedule
        {
            get
            {
                if ((_WorkingSchedule == null))
                {
                    _WorkingSchedule = base.CreateObjectSet<WorkingSchedule>("WorkingSchedule");
                }
                return _WorkingSchedule;
            }
        }
        private ObjectSet<WorkingSchedule> _WorkingSchedule;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WorkPlace> WorkPlace
        {
            get
            {
                if ((_WorkPlace == null))
                {
                    _WorkPlace = base.CreateObjectSet<WorkPlace>("WorkPlace");
                }
                return _WorkPlace;
            }
        }
        private ObjectSet<WorkPlace> _WorkPlace;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AcPrincDrug EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAcPrincDrug(AcPrincDrug acPrincDrug)
        {
            base.AddObject("AcPrincDrug", acPrincDrug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmNoTemp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmNoTemp(AdmNoTemp admNoTemp)
        {
            base.AddObject("AdmNoTemp", admNoTemp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdmNoTempHolding EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdmNoTempHolding(AdmNoTempHolding admNoTempHolding)
        {
            base.AddObject("AdmNoTempHolding", admNoTempHolding);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AdvancedSpecialist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAdvancedSpecialist(AdvancedSpecialist advancedSpecialist)
        {
            base.AddObject("AdvancedSpecialist", advancedSpecialist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Alert EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlert(Alert alert)
        {
            base.AddObject("Alert", alert);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AllergyIntolerance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAllergyIntolerance(AllergyIntolerance allergyIntolerance)
        {
            base.AddObject("AllergyIntolerance", allergyIntolerance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AntagonistDrug EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAntagonistDrug(AntagonistDrug antagonistDrug)
        {
            base.AddObject("AntagonistDrug", antagonistDrug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Application EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToApplication(Application application)
        {
            base.AddObject("Application", application);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AppliedMedStandard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppliedMedStandard(AppliedMedStandard appliedMedStandard)
        {
            base.AddObject("AppliedMedStandard", appliedMedStandard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Appointment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAppointment(Appointment appointment)
        {
            base.AddObject("Appointment", appointment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ArchitectureResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToArchitectureResources(ArchitectureResources architectureResources)
        {
            base.AddObject("ArchitectureResources", architectureResources);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetRole(ASPNetRole aSPNetRole)
        {
            base.AddObject("ASPNetRole", aSPNetRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetRolePermission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetRolePermission(ASPNetRolePermission aSPNetRolePermission)
        {
            base.AddObject("ASPNetRolePermission", aSPNetRolePermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetToken EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetToken(ASPNetToken aSPNetToken)
        {
            base.AddObject("ASPNetToken", aSPNetToken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetUser(ASPNetUser aSPNetUser)
        {
            base.AddObject("ASPNetUser", aSPNetUser);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetUserClaims EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetUserClaims(ASPNetUserClaims aSPNetUserClaims)
        {
            base.AddObject("ASPNetUserClaims", aSPNetUserClaims);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetUserLogin EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetUserLogin(ASPNetUserLogin aSPNetUserLogin)
        {
            base.AddObject("ASPNetUserLogin", aSPNetUserLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ASPNetUserRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToASPNetUserRole(ASPNetUserRole aSPNetUserRole)
        {
            base.AddObject("ASPNetUserRole", aSPNetUserRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignMedEquip EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignMedEquip(AssignMedEquip assignMedEquip)
        {
            base.AddObject("AssignMedEquip", assignMedEquip);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssignmentSchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssignmentSchedule(AssignmentSchedule assignmentSchedule)
        {
            base.AddObject("AssignmentSchedule", assignmentSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AttachedDoc EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttachedDoc(AttachedDoc attachedDoc)
        {
            base.AddObject("AttachedDoc", attachedDoc);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BedInRoom EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBedInRoom(BedInRoom bedInRoom)
        {
            base.AddObject("BedInRoom", bedInRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bloodbank EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBloodbank(Bloodbank bloodbank)
        {
            base.AddObject("Bloodbank", bloodbank);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BloodDonation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBloodDonation(BloodDonation bloodDonation)
        {
            base.AddObject("BloodDonation", bloodDonation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BodyRegion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBodyRegion(BodyRegion bodyRegion)
        {
            base.AddObject("BodyRegion", bodyRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BusySchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBusySchedule(BusySchedule busySchedule)
        {
            base.AddObject("BusySchedule", busySchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ChainMedicalServices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToChainMedicalServices(ChainMedicalServices chainMedicalServices)
        {
            base.AddObject("ChainMedicalServices", chainMedicalServices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicalIndicatorType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicalIndicatorType(ClinicalIndicatorType clinicalIndicatorType)
        {
            base.AddObject("ClinicalIndicatorType", clinicalIndicatorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicalTrial EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicalTrial(ClinicalTrial clinicalTrial)
        {
            base.AddObject("ClinicalTrial", clinicalTrial);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClinicalTrialResult EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClinicalTrialResult(ClinicalTrialResult clinicalTrialResult)
        {
            base.AddObject("ClinicalTrialResult", clinicalTrialResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactDetails(ContactDetails contactDetails)
        {
            base.AddObject("ContactDetails", contactDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contract EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContract(Contract contract)
        {
            base.AddObject("Contract", contract);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractChange EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractChange(ContractChange contractChange)
        {
            base.AddObject("ContractChange", contractChange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractDocument(ContractDocument contractDocument)
        {
            base.AddObject("ContractDocument", contractDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DDI EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDDI(DDI dDI)
        {
            base.AddObject("DDI", dDI);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DeathSituationInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeathSituationInfo(DeathSituationInfo deathSituationInfo)
        {
            base.AddObject("DeathSituationInfo", deathSituationInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DHCRoomBlock EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDHCRoomBlock(DHCRoomBlock dHCRoomBlock)
        {
            base.AddObject("DHCRoomBlock", dHCRoomBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DiagDescribeTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDiagDescribeTmp(DiagDescribeTmp diagDescribeTmp)
        {
            base.AddObject("DiagDescribeTmp", diagDescribeTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DisposableMDResource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisposableMDResource(DisposableMDResource disposableMDResource)
        {
            base.AddObject("DisposableMDResource", disposableMDResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocItem(DocItem docItem)
        {
            base.AddObject("DocItem", docItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Donor EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDonor(Donor donor)
        {
            base.AddObject("Donor", donor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DonorMedicalConditions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDonorMedicalConditions(DonorMedicalConditions donorMedicalConditions)
        {
            base.AddObject("DonorMedicalConditions", donorMedicalConditions);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DonorMedication EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDonorMedication(DonorMedication donorMedication)
        {
            base.AddObject("DonorMedication", donorMedication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrAdviceTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrAdviceTmp(DrAdviceTmp drAdviceTmp)
        {
            base.AddObject("DrAdviceTmp", drAdviceTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrMedicineAdvice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrMedicineAdvice(DrMedicineAdvice drMedicineAdvice)
        {
            base.AddObject("DrMedicineAdvice", drMedicineAdvice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrMedicineTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrMedicineTmp(DrMedicineTmp drMedicineTmp)
        {
            base.AddObject("DrMedicineTmp", drMedicineTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrPrescriptionTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrPrescriptionTmp(DrPrescriptionTmp drPrescriptionTmp)
        {
            base.AddObject("DrPrescriptionTmp", drPrescriptionTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrPrescriptionTmps EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrPrescriptionTmps(DrPrescriptionTmps drPrescriptionTmps)
        {
            base.AddObject("DrPrescriptionTmps", drPrescriptionTmps);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drug EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrug(Drug drug)
        {
            base.AddObject("Drug", drug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugConfign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugConfign(DrugConfign drugConfign)
        {
            base.AddObject("DrugConfign", drugConfign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugInDepartment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugInDepartment(DrugInDepartment drugInDepartment)
        {
            base.AddObject("DrugInDepartment", drugInDepartment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DrugPrice EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrugPrice(DrugPrice drugPrice)
        {
            base.AddObject("DrugPrice", drugPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EduLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEduLevel(EduLevel eduLevel)
        {
            base.AddObject("EduLevel", eduLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpAllocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpAllocation(EmpAllocation empAllocation)
        {
            base.AddObject("EmpAllocation", empAllocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employee EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployee(Employee employee)
        {
            base.AddObject("Employee", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeAnnualLeave EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeAnnualLeave(EmployeeAnnualLeave employeeAnnualLeave)
        {
            base.AddObject("EmployeeAnnualLeave", employeeAnnualLeave);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeLeaveTaken EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeLeaveTaken(EmployeeLeaveTaken employeeLeaveTaken)
        {
            base.AddObject("EmployeeLeaveTaken", employeeLeaveTaken);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employeer EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeer(Employeer employeer)
        {
            base.AddObject("Employeer", employeer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmpWorkSchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmpWorkSchedule(EmpWorkSchedule empWorkSchedule)
        {
            base.AddObject("EmpWorkSchedule", empWorkSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquipHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquipHistory(EquipHistory equipHistory)
        {
            base.AddObject("EquipHistory", equipHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquivMedService EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquivMedService(EquivMedService equivMedService)
        {
            base.AddObject("EquivMedService", equivMedService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventHoliday EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventHoliday(EventHoliday eventHoliday)
        {
            base.AddObject("EventHoliday", eventHoliday);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ExamMaintenanceHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExamMaintenanceHistory(ExamMaintenanceHistory examMaintenanceHistory)
        {
            base.AddObject("ExamMaintenanceHistory", examMaintenanceHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FamilyHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFamilyHistory(FamilyHistory familyHistory)
        {
            base.AddObject("FamilyHistory", familyHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ForeignExchange EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToForeignExchange(ForeignExchange foreignExchange)
        {
            base.AddObject("ForeignExchange", foreignExchange);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GenericSocialNetwork EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGenericSocialNetwork(GenericSocialNetwork genericSocialNetwork)
        {
            base.AddObject("GenericSocialNetwork", genericSocialNetwork);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCProvider EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCProvider(HCProvider hCProvider)
        {
            base.AddObject("HCProvider", hCProvider);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCRoomBlock EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCRoomBlock(HCRoomBlock hCRoomBlock)
        {
            base.AddObject("HCRoomBlock", hCRoomBlock);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HCStakeholder EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHCStakeholder(HCStakeholder hCStakeholder)
        {
            base.AddObject("HCStakeholder", hCStakeholder);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HealthCareQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHealthCareQueue(HealthCareQueue healthCareQueue)
        {
            base.AddObject("HealthCareQueue", healthCareQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HealthInsurance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHealthInsurance(HealthInsurance healthInsurance)
        {
            base.AddObject("HealthInsurance", healthInsurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HIAdmission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHIAdmission(HIAdmission hIAdmission)
        {
            base.AddObject("HIAdmission", hIAdmission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HIServiceItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHIServiceItem(HIServiceItem hIServiceItem)
        {
            base.AddObject("HIServiceItem", hIServiceItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HIServiceItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHIServiceItems(HIServiceItems hIServiceItems)
        {
            base.AddObject("HIServiceItems", hIServiceItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistoricalAuditData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoricalAuditData(HistoricalAuditData historicalAuditData)
        {
            base.AddObject("HistoricalAuditData", historicalAuditData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HosFeeTransDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHosFeeTransDetails(HosFeeTransDetails hosFeeTransDetails)
        {
            base.AddObject("HosFeeTransDetails", hosFeeTransDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospitalFeeTransaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospitalFeeTransaction(HospitalFeeTransaction hospitalFeeTransaction)
        {
            base.AddObject("HospitalFeeTransaction", hospitalFeeTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospitalizationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospitalizationHistory(HospitalizationHistory hospitalizationHistory)
        {
            base.AddObject("HospitalizationHistory", hospitalizationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospitalizationHistoryDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospitalizationHistoryDetails(HospitalizationHistoryDetails hospitalizationHistoryDetails)
        {
            base.AddObject("HospitalizationHistoryDetails", hospitalizationHistoryDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HospitalSpecialist EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHospitalSpecialist(HospitalSpecialist hospitalSpecialist)
        {
            base.AddObject("HospitalSpecialist", hospitalSpecialist);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HosRanking EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHosRanking(HosRanking hosRanking)
        {
            base.AddObject("HosRanking", hosRanking);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ICD10 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToICD10(ICD10 iCD10)
        {
            base.AddObject("ICD10", iCD10);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ICDChapter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToICDChapter(ICDChapter iCDChapter)
        {
            base.AddObject("ICDChapter", iCDChapter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ICDGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToICDGroup(ICDGroup iCDGroup)
        {
            base.AddObject("ICDGroup", iCDGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImmunizationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImmunizationHistory(ImmunizationHistory immunizationHistory)
        {
            base.AddObject("ImmunizationHistory", immunizationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InOutType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInOutType(InOutType inOutType)
        {
            base.AddObject("InOutType", inOutType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InOutwardDrug EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInOutwardDrug(InOutwardDrug inOutwardDrug)
        {
            base.AddObject("InOutwardDrug", inOutwardDrug);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InputMaskSetting EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInputMaskSetting(InputMaskSetting inputMaskSetting)
        {
            base.AddObject("InputMaskSetting", inputMaskSetting);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceBeneficiary EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceBeneficiary(InsuranceBeneficiary insuranceBeneficiary)
        {
            base.AddObject("InsuranceBeneficiary", insuranceBeneficiary);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceCompany(InsuranceCompany insuranceCompany)
        {
            base.AddObject("InsuranceCompany", insuranceCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceInterests EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceInterests(InsuranceInterests insuranceInterests)
        {
            base.AddObject("InsuranceInterests", insuranceInterests);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InsuranceRegQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInsuranceRegQueue(InsuranceRegQueue insuranceRegQueue)
        {
            base.AddObject("InsuranceRegQueue", insuranceRegQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobHistory(JobHistory jobHistory)
        {
            base.AddObject("JobHistory", jobHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobModel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobModel(JobModel jobModel)
        {
            base.AddObject("JobModel", jobModel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LanguageLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLanguageLevel(LanguageLevel languageLevel)
        {
            base.AddObject("LanguageLevel", languageLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LotNumber EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLotNumber(LotNumber lotNumber)
        {
            base.AddObject("LotNumber", lotNumber);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedEnctrDiagnosis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedEnctrDiagnosis(MedEnctrDiagnosis medEnctrDiagnosis)
        {
            base.AddObject("MedEnctrDiagnosis", medEnctrDiagnosis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalBill EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalBill(MedicalBill medicalBill)
        {
            base.AddObject("MedicalBill", medicalBill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalBills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalBills(MedicalBills medicalBills)
        {
            base.AddObject("MedicalBills", medicalBills);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalClaimService EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalClaimService(MedicalClaimService medicalClaimService)
        {
            base.AddObject("MedicalClaimService", medicalClaimService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalConditionRecord EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalConditionRecord(MedicalConditionRecord medicalConditionRecord)
        {
            base.AddObject("MedicalConditionRecord", medicalConditionRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalDiagnosticMethod EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalDiagnosticMethod(MedicalDiagnosticMethod medicalDiagnosticMethod)
        {
            base.AddObject("MedicalDiagnosticMethod", medicalDiagnosticMethod);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalEncounter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalEncounter(MedicalEncounter medicalEncounter)
        {
            base.AddObject("MedicalEncounter", medicalEncounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalEquimentsResources EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalEquimentsResources(MedicalEquimentsResources medicalEquimentsResources)
        {
            base.AddObject("MedicalEquimentsResources", medicalEquimentsResources);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalServiceItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalServiceItem(MedicalServiceItem medicalServiceItem)
        {
            base.AddObject("MedicalServiceItem", medicalServiceItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalServicePackage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalServicePackage(MedicalServicePackage medicalServicePackage)
        {
            base.AddObject("MedicalServicePackage", medicalServicePackage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicalTestProcedure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicalTestProcedure(MedicalTestProcedure medicalTestProcedure)
        {
            base.AddObject("MedicalTestProcedure", medicalTestProcedure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedicationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedicationHistory(MedicationHistory medicationHistory)
        {
            base.AddObject("MedicationHistory", medicationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedImagingRepository EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedImagingRepository(MedImagingRepository medImagingRepository)
        {
            base.AddObject("MedImagingRepository", medImagingRepository);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedImagingTest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedImagingTest(MedImagingTest medImagingTest)
        {
            base.AddObject("MedImagingTest", medImagingTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedImagingTestItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedImagingTestItems(MedImagingTestItems medImagingTestItems)
        {
            base.AddObject("MedImagingTestItems", medImagingTestItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedLabRepository EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedLabRepository(MedLabRepository medLabRepository)
        {
            base.AddObject("MedLabRepository", medLabRepository);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedLabTest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedLabTest(MedLabTest medLabTest)
        {
            base.AddObject("MedLabTest", medLabTest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedLabTestItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedLabTestItems(MedLabTestItems medLabTestItems)
        {
            base.AddObject("MedLabTestItems", medLabTestItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedRecOutline EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedRecOutline(MedRecOutline medRecOutline)
        {
            base.AddObject("MedRecOutline", medRecOutline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedRecTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedRecTmp(MedRecTmp medRecTmp)
        {
            base.AddObject("MedRecTmp", medRecTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MedSerInDept EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMedSerInDept(MedSerInDept medSerInDept)
        {
            base.AddObject("MedSerInDept", medSerInDept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MesrtConv EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMesrtConv(MesrtConv mesrtConv)
        {
            base.AddObject("MesrtConv", mesrtConv);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MiscDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMiscDocuments(MiscDocuments miscDocuments)
        {
            base.AddObject("MiscDocuments", miscDocuments);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MOHServiceItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMOHServiceItems(MOHServiceItems mOHServiceItems)
        {
            base.AddObject("MOHServiceItems", mOHServiceItems);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRParagraph EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRParagraph(MRParagraph mRParagraph)
        {
            base.AddObject("MRParagraph", mRParagraph);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRSection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRSection(MRSection mRSection)
        {
            base.AddObject("MRSection", mRSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MRSectionOutline EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMRSectionOutline(MRSectionOutline mRSectionOutline)
        {
            base.AddObject("MRSectionOutline", mRSectionOutline);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NetworkGuestAccount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNetworkGuestAccount(NetworkGuestAccount networkGuestAccount)
        {
            base.AddObject("NetworkGuestAccount", networkGuestAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NextOfKins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNextOfKins(NextOfKins nextOfKins)
        {
            base.AddObject("NextOfKins", nextOfKins);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OccCareerMOH EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOccCareerMOH(OccCareerMOH occCareerMOH)
        {
            base.AddObject("OccCareerMOH", occCareerMOH);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OnlineQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOnlineQueue(OnlineQueue onlineQueue)
        {
            base.AddObject("OnlineQueue", onlineQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Operations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperations(Operations operations)
        {
            base.AddObject("Operations", operations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OperationSchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOperationSchedule(OperationSchedule operationSchedule)
        {
            base.AddObject("OperationSchedule", operationSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OpSkedDistibution EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOpSkedDistibution(OpSkedDistibution opSkedDistibution)
        {
            base.AddObject("OpSkedDistibution", opSkedDistibution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganization(Organization organization)
        {
            base.AddObject("Organization", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParaClinicalExamGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParaClinicalExamGroup(ParaClinicalExamGroup paraClinicalExamGroup)
        {
            base.AddObject("ParaClinicalExamGroup", paraClinicalExamGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParaClinicalReq EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParaClinicalReq(ParaClinicalReq paraClinicalReq)
        {
            base.AddObject("ParaClinicalReq", paraClinicalReq);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ParaClinicalReqDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToParaClinicalReqDetails(ParaClinicalReqDetails paraClinicalReqDetails)
        {
            base.AddObject("ParaClinicalReqDetails", paraClinicalReqDetails);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PastPersonHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPastPersonHistory(PastPersonHistory pastPersonHistory)
        {
            base.AddObject("PastPersonHistory", pastPersonHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patient EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatient(Patient patient)
        {
            base.AddObject("Patient", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientAddressHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientAddressHistory(PatientAddressHistory patientAddressHistory)
        {
            base.AddObject("PatientAddressHistory", patientAddressHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientAdmission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientAdmission(PatientAdmission patientAdmission)
        {
            base.AddObject("PatientAdmission", patientAdmission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientBed EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientBed(PatientBed patientBed)
        {
            base.AddObject("PatientBed", patientBed);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientBedFeatures EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientBedFeatures(PatientBedFeatures patientBedFeatures)
        {
            base.AddObject("PatientBedFeatures", patientBedFeatures);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientClassHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientClassHistory(PatientClassHistory patientClassHistory)
        {
            base.AddObject("PatientClassHistory", patientClassHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientClassification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientClassification(PatientClassification patientClassification)
        {
            base.AddObject("PatientClassification", patientClassification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientCommonMedRecord EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientCommonMedRecord(PatientCommonMedRecord patientCommonMedRecord)
        {
            base.AddObject("PatientCommonMedRecord", patientCommonMedRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientDiagnosticImaging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientDiagnosticImaging(PatientDiagnosticImaging patientDiagnosticImaging)
        {
            base.AddObject("PatientDiagnosticImaging", patientDiagnosticImaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientInBedRoom EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientInBedRoom(PatientInBedRoom patientInBedRoom)
        {
            base.AddObject("PatientInBedRoom", patientInBedRoom);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientInvoices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientInvoices(PatientInvoices patientInvoices)
        {
            base.AddObject("PatientInvoices", patientInvoices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientMedLabTestResult EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientMedLabTestResult(PatientMedLabTestResult patientMedLabTestResult)
        {
            base.AddObject("PatientMedLabTestResult", patientMedLabTestResult);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientMedRecord EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientMedRecord(PatientMedRecord patientMedRecord)
        {
            base.AddObject("PatientMedRecord", patientMedRecord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientProblem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientProblem(PatientProblem patientProblem)
        {
            base.AddObject("PatientProblem", patientProblem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientPVID EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientPVID(PatientPVID patientPVID)
        {
            base.AddObject("PatientPVID", patientPVID);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientSpecimen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientSpecimen(PatientSpecimen patientSpecimen)
        {
            base.AddObject("PatientSpecimen", patientSpecimen);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientTransaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientTransaction(PatientTransaction patientTransaction)
        {
            base.AddObject("PatientTransaction", patientTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PatientVitalSign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatientVitalSign(PatientVitalSign patientVitalSign)
        {
            base.AddObject("PatientVitalSign", patientVitalSign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonalProperty EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonalProperty(PersonalProperty personalProperty)
        {
            base.AddObject("PersonalProperty", personalProperty);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonRole(PersonRole personRole)
        {
            base.AddObject("PersonRole", personRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PharmaceuticalCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPharmaceuticalCompany(PharmaceuticalCompany pharmaceuticalCompany)
        {
            base.AddObject("PharmaceuticalCompany", pharmaceuticalCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PhysicalExamination EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPhysicalExamination(PhysicalExamination physicalExamination)
        {
            base.AddObject("PhysicalExamination", physicalExamination);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Prescription EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescription(Prescription prescription)
        {
            base.AddObject("Prescription", prescription);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrescriptionDetail EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescriptionDetail(PrescriptionDetail prescriptionDetail)
        {
            base.AddObject("PrescriptionDetail", prescriptionDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrescriptionHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrescriptionHistory(PrescriptionHistory prescriptionHistory)
        {
            base.AddObject("PrescriptionHistory", prescriptionHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PriceList EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriceList(PriceList priceList)
        {
            base.AddObject("PriceList", priceList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivacyClass EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivacyClass(PrivacyClass privacyClass)
        {
            base.AddObject("PrivacyClass", privacyClass);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PrivilegeRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPrivilegeRole(PrivilegeRole privilegeRole)
        {
            base.AddObject("PrivilegeRole", privilegeRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromotionPlan EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotionPlan(PromotionPlan promotionPlan)
        {
            base.AddObject("PromotionPlan", promotionPlan);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PromotionService EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPromotionService(PromotionService promotionService)
        {
            base.AddObject("PromotionService", promotionService);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProvidableDrugs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProvidableDrugs(ProvidableDrugs providableDrugs)
        {
            base.AddObject("ProvidableDrugs", providableDrugs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PtCodeCheckDigitTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPtCodeCheckDigitTmp(PtCodeCheckDigitTmp ptCodeCheckDigitTmp)
        {
            base.AddObject("PtCodeCheckDigitTmp", ptCodeCheckDigitTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quotation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuotation(Quotation quotation)
        {
            base.AddObject("Quotation", quotation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Realms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRealms(Realms realms)
        {
            base.AddObject("Realms", realms);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAcademicTile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAcademicTile(refAcademicTile refAcademicTile)
        {
            base.AddObject("refAcademicTile", refAcademicTile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refActiviePrinciple EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefActiviePrinciple(refActiviePrinciple refActiviePrinciple)
        {
            base.AddObject("refActiviePrinciple", refActiviePrinciple);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAdmissionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAdmissionType(refAdmissionType refAdmissionType)
        {
            base.AddObject("refAdmissionType", refAdmissionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAdmReferralType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAdmReferralType(refAdmReferralType refAdmReferralType)
        {
            base.AddObject("refAdmReferralType", refAdmReferralType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAllergyCategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAllergyCategory(refAllergyCategory refAllergyCategory)
        {
            base.AddObject("refAllergyCategory", refAllergyCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAllergyIndex EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAllergyIndex(refAllergyIndex refAllergyIndex)
        {
            base.AddObject("refAllergyIndex", refAllergyIndex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAnnTemp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAnnTemp(refAnnTemp refAnnTemp)
        {
            base.AddObject("refAnnTemp", refAnnTemp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refAppConfig EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefAppConfig(refAppConfig refAppConfig)
        {
            base.AddObject("refAppConfig", refAppConfig);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refBloodType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefBloodType(refBloodType refBloodType)
        {
            base.AddObject("refBloodType", refBloodType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCareerMOH EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCareerMOH(refCareerMOH refCareerMOH)
        {
            base.AddObject("refCareerMOH", refCareerMOH);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCertification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCertification(refCertification refCertification)
        {
            base.AddObject("refCertification", refCertification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCityProvince EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCityProvince(refCityProvince refCityProvince)
        {
            base.AddObject("refCityProvince", refCityProvince);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCLMeasurement EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCLMeasurement(refCLMeasurement refCLMeasurement)
        {
            base.AddObject("refCLMeasurement", refCLMeasurement);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCommonTerm EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCommonTerm(refCommonTerm refCommonTerm)
        {
            base.AddObject("refCommonTerm", refCommonTerm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCountry EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCountry(refCountry refCountry)
        {
            base.AddObject("refCountry", refCountry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refCurrency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefCurrency(refCurrency refCurrency)
        {
            base.AddObject("refCurrency", refCurrency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDepartment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDepartment(refDepartment refDepartment)
        {
            base.AddObject("refDepartment", refDepartment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDepreciationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDepreciationType(refDepreciationType refDepreciationType)
        {
            base.AddObject("refDepreciationType", refDepreciationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDiagnosis EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDiagnosis(refDiagnosis refDiagnosis)
        {
            base.AddObject("refDiagnosis", refDiagnosis);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDischargeDisposition EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDischargeDisposition(refDischargeDisposition refDischargeDisposition)
        {
            base.AddObject("refDischargeDisposition", refDischargeDisposition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDistrict EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDistrict(refDistrict refDistrict)
        {
            base.AddObject("refDistrict", refDistrict);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refDrugKind EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefDrugKind(refDrugKind refDrugKind)
        {
            base.AddObject("refDrugKind", refDrugKind);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refEducationalLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefEducationalLevel(refEducationalLevel refEducationalLevel)
        {
            base.AddObject("refEducationalLevel", refEducationalLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refElthnic EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefElthnic(refElthnic refElthnic)
        {
            base.AddObject("refElthnic", refElthnic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refEthnicGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefEthnicGroup(refEthnicGroup refEthnicGroup)
        {
            base.AddObject("refEthnicGroup", refEthnicGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refExamAction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefExamAction(refExamAction refExamAction)
        {
            base.AddObject("refExamAction", refExamAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refExamObservation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefExamObservation(refExamObservation refExamObservation)
        {
            base.AddObject("refExamObservation", refExamObservation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refFAMRelationship EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefFAMRelationship(refFAMRelationship refFAMRelationship)
        {
            base.AddObject("refFAMRelationship", refFAMRelationship);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refHL7 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefHL7(refHL7 refHL7)
        {
            base.AddObject("refHL7", refHL7);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refHumanLanguage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefHumanLanguage(refHumanLanguage refHumanLanguage)
        {
            base.AddObject("refHumanLanguage", refHumanLanguage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refImmunization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefImmunization(refImmunization refImmunization)
        {
            base.AddObject("refImmunization", refImmunization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refInstUniversity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefInstUniversity(refInstUniversity refInstUniversity)
        {
            base.AddObject("refInstUniversity", refInstUniversity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refInsurKind EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefInsurKind(refInsurKind refInsurKind)
        {
            base.AddObject("refInsurKind", refInsurKind);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refInternalReceiptType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefInternalReceiptType(refInternalReceiptType refInternalReceiptType)
        {
            base.AddObject("refInternalReceiptType", refInternalReceiptType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refItemType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefItemType(refItemType refItemType)
        {
            base.AddObject("refItemType", refItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refJobBand EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefJobBand(refJobBand refJobBand)
        {
            base.AddObject("refJobBand", refJobBand);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refJobTitle EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefJobTitle(refJobTitle refJobTitle)
        {
            base.AddObject("refJobTitle", refJobTitle);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refLimVitalSign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefLimVitalSign(refLimVitalSign refLimVitalSign)
        {
            base.AddObject("refLimVitalSign", refLimVitalSign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refLookup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefLookup(refLookup refLookup)
        {
            base.AddObject("refLookup", refLookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedcnAdminRoute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedcnAdminRoute(refMedcnAdminRoute refMedcnAdminRoute)
        {
            base.AddObject("refMedcnAdminRoute", refMedcnAdminRoute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedcnVehicleForm EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedcnVehicleForm(refMedcnVehicleForm refMedcnVehicleForm)
        {
            base.AddObject("refMedcnVehicleForm", refMedcnVehicleForm);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedEquipResourceType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedEquipResourceType(refMedEquipResourceType refMedEquipResourceType)
        {
            base.AddObject("refMedEquipResourceType", refMedEquipResourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedHisIndex EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedHisIndex(refMedHisIndex refMedHisIndex)
        {
            base.AddObject("refMedHisIndex", refMedHisIndex);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedicalCondition EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedicalCondition(refMedicalCondition refMedicalCondition)
        {
            base.AddObject("refMedicalCondition", refMedicalCondition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refMedicalServiceType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefMedicalServiceType(refMedicalServiceType refMedicalServiceType)
        {
            base.AddObject("refMedicalServiceType", refMedicalServiceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refOccupation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefOccupation(refOccupation refOccupation)
        {
            base.AddObject("refOccupation", refOccupation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refPermission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefPermission(refPermission refPermission)
        {
            base.AddObject("refPermission", refPermission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refPersGender EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefPersGender(refPersGender refPersGender)
        {
            base.AddObject("refPersGender", refPersGender);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refPersMaritalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefPersMaritalStatus(refPersMaritalStatus refPersMaritalStatus)
        {
            base.AddObject("refPersMaritalStatus", refPersMaritalStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refPersRace EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefPersRace(refPersRace refPersRace)
        {
            base.AddObject("refPersRace", refPersRace);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refProblem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefProblem(refProblem refProblem)
        {
            base.AddObject("refProblem", refProblem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refProviderType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefProviderType(refProviderType refProviderType)
        {
            base.AddObject("refProviderType", refProviderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refQualification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefQualification(refQualification refQualification)
        {
            base.AddObject("refQualification", refQualification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refReligion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefReligion(refReligion refReligion)
        {
            base.AddObject("refReligion", refReligion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefRole(refRole refRole)
        {
            base.AddObject("refRole", refRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refShelfDrugLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefShelfDrugLocation(refShelfDrugLocation refShelfDrugLocation)
        {
            base.AddObject("refShelfDrugLocation", refShelfDrugLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refShift EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefShift(refShift refShift)
        {
            base.AddObject("refShift", refShift);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refSIPrefix EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefSIPrefix(refSIPrefix refSIPrefix)
        {
            base.AddObject("refSIPrefix", refSIPrefix);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refSocialHisSeverity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefSocialHisSeverity(refSocialHisSeverity refSocialHisSeverity)
        {
            base.AddObject("refSocialHisSeverity", refSocialHisSeverity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refSpecimenType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefSpecimenType(refSpecimenType refSpecimenType)
        {
            base.AddObject("refSpecimenType", refSpecimenType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refStoreHouse EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefStoreHouse(refStoreHouse refStoreHouse)
        {
            base.AddObject("refStoreHouse", refStoreHouse);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refTimeFrame EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefTimeFrame(refTimeFrame refTimeFrame)
        {
            base.AddObject("refTimeFrame", refTimeFrame);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refTransactionType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefTransactionType(refTransactionType refTransactionType)
        {
            base.AddObject("refTransactionType", refTransactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refTypeAbsent EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefTypeAbsent(refTypeAbsent refTypeAbsent)
        {
            base.AddObject("refTypeAbsent", refTypeAbsent);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refUnitOfMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefUnitOfMeasure(refUnitOfMeasure refUnitOfMeasure)
        {
            base.AddObject("refUnitOfMeasure", refUnitOfMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refVitalSign EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefVitalSign(refVitalSign refVitalSign)
        {
            base.AddObject("refVitalSign", refVitalSign);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the refWard EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTorefWard(refWard refWard)
        {
            base.AddObject("refWard", refWard);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegistrationInfo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegistrationInfo(RegistrationInfo registrationInfo)
        {
            base.AddObject("RegistrationInfo", registrationInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RegQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRegQueue(RegQueue regQueue)
        {
            base.AddObject("RegQueue", regQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReminderNotices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReminderNotices(ReminderNotices reminderNotices)
        {
            base.AddObject("ReminderNotices", reminderNotices);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RescrUsedInOperation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRescrUsedInOperation(RescrUsedInOperation rescrUsedInOperation)
        {
            base.AddObject("RescrUsedInOperation", rescrUsedInOperation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResearchPartnership EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResearchPartnership(ResearchPartnership researchPartnership)
        {
            base.AddObject("ResearchPartnership", researchPartnership);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Resource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResource(Resource resource)
        {
            base.AddObject("Resource", resource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ResourceLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToResourceLog(ResourceLog resourceLog)
        {
            base.AddObject("ResourceLog", resourceLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoomAllocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoomAllocation(RoomAllocation roomAllocation)
        {
            base.AddObject("RoomAllocation", roomAllocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RxHoldConsultation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRxHoldConsultation(RxHoldConsultation rxHoldConsultation)
        {
            base.AddObject("RxHoldConsultation", rxHoldConsultation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ScheduleDoingTaskLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToScheduleDoingTaskLog(ScheduleDoingTaskLog scheduleDoingTaskLog)
        {
            base.AddObject("ScheduleDoingTaskLog", scheduleDoingTaskLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SeparationOfBlood EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSeparationOfBlood(SeparationOfBlood separationOfBlood)
        {
            base.AddObject("SeparationOfBlood", separationOfBlood);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServerLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServerLog(ServerLog serverLog)
        {
            base.AddObject("ServerLog", serverLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Session EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSession(Session session)
        {
            base.AddObject("Session", session);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SocialAndHealthInsurance EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSocialAndHealthInsurance(SocialAndHealthInsurance socialAndHealthInsurance)
        {
            base.AddObject("SocialAndHealthInsurance", socialAndHealthInsurance);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecifiedParaclinical EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecifiedParaclinical(SpecifiedParaclinical specifiedParaclinical)
        {
            base.AddObject("SpecifiedParaclinical", specifiedParaclinical);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecMedRecTmp EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecMedRecTmp(SpecMedRecTmp specMedRecTmp)
        {
            base.AddObject("SpecMedRecTmp", specMedRecTmp);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StdKSection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStdKSection(StdKSection stdKSection)
        {
            base.AddObject("StdKSection", stdKSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supplier EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupplier(Supplier supplier)
        {
            base.AddObject("Supplier", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SymptomIndicator EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymptomIndicator(SymptomIndicator symptomIndicator)
        {
            base.AddObject("SymptomIndicator", symptomIndicator);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TechnicalInspectionAgency EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTechnicalInspectionAgency(TechnicalInspectionAgency technicalInspectionAgency)
        {
            base.AddObject("TechnicalInspectionAgency", technicalInspectionAgency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestBlood EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestBlood(TestBlood testBlood)
        {
            base.AddObject("TestBlood", testBlood);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TestOnPatientSpecimen EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTestOnPatientSpecimen(TestOnPatientSpecimen testOnPatientSpecimen)
        {
            base.AddObject("TestOnPatientSpecimen", testOnPatientSpecimen);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Trigs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrigs(Trigs trigs)
        {
            base.AddObject("Trigs", trigs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserAccount EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserAccount(UserAccount userAccount)
        {
            base.AddObject("UserAccount", userAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserGroup(UserGroup userGroup)
        {
            base.AddObject("UserGroup", userGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersInGroup EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersInGroup(UsersInGroup usersInGroup)
        {
            base.AddObject("UsersInGroup", usersInGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ward EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWard(Ward ward)
        {
            base.AddObject("Ward", ward);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WardInDept EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWardInDept(WardInDept wardInDept)
        {
            base.AddObject("WardInDept", wardInDept);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkingDay EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkingDay(WorkingDay workingDay)
        {
            base.AddObject("WorkingDay", workingDay);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkingSchedule EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkingSchedule(WorkingSchedule workingSchedule)
        {
            base.AddObject("WorkingSchedule", workingSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WorkPlace EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWorkPlace(WorkPlace workPlace)
        {
            base.AddObject("WorkPlace", workPlace);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AcPrincDrug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AcPrincDrug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AcPrincDrug object.
        /// </summary>
        /// <param name="aDID">Initial value of the ADID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="acPrincipleID">Initial value of the AcPrincipleID property.</param>
        public static AcPrincDrug CreateAcPrincDrug(global::System.Int64 aDID, global::System.Int64 drugID, global::System.Int64 acPrincipleID)
        {
            AcPrincDrug acPrincDrug = new AcPrincDrug();
            acPrincDrug.ADID = aDID;
            acPrincDrug.DrugID = drugID;
            acPrincDrug.AcPrincipleID = acPrincipleID;
            return acPrincDrug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ADID
        {
            get
            {
                return _ADID;
            }
            set
            {
                if (_ADID != value)
                {
                    OnADIDChanging(value);
                    ReportPropertyChanging("ADID");
                    _ADID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ADID");
                    OnADIDChanged();
                }
            }
        }
        private global::System.Int64 _ADID;
        partial void OnADIDChanging(global::System.Int64 value);
        partial void OnADIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AcPrincipleID
        {
            get
            {
                return _AcPrincipleID;
            }
            set
            {
                OnAcPrincipleIDChanging(value);
                ReportPropertyChanging("AcPrincipleID");
                _AcPrincipleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcPrincipleID");
                OnAcPrincipleIDChanged();
            }
        }
        private global::System.Int64 _AcPrincipleID;
        partial void OnAcPrincipleIDChanging(global::System.Int64 value);
        partial void OnAcPrincipleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AcPrincDrug_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AcPrincDrug_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AcPrincDrug_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AcPrincDrug_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_AcPrincDrug_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple")]
        public refActiviePrinciple refActiviePrinciple
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refActiviePrinciple>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refActiviePrinciple>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refActiviePrinciple> refActiviePrincipleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refActiviePrinciple>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refActiviePrinciple>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "refActiviePrinciple", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AdmNoTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmNoTemp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmNoTemp object.
        /// </summary>
        /// <param name="admNoTempID">Initial value of the AdmNoTempID property.</param>
        /// <param name="catg">Initial value of the Catg property.</param>
        public static AdmNoTemp CreateAdmNoTemp(global::System.Int64 admNoTempID, global::System.String catg)
        {
            AdmNoTemp admNoTemp = new AdmNoTemp();
            admNoTemp.AdmNoTempID = admNoTempID;
            admNoTemp.Catg = catg;
            return admNoTemp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmNoTempID
        {
            get
            {
                return _AdmNoTempID;
            }
            set
            {
                if (_AdmNoTempID != value)
                {
                    OnAdmNoTempIDChanging(value);
                    ReportPropertyChanging("AdmNoTempID");
                    _AdmNoTempID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmNoTempID");
                    OnAdmNoTempIDChanged();
                }
            }
        }
        private global::System.Int64 _AdmNoTempID;
        partial void OnAdmNoTempIDChanging(global::System.Int64 value);
        partial void OnAdmNoTempIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Catg
        {
            get
            {
                return _Catg;
            }
            set
            {
                OnCatgChanging(value);
                ReportPropertyChanging("Catg");
                _Catg = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Catg");
                OnCatgChanged();
            }
        }
        private global::System.String _Catg;
        partial void OnCatgChanging(global::System.String value);
        partial void OnCatgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosID;
        partial void OnHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private Nullable<global::System.Int16> _Year;
        partial void OnYearChanging(Nullable<global::System.Int16> value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Month
        {
            get
            {
                return _Month;
            }
            set
            {
                OnMonthChanging(value);
                ReportPropertyChanging("Month");
                _Month = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Month");
                OnMonthChanged();
            }
        }
        private Nullable<global::System.Byte> _Month;
        partial void OnMonthChanging(Nullable<global::System.Byte> value);
        partial void OnMonthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Day
        {
            get
            {
                return _Day;
            }
            set
            {
                OnDayChanging(value);
                ReportPropertyChanging("Day");
                _Day = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Day");
                OnDayChanged();
            }
        }
        private Nullable<global::System.Byte> _Day;
        partial void OnDayChanging(Nullable<global::System.Byte> value);
        partial void OnDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isIPt
        {
            get
            {
                return _isIPt;
            }
            set
            {
                OnisIPtChanging(value);
                ReportPropertyChanging("isIPt");
                _isIPt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isIPt");
                OnisIPtChanged();
            }
        }
        private Nullable<global::System.Boolean> _isIPt;
        partial void OnisIPtChanging(Nullable<global::System.Boolean> value);
        partial void OnisIPtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MaxNumber
        {
            get
            {
                return _MaxNumber;
            }
            set
            {
                OnMaxNumberChanging(value);
                ReportPropertyChanging("MaxNumber");
                _MaxNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxNumber");
                OnMaxNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _MaxNumber;
        partial void OnMaxNumberChanging(Nullable<global::System.Int32> value);
        partial void OnMaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTemp_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_AdmNoTemp_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_AdmNoTemp_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_AdmNoTemp_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_AdmNoTemp_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTempHolding")]
        public AdmNoTempHolding AdmNoTempHolding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTempHolding").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTempHolding").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmNoTempHolding> AdmNoTempHoldingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTempHolding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTempHolding", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AdmNoTempHolding")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdmNoTempHolding : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdmNoTempHolding object.
        /// </summary>
        /// <param name="admNoTempID">Initial value of the AdmNoTempID property.</param>
        public static AdmNoTempHolding CreateAdmNoTempHolding(global::System.Int64 admNoTempID)
        {
            AdmNoTempHolding admNoTempHolding = new AdmNoTempHolding();
            admNoTempHolding.AdmNoTempID = admNoTempID;
            return admNoTempHolding;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmNoTempID
        {
            get
            {
                return _AdmNoTempID;
            }
            set
            {
                if (_AdmNoTempID != value)
                {
                    OnAdmNoTempIDChanging(value);
                    ReportPropertyChanging("AdmNoTempID");
                    _AdmNoTempID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmNoTempID");
                    OnAdmNoTempIDChanged();
                }
            }
        }
        private global::System.Int64 _AdmNoTempID;
        partial void OnAdmNoTempIDChanging(global::System.Int64 value);
        partial void OnAdmNoTempIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtAdmNo
        {
            get
            {
                return _PtAdmNo;
            }
            set
            {
                OnPtAdmNoChanging(value);
                ReportPropertyChanging("PtAdmNo");
                _PtAdmNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtAdmNo");
                OnPtAdmNoChanged();
            }
        }
        private global::System.String _PtAdmNo;
        partial void OnPtAdmNoChanging(global::System.String value);
        partial void OnPtAdmNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsHolding
        {
            get
            {
                return _IsHolding;
            }
            set
            {
                OnIsHoldingChanging(value);
                ReportPropertyChanging("IsHolding");
                _IsHolding = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHolding");
                OnIsHoldingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsHolding;
        partial void OnIsHoldingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsHoldingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> GeneratedDate
        {
            get
            {
                return _GeneratedDate;
            }
            set
            {
                OnGeneratedDateChanging(value);
                ReportPropertyChanging("GeneratedDate");
                _GeneratedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeneratedDate");
                OnGeneratedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _GeneratedDate;
        partial void OnGeneratedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnGeneratedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp")]
        public AdmNoTemp AdmNoTemp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTemp>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTemp>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AdmNoTemp> AdmNoTempReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AdmNoTemp>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AdmNoTemp>("SureHisModel.FK_AdmNoTempHolding_AdmNoTemp", "AdmNoTemp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTempHolding_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AdvancedSpecialist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AdvancedSpecialist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AdvancedSpecialist object.
        /// </summary>
        /// <param name="aSpecID">Initial value of the ASpecID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="qualCode">Initial value of the QualCode property.</param>
        public static AdvancedSpecialist CreateAdvancedSpecialist(global::System.Int64 aSpecID, global::System.Int64 empID, global::System.Int64 qualCode)
        {
            AdvancedSpecialist advancedSpecialist = new AdvancedSpecialist();
            advancedSpecialist.ASpecID = aSpecID;
            advancedSpecialist.EmpID = empID;
            advancedSpecialist.QualCode = qualCode;
            return advancedSpecialist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ASpecID
        {
            get
            {
                return _ASpecID;
            }
            set
            {
                if (_ASpecID != value)
                {
                    OnASpecIDChanging(value);
                    ReportPropertyChanging("ASpecID");
                    _ASpecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASpecID");
                    OnASpecIDChanged();
                }
            }
        }
        private global::System.Int64 _ASpecID;
        partial void OnASpecIDChanging(global::System.Int64 value);
        partial void OnASpecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QualCode
        {
            get
            {
                return _QualCode;
            }
            set
            {
                OnQualCodeChanging(value);
                ReportPropertyChanging("QualCode");
                _QualCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QualCode");
                OnQualCodeChanged();
            }
        }
        private global::System.Int64 _QualCode;
        partial void OnQualCodeChanging(global::System.Int64 value);
        partial void OnQualCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateObtained
        {
            get
            {
                return _DateObtained;
            }
            set
            {
                OnDateObtainedChanging(value);
                ReportPropertyChanging("DateObtained");
                _DateObtained = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateObtained");
                OnDateObtainedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateObtained;
        partial void OnDateObtainedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateObtainedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SkillNotes
        {
            get
            {
                return _SkillNotes;
            }
            set
            {
                OnSkillNotesChanging(value);
                ReportPropertyChanging("SkillNotes");
                _SkillNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SkillNotes");
                OnSkillNotesChanged();
            }
        }
        private global::System.String _SkillNotes;
        partial void OnSkillNotesChanging(global::System.String value);
        partial void OnSkillNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdvancedSpecialist_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AdvancedSpecialist_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AdvancedSpecialist_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AdvancedSpecialist_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_AdvancedSpecialist_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdvancedSpecialist_refQualification", "refQualification")]
        public refQualification refQualification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refQualification>("SureHisModel.FK_AdvancedSpecialist_refQualification", "refQualification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refQualification>("SureHisModel.FK_AdvancedSpecialist_refQualification", "refQualification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refQualification> refQualificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refQualification>("SureHisModel.FK_AdvancedSpecialist_refQualification", "refQualification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refQualification>("SureHisModel.FK_AdvancedSpecialist_refQualification", "refQualification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Alert")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Alert : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Alert object.
        /// </summary>
        /// <param name="alertID">Initial value of the AlertID property.</param>
        /// <param name="noticesID">Initial value of the NoticesID property.</param>
        /// <param name="appID">Initial value of the AppID property.</param>
        /// <param name="alertTime">Initial value of the AlertTime property.</param>
        /// <param name="isCompleted">Initial value of the isCompleted property.</param>
        public static Alert CreateAlert(global::System.Int64 alertID, global::System.Int64 noticesID, global::System.Int64 appID, global::System.DateTime alertTime, global::System.Boolean isCompleted)
        {
            Alert alert = new Alert();
            alert.AlertID = alertID;
            alert.NoticesID = noticesID;
            alert.AppID = appID;
            alert.AlertTime = alertTime;
            alert.isCompleted = isCompleted;
            return alert;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AlertID
        {
            get
            {
                return _AlertID;
            }
            set
            {
                if (_AlertID != value)
                {
                    OnAlertIDChanging(value);
                    ReportPropertyChanging("AlertID");
                    _AlertID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlertID");
                    OnAlertIDChanged();
                }
            }
        }
        private global::System.Int64 _AlertID;
        partial void OnAlertIDChanging(global::System.Int64 value);
        partial void OnAlertIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NoticesID
        {
            get
            {
                return _NoticesID;
            }
            set
            {
                OnNoticesIDChanging(value);
                ReportPropertyChanging("NoticesID");
                _NoticesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoticesID");
                OnNoticesIDChanged();
            }
        }
        private global::System.Int64 _NoticesID;
        partial void OnNoticesIDChanging(global::System.Int64 value);
        partial void OnNoticesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AppID
        {
            get
            {
                return _AppID;
            }
            set
            {
                OnAppIDChanging(value);
                ReportPropertyChanging("AppID");
                _AppID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppID");
                OnAppIDChanged();
            }
        }
        private global::System.Int64 _AppID;
        partial void OnAppIDChanging(global::System.Int64 value);
        partial void OnAppIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AlertTime
        {
            get
            {
                return _AlertTime;
            }
            set
            {
                OnAlertTimeChanging(value);
                ReportPropertyChanging("AlertTime");
                _AlertTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlertTime");
                OnAlertTimeChanged();
            }
        }
        private global::System.DateTime _AlertTime;
        partial void OnAlertTimeChanging(global::System.DateTime value);
        partial void OnAlertTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isCompleted
        {
            get
            {
                return _isCompleted;
            }
            set
            {
                OnisCompletedChanging(value);
                ReportPropertyChanging("isCompleted");
                _isCompleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isCompleted");
                OnisCompletedChanged();
            }
        }
        private global::System.Boolean _isCompleted;
        partial void OnisCompletedChanging(global::System.Boolean value);
        partial void OnisCompletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_Frequency
        {
            get
            {
                return _V_Frequency;
            }
            set
            {
                OnV_FrequencyChanging(value);
                ReportPropertyChanging("V_Frequency");
                _V_Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_Frequency");
                OnV_FrequencyChanged();
            }
        }
        private Nullable<global::System.Int64> _V_Frequency;
        partial void OnV_FrequencyChanging(Nullable<global::System.Int64> value);
        partial void OnV_FrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_ReminderTimes
        {
            get
            {
                return _V_ReminderTimes;
            }
            set
            {
                OnV_ReminderTimesChanging(value);
                ReportPropertyChanging("V_ReminderTimes");
                _V_ReminderTimes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ReminderTimes");
                OnV_ReminderTimesChanged();
            }
        }
        private Nullable<global::System.Int64> _V_ReminderTimes;
        partial void OnV_ReminderTimesChanging(Nullable<global::System.Int64> value);
        partial void OnV_ReminderTimesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Alert_Appointment", "Appointment")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Alert_Appointment", "Appointment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Alert_Appointment", "Appointment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Alert_Appointment", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("SureHisModel.FK_Alert_Appointment", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Alert_Reminder", "ReminderNotices")]
        public ReminderNotices ReminderNotices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderNotices>("SureHisModel.FK_Alert_Reminder", "ReminderNotices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderNotices>("SureHisModel.FK_Alert_Reminder", "ReminderNotices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReminderNotices> ReminderNoticesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReminderNotices>("SureHisModel.FK_Alert_Reminder", "ReminderNotices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReminderNotices>("SureHisModel.FK_Alert_Reminder", "ReminderNotices", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AllergyIntolerance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AllergyIntolerance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AllergyIntolerance object.
        /// </summary>
        /// <param name="allergyID">Initial value of the AllergyID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="allgIndexID">Initial value of the AllgIndexID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static AllergyIntolerance CreateAllergyIntolerance(global::System.Int64 allergyID, global::System.Int64 ptComMedRecID, global::System.Int64 allgIndexID, global::System.DateTime modifiedDate)
        {
            AllergyIntolerance allergyIntolerance = new AllergyIntolerance();
            allergyIntolerance.AllergyID = allergyID;
            allergyIntolerance.PtComMedRecID = ptComMedRecID;
            allergyIntolerance.AllgIndexID = allgIndexID;
            allergyIntolerance.ModifiedDate = modifiedDate;
            return allergyIntolerance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AllergyID
        {
            get
            {
                return _AllergyID;
            }
            set
            {
                if (_AllergyID != value)
                {
                    OnAllergyIDChanging(value);
                    ReportPropertyChanging("AllergyID");
                    _AllergyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AllergyID");
                    OnAllergyIDChanged();
                }
            }
        }
        private global::System.Int64 _AllergyID;
        partial void OnAllergyIDChanging(global::System.Int64 value);
        partial void OnAllergyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AllgIndexID
        {
            get
            {
                return _AllgIndexID;
            }
            set
            {
                OnAllgIndexIDChanging(value);
                ReportPropertyChanging("AllgIndexID");
                _AllgIndexID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllgIndexID");
                OnAllgIndexIDChanged();
            }
        }
        private global::System.Int64 _AllgIndexID;
        partial void OnAllgIndexIDChanging(global::System.Int64 value);
        partial void OnAllgIndexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllergyText
        {
            get
            {
                return _AllergyText;
            }
            set
            {
                OnAllergyTextChanging(value);
                ReportPropertyChanging("AllergyText");
                _AllergyText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllergyText");
                OnAllergyTextChanged();
            }
        }
        private global::System.String _AllergyText;
        partial void OnAllergyTextChanging(global::System.String value);
        partial void OnAllergyTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> H7AllgSeverity
        {
            get
            {
                return _H7AllgSeverity;
            }
            set
            {
                OnH7AllgSeverityChanging(value);
                ReportPropertyChanging("H7AllgSeverity");
                _H7AllgSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7AllgSeverity");
                OnH7AllgSeverityChanged();
            }
        }
        private Nullable<global::System.Int64> _H7AllgSeverity;
        partial void OnH7AllgSeverityChanging(Nullable<global::System.Int64> value);
        partial void OnH7AllgSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> H7AllgStatus
        {
            get
            {
                return _H7AllgStatus;
            }
            set
            {
                OnH7AllgStatusChanging(value);
                ReportPropertyChanging("H7AllgStatus");
                _H7AllgStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7AllgStatus");
                OnH7AllgStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _H7AllgStatus;
        partial void OnH7AllgStatusChanging(Nullable<global::System.Int64> value);
        partial void OnH7AllgStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AllgReactionText
        {
            get
            {
                return _AllgReactionText;
            }
            set
            {
                OnAllgReactionTextChanging(value);
                ReportPropertyChanging("AllgReactionText");
                _AllgReactionText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AllgReactionText");
                OnAllgReactionTextChanged();
            }
        }
        private global::System.String _AllgReactionText;
        partial void OnAllgReactionTextChanging(global::System.String value);
        partial void OnAllgReactionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AllgOnsetDtm
        {
            get
            {
                return _AllgOnsetDtm;
            }
            set
            {
                OnAllgOnsetDtmChanging(value);
                ReportPropertyChanging("AllgOnsetDtm");
                _AllgOnsetDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllgOnsetDtm");
                OnAllgOnsetDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _AllgOnsetDtm;
        partial void OnAllgOnsetDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnAllgOnsetDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDel
        {
            get
            {
                return _IsDel;
            }
            set
            {
                OnIsDelChanging(value);
                ReportPropertyChanging("IsDel");
                _IsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDel");
                OnIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDel;
        partial void OnIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex")]
        public refAllergyIndex refAllergyIndex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyIndex>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyIndex>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAllergyIndex> refAllergyIndexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyIndex>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAllergyIndex>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "refAllergyIndex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AntagonistDrug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AntagonistDrug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AntagonistDrug object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="antaDrugID">Initial value of the AntaDrugID property.</param>
        /// <param name="antagonistKind">Initial value of the AntagonistKind property.</param>
        /// <param name="autoReplace">Initial value of the AutoReplace property.</param>
        public static AntagonistDrug CreateAntagonistDrug(global::System.Int64 id, global::System.Int64 drugID, global::System.Int64 antaDrugID, global::System.Int16 antagonistKind, global::System.Boolean autoReplace)
        {
            AntagonistDrug antagonistDrug = new AntagonistDrug();
            antagonistDrug.ID = id;
            antagonistDrug.DrugID = drugID;
            antagonistDrug.AntaDrugID = antaDrugID;
            antagonistDrug.AntagonistKind = antagonistKind;
            antagonistDrug.AutoReplace = autoReplace;
            return antagonistDrug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AntaDrugID
        {
            get
            {
                return _AntaDrugID;
            }
            set
            {
                OnAntaDrugIDChanging(value);
                ReportPropertyChanging("AntaDrugID");
                _AntaDrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AntaDrugID");
                OnAntaDrugIDChanged();
            }
        }
        private global::System.Int64 _AntaDrugID;
        partial void OnAntaDrugIDChanging(global::System.Int64 value);
        partial void OnAntaDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AntagonistLevel
        {
            get
            {
                return _AntagonistLevel;
            }
            set
            {
                OnAntagonistLevelChanging(value);
                ReportPropertyChanging("AntagonistLevel");
                _AntagonistLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AntagonistLevel");
                OnAntagonistLevelChanged();
            }
        }
        private global::System.String _AntagonistLevel;
        partial void OnAntagonistLevelChanging(global::System.String value);
        partial void OnAntagonistLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Result
        {
            get
            {
                return _Result;
            }
            set
            {
                OnResultChanging(value);
                ReportPropertyChanging("Result");
                _Result = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Result");
                OnResultChanged();
            }
        }
        private global::System.String _Result;
        partial void OnResultChanging(global::System.String value);
        partial void OnResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Handle
        {
            get
            {
                return _Handle;
            }
            set
            {
                OnHandleChanging(value);
                ReportPropertyChanging("Handle");
                _Handle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Handle");
                OnHandleChanged();
            }
        }
        private global::System.String _Handle;
        partial void OnHandleChanging(global::System.String value);
        partial void OnHandleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Mechanism
        {
            get
            {
                return _Mechanism;
            }
            set
            {
                OnMechanismChanging(value);
                ReportPropertyChanging("Mechanism");
                _Mechanism = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Mechanism");
                OnMechanismChanged();
            }
        }
        private Nullable<global::System.Int16> _Mechanism;
        partial void OnMechanismChanging(Nullable<global::System.Int16> value);
        partial void OnMechanismChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 AntagonistKind
        {
            get
            {
                return _AntagonistKind;
            }
            set
            {
                OnAntagonistKindChanging(value);
                ReportPropertyChanging("AntagonistKind");
                _AntagonistKind = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AntagonistKind");
                OnAntagonistKindChanged();
            }
        }
        private global::System.Int16 _AntagonistKind;
        partial void OnAntagonistKindChanging(global::System.Int16 value);
        partial void OnAntagonistKindChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AutoReplace
        {
            get
            {
                return _AutoReplace;
            }
            set
            {
                OnAutoReplaceChanging(value);
                ReportPropertyChanging("AutoReplace");
                _AutoReplace = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AutoReplace");
                OnAutoReplaceChanged();
            }
        }
        private global::System.Boolean _AutoReplace;
        partial void OnAutoReplaceChanging(global::System.Boolean value);
        partial void OnAutoReplaceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AntagonistDrug_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AntagonistDrug_Drug_02", "Drug")]
        public Drug Drug1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug_02", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug_02", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> Drug1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug_02", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_AntagonistDrug_Drug_02", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Application")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Application : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Application object.
        /// </summary>
        /// <param name="appFuncID">Initial value of the AppFuncID property.</param>
        /// <param name="appFunctions">Initial value of the AppFunctions property.</param>
        public static Application CreateApplication(global::System.Int64 appFuncID, global::System.String appFunctions)
        {
            Application application = new Application();
            application.AppFuncID = appFuncID;
            application.AppFunctions = appFunctions;
            return application;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PAppFuncID
        {
            get
            {
                return _PAppFuncID;
            }
            set
            {
                OnPAppFuncIDChanging(value);
                ReportPropertyChanging("PAppFuncID");
                _PAppFuncID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PAppFuncID");
                OnPAppFuncIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PAppFuncID;
        partial void OnPAppFuncIDChanging(Nullable<global::System.Int64> value);
        partial void OnPAppFuncIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AppFuncID
        {
            get
            {
                return _AppFuncID;
            }
            set
            {
                if (_AppFuncID != value)
                {
                    OnAppFuncIDChanging(value);
                    ReportPropertyChanging("AppFuncID");
                    _AppFuncID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AppFuncID");
                    OnAppFuncIDChanged();
                }
            }
        }
        private global::System.Int64 _AppFuncID;
        partial void OnAppFuncIDChanging(global::System.Int64 value);
        partial void OnAppFuncIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AppFunctions
        {
            get
            {
                return _AppFunctions;
            }
            set
            {
                OnAppFunctionsChanging(value);
                ReportPropertyChanging("AppFunctions");
                _AppFunctions = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AppFunctions");
                OnAppFunctionsChanged();
            }
        }
        private global::System.String _AppFunctions;
        partial void OnAppFunctionsChanging(global::System.String value);
        partial void OnAppFunctionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppTitle
        {
            get
            {
                return _AppTitle;
            }
            set
            {
                OnAppTitleChanging(value);
                ReportPropertyChanging("AppTitle");
                _AppTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AppTitle");
                OnAppTitleChanged();
            }
        }
        private global::System.String _AppTitle;
        partial void OnAppTitleChanging(global::System.String value);
        partial void OnAppTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppDesc
        {
            get
            {
                return _AppDesc;
            }
            set
            {
                OnAppDescChanging(value);
                ReportPropertyChanging("AppDesc");
                _AppDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AppDesc");
                OnAppDescChanged();
            }
        }
        private global::System.String _AppDesc;
        partial void OnAppDescChanging(global::System.String value);
        partial void OnAppDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LandingPageURL
        {
            get
            {
                return _LandingPageURL;
            }
            set
            {
                OnLandingPageURLChanging(value);
                ReportPropertyChanging("LandingPageURL");
                _LandingPageURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LandingPageURL");
                OnLandingPageURLChanged();
            }
        }
        private global::System.String _LandingPageURL;
        partial void OnLandingPageURLChanging(global::System.String value);
        partial void OnLandingPageURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColorSchema
        {
            get
            {
                return _ColorSchema;
            }
            set
            {
                OnColorSchemaChanging(value);
                ReportPropertyChanging("ColorSchema");
                _ColorSchema = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColorSchema");
                OnColorSchemaChanged();
            }
        }
        private global::System.String _ColorSchema;
        partial void OnColorSchemaChanging(global::System.String value);
        partial void OnColorSchemaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IconPath
        {
            get
            {
                return _IconPath;
            }
            set
            {
                OnIconPathChanging(value);
                ReportPropertyChanging("IconPath");
                _IconPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IconPath");
                OnIconPathChanged();
            }
        }
        private global::System.String _IconPath;
        partial void OnIconPathChanging(global::System.String value);
        partial void OnIconPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Badge
        {
            get
            {
                return _Badge;
            }
            set
            {
                OnBadgeChanging(value);
                ReportPropertyChanging("Badge");
                _Badge = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Badge");
                OnBadgeChanged();
            }
        }
        private global::System.String _Badge;
        partial void OnBadgeChanging(global::System.String value);
        partial void OnBadgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLongTile
        {
            get
            {
                return _IsLongTile;
            }
            set
            {
                OnIsLongTileChanging(value);
                ReportPropertyChanging("IsLongTile");
                _IsLongTile = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLongTile");
                OnIsLongTileChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLongTile;
        partial void OnIsLongTileChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLongTileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                OnIdxChanging(value);
                ReportPropertyChanging("Idx");
                _Idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Idx");
                OnIdxChanged();
            }
        }
        private Nullable<global::System.Byte> _Idx;
        partial void OnIdxChanging(Nullable<global::System.Byte> value);
        partial void OnIdxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NotDisplayed
        {
            get
            {
                return _NotDisplayed;
            }
            set
            {
                OnNotDisplayedChanging(value);
                ReportPropertyChanging("NotDisplayed");
                _NotDisplayed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotDisplayed");
                OnNotDisplayedChanged();
            }
        }
        private Nullable<global::System.Boolean> _NotDisplayed;
        partial void OnNotDisplayedChanging(Nullable<global::System.Boolean> value);
        partial void OnNotDisplayedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FuncType
        {
            get
            {
                return _FuncType;
            }
            set
            {
                OnFuncTypeChanging(value);
                ReportPropertyChanging("FuncType");
                _FuncType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FuncType");
                OnFuncTypeChanged();
            }
        }
        private global::System.String _FuncType;
        partial void OnFuncTypeChanging(global::System.String value);
        partial void OnFuncTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Application_Application", "Application1")]
        public EntityCollection<Application> Application1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Application>("SureHisModel.FK_Application_Application", "Application1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Application>("SureHisModel.FK_Application_Application", "Application1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Application_Application", "Application")]
        public Application Application2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Application_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Application_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> Application2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Application_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("SureHisModel.FK_Application_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrivilegeRole_Application", "PrivilegeRole")]
        public EntityCollection<PrivilegeRole> PrivilegeRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivilegeRole>("SureHisModel.FK_PrivilegeRole_Application", "PrivilegeRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivilegeRole>("SureHisModel.FK_PrivilegeRole_Application", "PrivilegeRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Realms_Application", "Realms")]
        public EntityCollection<Realms> Realms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Realms>("SureHisModel.FK_Realms_Application", "Realms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Realms>("SureHisModel.FK_Realms_Application", "Realms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AppliedMedStandard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AppliedMedStandard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AppliedMedStandard object.
        /// </summary>
        /// <param name="medDeviceStdID">Initial value of the MedDeviceStdID property.</param>
        /// <param name="rscrID">Initial value of the RscrID property.</param>
        /// <param name="v_MedDeviceStd">Initial value of the V_MedDeviceStd property.</param>
        public static AppliedMedStandard CreateAppliedMedStandard(global::System.Int64 medDeviceStdID, global::System.Int64 rscrID, global::System.Int64 v_MedDeviceStd)
        {
            AppliedMedStandard appliedMedStandard = new AppliedMedStandard();
            appliedMedStandard.MedDeviceStdID = medDeviceStdID;
            appliedMedStandard.RscrID = rscrID;
            appliedMedStandard.V_MedDeviceStd = v_MedDeviceStd;
            return appliedMedStandard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedDeviceStdID
        {
            get
            {
                return _MedDeviceStdID;
            }
            set
            {
                if (_MedDeviceStdID != value)
                {
                    OnMedDeviceStdIDChanging(value);
                    ReportPropertyChanging("MedDeviceStdID");
                    _MedDeviceStdID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedDeviceStdID");
                    OnMedDeviceStdIDChanged();
                }
            }
        }
        private global::System.Int64 _MedDeviceStdID;
        partial void OnMedDeviceStdIDChanging(global::System.Int64 value);
        partial void OnMedDeviceStdIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RscrID
        {
            get
            {
                return _RscrID;
            }
            set
            {
                OnRscrIDChanging(value);
                ReportPropertyChanging("RscrID");
                _RscrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RscrID");
                OnRscrIDChanged();
            }
        }
        private global::System.Int64 _RscrID;
        partial void OnRscrIDChanging(global::System.Int64 value);
        partial void OnRscrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_MedDeviceStd
        {
            get
            {
                return _V_MedDeviceStd;
            }
            set
            {
                OnV_MedDeviceStdChanging(value);
                ReportPropertyChanging("V_MedDeviceStd");
                _V_MedDeviceStd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedDeviceStd");
                OnV_MedDeviceStdChanged();
            }
        }
        private global::System.Int64 _V_MedDeviceStd;
        partial void OnV_MedDeviceStdChanging(global::System.Int64 value);
        partial void OnV_MedDeviceStdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AppliedMedStandard_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_AppliedMedStandard_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_AppliedMedStandard_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_AppliedMedStandard_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("SureHisModel.FK_AppliedMedStandard_Resource", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Appointment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Appointment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Appointment object.
        /// </summary>
        /// <param name="apptID">Initial value of the ApptID property.</param>
        /// <param name="apptDate">Initial value of the ApptDate property.</param>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        /// <param name="v_ApptStatus">Initial value of the V_ApptStatus property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Appointment CreateAppointment(global::System.Int64 apptID, global::System.DateTime apptDate, global::System.Int64 medSerID, global::System.Int64 v_ApptStatus, global::System.DateTime dateCreated)
        {
            Appointment appointment = new Appointment();
            appointment.ApptID = apptID;
            appointment.ApptDate = apptDate;
            appointment.MedSerID = medSerID;
            appointment.V_ApptStatus = v_ApptStatus;
            appointment.DateCreated = dateCreated;
            return appointment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ApptID
        {
            get
            {
                return _ApptID;
            }
            set
            {
                if (_ApptID != value)
                {
                    OnApptIDChanging(value);
                    ReportPropertyChanging("ApptID");
                    _ApptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ApptID");
                    OnApptIDChanged();
                }
            }
        }
        private global::System.Int64 _ApptID;
        partial void OnApptIDChanging(global::System.Int64 value);
        partial void OnApptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OQueueID
        {
            get
            {
                return _OQueueID;
            }
            set
            {
                OnOQueueIDChanging(value);
                ReportPropertyChanging("OQueueID");
                _OQueueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OQueueID");
                OnOQueueIDChanged();
            }
        }
        private Nullable<global::System.Int64> _OQueueID;
        partial void OnOQueueIDChanging(Nullable<global::System.Int64> value);
        partial void OnOQueueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApptDate
        {
            get
            {
                return _ApptDate;
            }
            set
            {
                OnApptDateChanging(value);
                ReportPropertyChanging("ApptDate");
                _ApptDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApptDate");
                OnApptDateChanged();
            }
        }
        private global::System.DateTime _ApptDate;
        partial void OnApptDateChanging(global::System.DateTime value);
        partial void OnApptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> AppTime
        {
            get
            {
                return _AppTime;
            }
            set
            {
                OnAppTimeChanging(value);
                ReportPropertyChanging("AppTime");
                _AppTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppTime");
                OnAppTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _AppTime;
        partial void OnAppTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnAppTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> WSID
        {
            get
            {
                return _WSID;
            }
            set
            {
                OnWSIDChanging(value);
                ReportPropertyChanging("WSID");
                _WSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WSID");
                OnWSIDChanged();
            }
        }
        private Nullable<global::System.Int64> _WSID;
        partial void OnWSIDChanging(Nullable<global::System.Int64> value);
        partial void OnWSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private Nullable<global::System.Int64> _WDID;
        partial void OnWDIDChanging(Nullable<global::System.Int64> value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TFID
        {
            get
            {
                return _TFID;
            }
            set
            {
                OnTFIDChanging(value);
                ReportPropertyChanging("TFID");
                _TFID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFID");
                OnTFIDChanged();
            }
        }
        private Nullable<global::System.Int16> _TFID;
        partial void OnTFIDChanging(Nullable<global::System.Int16> value);
        partial void OnTFIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ApptStatus
        {
            get
            {
                return _V_ApptStatus;
            }
            set
            {
                OnV_ApptStatusChanging(value);
                ReportPropertyChanging("V_ApptStatus");
                _V_ApptStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ApptStatus");
                OnV_ApptStatusChanged();
            }
        }
        private global::System.Int64 _V_ApptStatus;
        partial void OnV_ApptStatusChanging(global::System.Int64 value);
        partial void OnV_ApptStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CSEmpID
        {
            get
            {
                return _CSEmpID;
            }
            set
            {
                OnCSEmpIDChanging(value);
                ReportPropertyChanging("CSEmpID");
                _CSEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CSEmpID");
                OnCSEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _CSEmpID;
        partial void OnCSEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnCSEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_ApptMethod
        {
            get
            {
                return _V_ApptMethod;
            }
            set
            {
                OnV_ApptMethodChanging(value);
                ReportPropertyChanging("V_ApptMethod");
                _V_ApptMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ApptMethod");
                OnV_ApptMethodChanged();
            }
        }
        private Nullable<global::System.Int64> _V_ApptMethod;
        partial void OnV_ApptMethodChanging(Nullable<global::System.Int64> value);
        partial void OnV_ApptMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubApptDate
        {
            get
            {
                return _SubApptDate;
            }
            set
            {
                OnSubApptDateChanging(value);
                ReportPropertyChanging("SubApptDate");
                _SubApptDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubApptDate");
                OnSubApptDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubApptDate;
        partial void OnSubApptDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubApptDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> SubAppTime
        {
            get
            {
                return _SubAppTime;
            }
            set
            {
                OnSubAppTimeChanging(value);
                ReportPropertyChanging("SubAppTime");
                _SubAppTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubAppTime");
                OnSubAppTimeChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _SubAppTime;
        partial void OnSubAppTimeChanging(Nullable<global::System.TimeSpan> value);
        partial void OnSubAppTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReasonOrSymptom
        {
            get
            {
                return _ReasonOrSymptom;
            }
            set
            {
                OnReasonOrSymptomChanging(value);
                ReportPropertyChanging("ReasonOrSymptom");
                _ReasonOrSymptom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReasonOrSymptom");
                OnReasonOrSymptomChanged();
            }
        }
        private global::System.String _ReasonOrSymptom;
        partial void OnReasonOrSymptomChanging(global::System.String value);
        partial void OnReasonOrSymptomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AssignedDoctorID
        {
            get
            {
                return _AssignedDoctorID;
            }
            set
            {
                OnAssignedDoctorIDChanging(value);
                ReportPropertyChanging("AssignedDoctorID");
                _AssignedDoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AssignedDoctorID");
                OnAssignedDoctorIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AssignedDoctorID;
        partial void OnAssignedDoctorIDChanging(Nullable<global::System.Int64> value);
        partial void OnAssignedDoctorIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Alert_Appointment", "Alert")]
        public EntityCollection<Alert> Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alert>("SureHisModel.FK_Alert_Appointment", "Alert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alert>("SureHisModel.FK_Alert_Appointment", "Alert", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Appointment_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Appointment_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Appointment_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_Appointment_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule")]
        public EmpWorkSchedule EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpWorkSchedule> EmpWorkScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpWorkSchedule>("SureHisModel.FK_Appointment_EmpWorkSchedule", "EmpWorkSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_Appointment_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_Appointment_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_Appointment_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_Appointment_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_OnlineQueue", "OnlineQueue")]
        public OnlineQueue OnlineQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineQueue>("SureHisModel.FK_Appointment_OnlineQueue", "OnlineQueue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineQueue>("SureHisModel.FK_Appointment_OnlineQueue", "OnlineQueue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnlineQueue> OnlineQueueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnlineQueue>("SureHisModel.FK_Appointment_OnlineQueue", "OnlineQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnlineQueue>("SureHisModel.FK_Appointment_OnlineQueue", "OnlineQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_refTimeFrame", "refTimeFrame")]
        public refTimeFrame refTimeFrame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_Appointment_refTimeFrame", "refTimeFrame").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_Appointment_refTimeFrame", "refTimeFrame").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTimeFrame> refTimeFrameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_Appointment_refTimeFrame", "refTimeFrame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTimeFrame>("SureHisModel.FK_Appointment_refTimeFrame", "refTimeFrame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Appointment_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Appointment_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Appointment_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_Appointment_WardInDept", "WardInDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_Appointment", "Prescription")]
        public EntityCollection<Prescription> Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("SureHisModel.FK_Prescription_Appointment", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("SureHisModel.FK_Prescription_Appointment", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ArchitectureResources")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ArchitectureResources : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ArchitectureResources object.
        /// </summary>
        /// <param name="aRescrID">Initial value of the ARescrID property.</param>
        /// <param name="physicalLocation">Initial value of the PhysicalLocation property.</param>
        /// <param name="physicalAddress">Initial value of the PhysicalAddress property.</param>
        public static ArchitectureResources CreateArchitectureResources(global::System.Int64 aRescrID, global::System.String physicalLocation, global::System.String physicalAddress)
        {
            ArchitectureResources architectureResources = new ArchitectureResources();
            architectureResources.ARescrID = aRescrID;
            architectureResources.PhysicalLocation = physicalLocation;
            architectureResources.PhysicalAddress = physicalAddress;
            return architectureResources;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ARescrID
        {
            get
            {
                return _ARescrID;
            }
            set
            {
                if (_ARescrID != value)
                {
                    OnARescrIDChanging(value);
                    ReportPropertyChanging("ARescrID");
                    _ARescrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ARescrID");
                    OnARescrIDChanged();
                }
            }
        }
        private global::System.Int64 _ARescrID;
        partial void OnARescrIDChanging(global::System.Int64 value);
        partial void OnARescrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PARescrID
        {
            get
            {
                return _PARescrID;
            }
            set
            {
                OnPARescrIDChanging(value);
                ReportPropertyChanging("PARescrID");
                _PARescrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PARescrID");
                OnPARescrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PARescrID;
        partial void OnPARescrIDChanging(Nullable<global::System.Int64> value);
        partial void OnPARescrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalLocation
        {
            get
            {
                return _PhysicalLocation;
            }
            set
            {
                OnPhysicalLocationChanging(value);
                ReportPropertyChanging("PhysicalLocation");
                _PhysicalLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalLocation");
                OnPhysicalLocationChanged();
            }
        }
        private global::System.String _PhysicalLocation;
        partial void OnPhysicalLocationChanging(global::System.String value);
        partial void OnPhysicalLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhysicalAddress
        {
            get
            {
                return _PhysicalAddress;
            }
            set
            {
                OnPhysicalAddressChanging(value);
                ReportPropertyChanging("PhysicalAddress");
                _PhysicalAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhysicalAddress");
                OnPhysicalAddressChanged();
            }
        }
        private global::System.String _PhysicalAddress;
        partial void OnPhysicalAddressChanging(global::System.String value);
        partial void OnPhysicalAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PDepreciationRate
        {
            get
            {
                return _PDepreciationRate;
            }
            set
            {
                OnPDepreciationRateChanging(value);
                ReportPropertyChanging("PDepreciationRate");
                _PDepreciationRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PDepreciationRate");
                OnPDepreciationRateChanged();
            }
        }
        private Nullable<global::System.Double> _PDepreciationRate;
        partial void OnPDepreciationRateChanging(Nullable<global::System.Double> value);
        partial void OnPDepreciationRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allocation_ArchitectureResources", "RoomAllocation")]
        public EntityCollection<RoomAllocation> RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomAllocation>("SureHisModel.FK_Allocation_ArchitectureResources", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomAllocation>("SureHisModel.FK_Allocation_ArchitectureResources", "RoomAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources1")]
        public EntityCollection<ArchitectureResources> ArchitectureResources1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources")]
        public ArchitectureResources ArchitectureResources2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArchitectureResources> ArchitectureResources2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArchitectureResources>("SureHisModel.FK_ArchitectureResources_ArchitectureResources", "ArchitectureResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetRole object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ASPNetRole CreateASPNetRole(global::System.Int64 roleID, global::System.String name)
        {
            ASPNetRole aSPNetRole = new ASPNetRole();
            aSPNetRole.RoleID = roleID;
            aSPNetRole.Name = name;
            return aSPNetRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TRolePermission_TRole", "ASPNetRolePermission")]
        public EntityCollection<ASPNetRolePermission> ASPNetRolePermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetRolePermission>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetRolePermission>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRolePermission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TUserRole_TRole", "ASPNetUserRole")]
        public EntityCollection<ASPNetUserRole> ASPNetUserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetUserRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetUserRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetUserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetRolePermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetRolePermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetRolePermission object.
        /// </summary>
        /// <param name="rightID">Initial value of the RightID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="permItemID">Initial value of the PermItemID property.</param>
        public static ASPNetRolePermission CreateASPNetRolePermission(global::System.Int64 rightID, global::System.Int64 roleID, global::System.Int64 permItemID)
        {
            ASPNetRolePermission aSPNetRolePermission = new ASPNetRolePermission();
            aSPNetRolePermission.RightID = rightID;
            aSPNetRolePermission.RoleID = roleID;
            aSPNetRolePermission.PermItemID = permItemID;
            return aSPNetRolePermission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RightID
        {
            get
            {
                return _RightID;
            }
            set
            {
                if (_RightID != value)
                {
                    OnRightIDChanging(value);
                    ReportPropertyChanging("RightID");
                    _RightID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RightID");
                    OnRightIDChanged();
                }
            }
        }
        private global::System.Int64 _RightID;
        partial void OnRightIDChanging(global::System.Int64 value);
        partial void OnRightIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PermItemID
        {
            get
            {
                return _PermItemID;
            }
            set
            {
                OnPermItemIDChanging(value);
                ReportPropertyChanging("PermItemID");
                _PermItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermItemID");
                OnPermItemIDChanged();
            }
        }
        private global::System.Int64 _PermItemID;
        partial void OnPermItemIDChanging(global::System.Int64 value);
        partial void OnPermItemIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TRolePermission_TRole", "ASPNetRole")]
        public ASPNetRole ASPNetRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ASPNetRole> ASPNetRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ASPNetRole>("SureHisModel.FK_TRolePermission_TRole", "ASPNetRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetRolePermission_refPermission", "refPermission")]
        public refPermission refPermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "refPermission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "refPermission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPermission> refPermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "refPermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "refPermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetToken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetToken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetToken object.
        /// </summary>
        /// <param name="tokenID">Initial value of the TokenID property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static ASPNetToken CreateASPNetToken(global::System.Int64 tokenID, global::System.String value)
        {
            ASPNetToken aSPNetToken = new ASPNetToken();
            aSPNetToken.TokenID = tokenID;
            aSPNetToken.Value = value;
            return aSPNetToken;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TokenID
        {
            get
            {
                return _TokenID;
            }
            set
            {
                if (_TokenID != value)
                {
                    OnTokenIDChanging(value);
                    ReportPropertyChanging("TokenID");
                    _TokenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TokenID");
                    OnTokenIDChanged();
                }
            }
        }
        private global::System.Int64 _TokenID;
        partial void OnTokenIDChanging(global::System.Int64 value);
        partial void OnTokenIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ValidUntilUTC
        {
            get
            {
                return _ValidUntilUTC;
            }
            set
            {
                OnValidUntilUTCChanging(value);
                ReportPropertyChanging("ValidUntilUTC");
                _ValidUntilUTC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ValidUntilUTC");
                OnValidUntilUTCChanged();
            }
        }
        private global::System.String _ValidUntilUTC;
        partial void OnValidUntilUTCChanging(global::System.String value);
        partial void OnValidUntilUTCChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetUser object.
        /// </summary>
        /// <param name="aSPNetUserID">Initial value of the ASPNetUserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="passwordHash">Initial value of the PasswordHash property.</param>
        /// <param name="securityStamp">Initial value of the SecurityStamp property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="emailConfirmed">Initial value of the EmailConfirmed property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="phoneNumberConfirmed">Initial value of the PhoneNumberConfirmed property.</param>
        /// <param name="twoFactorEnabled">Initial value of the TwoFactorEnabled property.</param>
        /// <param name="lockOutEnabled">Initial value of the LockOutEnabled property.</param>
        /// <param name="accessFailedCount">Initial value of the AccessFailedCount property.</param>
        /// <param name="discriminator">Initial value of the Discriminator property.</param>
        public static ASPNetUser CreateASPNetUser(global::System.Int64 aSPNetUserID, global::System.String userName, global::System.String passwordHash, global::System.String securityStamp, global::System.String email, global::System.Boolean emailConfirmed, global::System.String phoneNumber, global::System.Boolean phoneNumberConfirmed, global::System.Boolean twoFactorEnabled, global::System.Boolean lockOutEnabled, global::System.Int32 accessFailedCount, global::System.String discriminator)
        {
            ASPNetUser aSPNetUser = new ASPNetUser();
            aSPNetUser.ASPNetUserID = aSPNetUserID;
            aSPNetUser.UserName = userName;
            aSPNetUser.PasswordHash = passwordHash;
            aSPNetUser.SecurityStamp = securityStamp;
            aSPNetUser.Email = email;
            aSPNetUser.EmailConfirmed = emailConfirmed;
            aSPNetUser.PhoneNumber = phoneNumber;
            aSPNetUser.PhoneNumberConfirmed = phoneNumberConfirmed;
            aSPNetUser.TwoFactorEnabled = twoFactorEnabled;
            aSPNetUser.LockOutEnabled = lockOutEnabled;
            aSPNetUser.AccessFailedCount = accessFailedCount;
            aSPNetUser.Discriminator = discriminator;
            return aSPNetUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ASPNetUserID
        {
            get
            {
                return _ASPNetUserID;
            }
            set
            {
                if (_ASPNetUserID != value)
                {
                    OnASPNetUserIDChanging(value);
                    ReportPropertyChanging("ASPNetUserID");
                    _ASPNetUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASPNetUserID");
                    OnASPNetUserIDChanged();
                }
            }
        }
        private global::System.Int64 _ASPNetUserID;
        partial void OnASPNetUserIDChanging(global::System.Int64 value);
        partial void OnASPNetUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PasswordHash
        {
            get
            {
                return _PasswordHash;
            }
            set
            {
                OnPasswordHashChanging(value);
                ReportPropertyChanging("PasswordHash");
                _PasswordHash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PasswordHash");
                OnPasswordHashChanged();
            }
        }
        private global::System.String _PasswordHash;
        partial void OnPasswordHashChanging(global::System.String value);
        partial void OnPasswordHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecurityStamp
        {
            get
            {
                return _SecurityStamp;
            }
            set
            {
                OnSecurityStampChanging(value);
                ReportPropertyChanging("SecurityStamp");
                _SecurityStamp = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecurityStamp");
                OnSecurityStampChanged();
            }
        }
        private global::System.String _SecurityStamp;
        partial void OnSecurityStampChanging(global::System.String value);
        partial void OnSecurityStampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EmailConfirmed
        {
            get
            {
                return _EmailConfirmed;
            }
            set
            {
                OnEmailConfirmedChanging(value);
                ReportPropertyChanging("EmailConfirmed");
                _EmailConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmailConfirmed");
                OnEmailConfirmedChanged();
            }
        }
        private global::System.Boolean _EmailConfirmed;
        partial void OnEmailConfirmedChanging(global::System.Boolean value);
        partial void OnEmailConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean PhoneNumberConfirmed
        {
            get
            {
                return _PhoneNumberConfirmed;
            }
            set
            {
                OnPhoneNumberConfirmedChanging(value);
                ReportPropertyChanging("PhoneNumberConfirmed");
                _PhoneNumberConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneNumberConfirmed");
                OnPhoneNumberConfirmedChanged();
            }
        }
        private global::System.Boolean _PhoneNumberConfirmed;
        partial void OnPhoneNumberConfirmedChanging(global::System.Boolean value);
        partial void OnPhoneNumberConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TwoFactorEnabled
        {
            get
            {
                return _TwoFactorEnabled;
            }
            set
            {
                OnTwoFactorEnabledChanging(value);
                ReportPropertyChanging("TwoFactorEnabled");
                _TwoFactorEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TwoFactorEnabled");
                OnTwoFactorEnabledChanged();
            }
        }
        private global::System.Boolean _TwoFactorEnabled;
        partial void OnTwoFactorEnabledChanging(global::System.Boolean value);
        partial void OnTwoFactorEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LockOutEndDateUTC
        {
            get
            {
                return _LockOutEndDateUTC;
            }
            set
            {
                OnLockOutEndDateUTCChanging(value);
                ReportPropertyChanging("LockOutEndDateUTC");
                _LockOutEndDateUTC = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockOutEndDateUTC");
                OnLockOutEndDateUTCChanged();
            }
        }
        private Nullable<global::System.DateTime> _LockOutEndDateUTC;
        partial void OnLockOutEndDateUTCChanging(Nullable<global::System.DateTime> value);
        partial void OnLockOutEndDateUTCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean LockOutEnabled
        {
            get
            {
                return _LockOutEnabled;
            }
            set
            {
                OnLockOutEnabledChanging(value);
                ReportPropertyChanging("LockOutEnabled");
                _LockOutEnabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LockOutEnabled");
                OnLockOutEnabledChanged();
            }
        }
        private global::System.Boolean _LockOutEnabled;
        partial void OnLockOutEnabledChanging(global::System.Boolean value);
        partial void OnLockOutEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccessFailedCount
        {
            get
            {
                return _AccessFailedCount;
            }
            set
            {
                OnAccessFailedCountChanging(value);
                ReportPropertyChanging("AccessFailedCount");
                _AccessFailedCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessFailedCount");
                OnAccessFailedCountChanged();
            }
        }
        private global::System.Int32 _AccessFailedCount;
        partial void OnAccessFailedCountChanging(global::System.Int32 value);
        partial void OnAccessFailedCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Discriminator
        {
            get
            {
                return _Discriminator;
            }
            set
            {
                OnDiscriminatorChanging(value);
                ReportPropertyChanging("Discriminator");
                _Discriminator = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Discriminator");
                OnDiscriminatorChanged();
            }
        }
        private global::System.String _Discriminator;
        partial void OnDiscriminatorChanging(global::System.String value);
        partial void OnDiscriminatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccountIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUser_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ASPNetUser_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ASPNetUser_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ASPNetUser_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("SureHisModel.FK_ASPNetUser_UserAccount", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserClaims_ASPNetUser", "ASPNetUserClaims")]
        public EntityCollection<ASPNetUserClaims> ASPNetUserClaims
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetUserClaims>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUserClaims");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetUserClaims>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUserClaims", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserLogin_ASPNetUser", "ASPNetUserLogin")]
        public EntityCollection<ASPNetUserLogin> ASPNetUserLogin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetUserLogin>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUserLogin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetUserLogin>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUserLogin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserRole_ASPNetUser", "ASPNetUserRole")]
        public EntityCollection<ASPNetUserRole> ASPNetUserRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetUserRole>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetUserRole>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUserRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetUserClaims")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetUserClaims : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetUserClaims object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static ASPNetUserClaims CreateASPNetUserClaims(global::System.Int64 id)
        {
            ASPNetUserClaims aSPNetUserClaims = new ASPNetUserClaims();
            aSPNetUserClaims.ID = id;
            return aSPNetUserClaims;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ASPNetUserID
        {
            get
            {
                return _ASPNetUserID;
            }
            set
            {
                OnASPNetUserIDChanging(value);
                ReportPropertyChanging("ASPNetUserID");
                _ASPNetUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASPNetUserID");
                OnASPNetUserIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ASPNetUserID;
        partial void OnASPNetUserIDChanging(Nullable<global::System.Int64> value);
        partial void OnASPNetUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimType
        {
            get
            {
                return _ClaimType;
            }
            set
            {
                OnClaimTypeChanging(value);
                ReportPropertyChanging("ClaimType");
                _ClaimType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClaimType");
                OnClaimTypeChanged();
            }
        }
        private global::System.String _ClaimType;
        partial void OnClaimTypeChanging(global::System.String value);
        partial void OnClaimTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClaimValue
        {
            get
            {
                return _ClaimValue;
            }
            set
            {
                OnClaimValueChanging(value);
                ReportPropertyChanging("ClaimValue");
                _ClaimValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClaimValue");
                OnClaimValueChanged();
            }
        }
        private global::System.String _ClaimValue;
        partial void OnClaimValueChanging(global::System.String value);
        partial void OnClaimValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityUser_ID
        {
            get
            {
                return _IdentityUser_ID;
            }
            set
            {
                OnIdentityUser_IDChanging(value);
                ReportPropertyChanging("IdentityUser_ID");
                _IdentityUser_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityUser_ID");
                OnIdentityUser_IDChanged();
            }
        }
        private global::System.String _IdentityUser_ID;
        partial void OnIdentityUser_IDChanging(global::System.String value);
        partial void OnIdentityUser_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser")]
        public ASPNetUser ASPNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ASPNetUser> ASPNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserClaims_ASPNetUser", "ASPNetUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetUserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetUserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetUserLogin object.
        /// </summary>
        /// <param name="sessionID">Initial value of the SessionID property.</param>
        /// <param name="aSPNetUserID">Initial value of the ASPNetUserID property.</param>
        /// <param name="loginTime">Initial value of the LoginTime property.</param>
        /// <param name="logoutTime">Initial value of the LogoutTime property.</param>
        /// <param name="hostAddress">Initial value of the HostAddress property.</param>
        /// <param name="sessionKey">Initial value of the SessionKey property.</param>
        /// <param name="loginProvider">Initial value of the LoginProvider property.</param>
        public static ASPNetUserLogin CreateASPNetUserLogin(global::System.Int64 sessionID, global::System.Int64 aSPNetUserID, global::System.DateTime loginTime, global::System.DateTime logoutTime, global::System.String hostAddress, global::System.String sessionKey, global::System.String loginProvider)
        {
            ASPNetUserLogin aSPNetUserLogin = new ASPNetUserLogin();
            aSPNetUserLogin.SessionID = sessionID;
            aSPNetUserLogin.ASPNetUserID = aSPNetUserID;
            aSPNetUserLogin.LoginTime = loginTime;
            aSPNetUserLogin.LogoutTime = logoutTime;
            aSPNetUserLogin.HostAddress = hostAddress;
            aSPNetUserLogin.SessionKey = sessionKey;
            aSPNetUserLogin.LoginProvider = loginProvider;
            return aSPNetUserLogin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SessionID
        {
            get
            {
                return _SessionID;
            }
            set
            {
                if (_SessionID != value)
                {
                    OnSessionIDChanging(value);
                    ReportPropertyChanging("SessionID");
                    _SessionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessionID");
                    OnSessionIDChanged();
                }
            }
        }
        private global::System.Int64 _SessionID;
        partial void OnSessionIDChanging(global::System.Int64 value);
        partial void OnSessionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ASPNetUserID
        {
            get
            {
                return _ASPNetUserID;
            }
            set
            {
                OnASPNetUserIDChanging(value);
                ReportPropertyChanging("ASPNetUserID");
                _ASPNetUserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ASPNetUserID");
                OnASPNetUserIDChanged();
            }
        }
        private global::System.Int64 _ASPNetUserID;
        partial void OnASPNetUserIDChanging(global::System.Int64 value);
        partial void OnASPNetUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private global::System.DateTime _LoginTime;
        partial void OnLoginTimeChanging(global::System.DateTime value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LogoutTime
        {
            get
            {
                return _LogoutTime;
            }
            set
            {
                OnLogoutTimeChanging(value);
                ReportPropertyChanging("LogoutTime");
                _LogoutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogoutTime");
                OnLogoutTimeChanged();
            }
        }
        private global::System.DateTime _LogoutTime;
        partial void OnLogoutTimeChanging(global::System.DateTime value);
        partial void OnLogoutTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HostAddress
        {
            get
            {
                return _HostAddress;
            }
            set
            {
                OnHostAddressChanging(value);
                ReportPropertyChanging("HostAddress");
                _HostAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HostAddress");
                OnHostAddressChanged();
            }
        }
        private global::System.String _HostAddress;
        partial void OnHostAddressChanging(global::System.String value);
        partial void OnHostAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessionKey
        {
            get
            {
                return _SessionKey;
            }
            set
            {
                OnSessionKeyChanging(value);
                ReportPropertyChanging("SessionKey");
                _SessionKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessionKey");
                OnSessionKeyChanged();
            }
        }
        private global::System.String _SessionKey;
        partial void OnSessionKeyChanging(global::System.String value);
        partial void OnSessionKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginProvider
        {
            get
            {
                return _LoginProvider;
            }
            set
            {
                OnLoginProviderChanging(value);
                ReportPropertyChanging("LoginProvider");
                _LoginProvider = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginProvider");
                OnLoginProviderChanged();
            }
        }
        private global::System.String _LoginProvider;
        partial void OnLoginProviderChanging(global::System.String value);
        partial void OnLoginProviderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderKey
        {
            get
            {
                return _ProviderKey;
            }
            set
            {
                OnProviderKeyChanging(value);
                ReportPropertyChanging("ProviderKey");
                _ProviderKey = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderKey");
                OnProviderKeyChanged();
            }
        }
        private global::System.String _ProviderKey;
        partial void OnProviderKeyChanging(global::System.String value);
        partial void OnProviderKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityUser_ID
        {
            get
            {
                return _IdentityUser_ID;
            }
            set
            {
                OnIdentityUser_IDChanging(value);
                ReportPropertyChanging("IdentityUser_ID");
                _IdentityUser_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityUser_ID");
                OnIdentityUser_IDChanged();
            }
        }
        private global::System.String _IdentityUser_ID;
        partial void OnIdentityUser_IDChanging(global::System.String value);
        partial void OnIdentityUser_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser")]
        public ASPNetUser ASPNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ASPNetUser> ASPNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserLogin_ASPNetUser", "ASPNetUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ASPNetUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ASPNetUserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ASPNetUserRole object.
        /// </summary>
        /// <param name="aSPNetUserID">Initial value of the ASPNetUserID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="identityUser_ID">Initial value of the IdentityUser_ID property.</param>
        public static ASPNetUserRole CreateASPNetUserRole(global::System.Int64 aSPNetUserID, global::System.Int64 roleID, global::System.String identityUser_ID)
        {
            ASPNetUserRole aSPNetUserRole = new ASPNetUserRole();
            aSPNetUserRole.ASPNetUserID = aSPNetUserID;
            aSPNetUserRole.RoleID = roleID;
            aSPNetUserRole.IdentityUser_ID = identityUser_ID;
            return aSPNetUserRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ASPNetUserID
        {
            get
            {
                return _ASPNetUserID;
            }
            set
            {
                if (_ASPNetUserID != value)
                {
                    OnASPNetUserIDChanging(value);
                    ReportPropertyChanging("ASPNetUserID");
                    _ASPNetUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ASPNetUserID");
                    OnASPNetUserIDChanged();
                }
            }
        }
        private global::System.Int64 _ASPNetUserID;
        partial void OnASPNetUserIDChanging(global::System.Int64 value);
        partial void OnASPNetUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IdentityUser_ID
        {
            get
            {
                return _IdentityUser_ID;
            }
            set
            {
                OnIdentityUser_IDChanging(value);
                ReportPropertyChanging("IdentityUser_ID");
                _IdentityUser_ID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IdentityUser_ID");
                OnIdentityUser_IDChanged();
            }
        }
        private global::System.String _IdentityUser_ID;
        partial void OnIdentityUser_IDChanging(global::System.String value);
        partial void OnIdentityUser_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TUserRole_TRole", "ASPNetRole")]
        public ASPNetRole ASPNetRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ASPNetRole> ASPNetRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ASPNetRole>("SureHisModel.FK_TUserRole_TRole", "ASPNetRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUserRole_ASPNetUser", "ASPNetUser")]
        public ASPNetUser ASPNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUser").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUser").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ASPNetUser> ASPNetUserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ASPNetUser>("SureHisModel.FK_ASPNetUserRole_ASPNetUser", "ASPNetUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AssignMedEquip")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignMedEquip : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignMedEquip object.
        /// </summary>
        /// <param name="aMedEquipID">Initial value of the AMedEquipID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="equipMDSrcrID">Initial value of the EquipMDSrcrID property.</param>
        public static AssignMedEquip CreateAssignMedEquip(global::System.Int64 aMedEquipID, global::System.Int64 roomID, global::System.Int64 equipMDSrcrID)
        {
            AssignMedEquip assignMedEquip = new AssignMedEquip();
            assignMedEquip.AMedEquipID = aMedEquipID;
            assignMedEquip.RoomID = roomID;
            assignMedEquip.EquipMDSrcrID = equipMDSrcrID;
            return assignMedEquip;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AMedEquipID
        {
            get
            {
                return _AMedEquipID;
            }
            set
            {
                if (_AMedEquipID != value)
                {
                    OnAMedEquipIDChanging(value);
                    ReportPropertyChanging("AMedEquipID");
                    _AMedEquipID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AMedEquipID");
                    OnAMedEquipIDChanged();
                }
            }
        }
        private global::System.Int64 _AMedEquipID;
        partial void OnAMedEquipIDChanging(global::System.Int64 value);
        partial void OnAMedEquipIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int64 _RoomID;
        partial void OnRoomIDChanging(global::System.Int64 value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EquipMDSrcrID
        {
            get
            {
                return _EquipMDSrcrID;
            }
            set
            {
                OnEquipMDSrcrIDChanging(value);
                ReportPropertyChanging("EquipMDSrcrID");
                _EquipMDSrcrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipMDSrcrID");
                OnEquipMDSrcrIDChanged();
            }
        }
        private global::System.Int64 _EquipMDSrcrID;
        partial void OnEquipMDSrcrIDChanging(global::System.Int64 value);
        partial void OnEquipMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_UsageStatus
        {
            get
            {
                return _V_UsageStatus;
            }
            set
            {
                OnV_UsageStatusChanging(value);
                ReportPropertyChanging("V_UsageStatus");
                _V_UsageStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_UsageStatus");
                OnV_UsageStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_UsageStatus;
        partial void OnV_UsageStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_UsageStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_ReqServices
        {
            get
            {
                return _V_ReqServices;
            }
            set
            {
                OnV_ReqServicesChanging(value);
                ReportPropertyChanging("V_ReqServices");
                _V_ReqServices = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ReqServices");
                OnV_ReqServicesChanged();
            }
        }
        private Nullable<global::System.Int64> _V_ReqServices;
        partial void OnV_ReqServicesChanging(Nullable<global::System.Int64> value);
        partial void OnV_ReqServicesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecomUses
        {
            get
            {
                return _RecomUses;
            }
            set
            {
                OnRecomUsesChanging(value);
                ReportPropertyChanging("RecomUses");
                _RecomUses = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RecomUses");
                OnRecomUsesChanged();
            }
        }
        private global::System.String _RecomUses;
        partial void OnRecomUsesChanging(global::System.String value);
        partial void OnRecomUsesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupSerDesc
        {
            get
            {
                return _SupSerDesc;
            }
            set
            {
                OnSupSerDescChanging(value);
                ReportPropertyChanging("SupSerDesc");
                _SupSerDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupSerDesc");
                OnSupSerDescChanged();
            }
        }
        private global::System.String _SupSerDesc;
        partial void OnSupSerDescChanging(global::System.String value);
        partial void OnSupSerDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources")]
        public MedicalEquimentsResources MedicalEquimentsResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEquimentsResources> MedicalEquimentsResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "MedicalEquimentsResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignMedEquip_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "RoomAllocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AssignmentSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssignmentSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssignmentSchedule object.
        /// </summary>
        /// <param name="assignSkedID">Initial value of the AssignSkedID property.</param>
        /// <param name="opSkedID">Initial value of the OpSkedID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static AssignmentSchedule CreateAssignmentSchedule(global::System.Int64 assignSkedID, global::System.Int64 opSkedID, global::System.Int64 empID)
        {
            AssignmentSchedule assignmentSchedule = new AssignmentSchedule();
            assignmentSchedule.AssignSkedID = assignSkedID;
            assignmentSchedule.OpSkedID = opSkedID;
            assignmentSchedule.EmpID = empID;
            return assignmentSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AssignSkedID
        {
            get
            {
                return _AssignSkedID;
            }
            set
            {
                if (_AssignSkedID != value)
                {
                    OnAssignSkedIDChanging(value);
                    ReportPropertyChanging("AssignSkedID");
                    _AssignSkedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AssignSkedID");
                    OnAssignSkedIDChanged();
                }
            }
        }
        private global::System.Int64 _AssignSkedID;
        partial void OnAssignSkedIDChanging(global::System.Int64 value);
        partial void OnAssignSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OpSkedID
        {
            get
            {
                return _OpSkedID;
            }
            set
            {
                OnOpSkedIDChanging(value);
                ReportPropertyChanging("OpSkedID");
                _OpSkedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpSkedID");
                OnOpSkedIDChanged();
            }
        }
        private global::System.Int64 _OpSkedID;
        partial void OnOpSkedIDChanging(global::System.Int64 value);
        partial void OnOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignmentSchedule_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AssignmentSchedule_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AssignmentSchedule_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_AssignmentSchedule_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_AssignmentSchedule_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignmentSchedule_OperationSchedule", "OperationSchedule")]
        public OperationSchedule OperationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "OperationSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "OperationSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationSchedule> OperationScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "OperationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "OperationSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="AttachedDoc")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AttachedDoc : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AttachedDoc object.
        /// </summary>
        /// <param name="attDocID">Initial value of the AttDocID property.</param>
        public static AttachedDoc CreateAttachedDoc(global::System.Int64 attDocID)
        {
            AttachedDoc attachedDoc = new AttachedDoc();
            attachedDoc.AttDocID = attDocID;
            return attachedDoc;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AttDocID
        {
            get
            {
                return _AttDocID;
            }
            set
            {
                if (_AttDocID != value)
                {
                    OnAttDocIDChanging(value);
                    ReportPropertyChanging("AttDocID");
                    _AttDocID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AttDocID");
                    OnAttDocIDChanged();
                }
            }
        }
        private global::System.Int64 _AttDocID;
        partial void OnAttDocIDChanging(global::System.Int64 value);
        partial void OnAttDocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DocItemID
        {
            get
            {
                return _DocItemID;
            }
            set
            {
                OnDocItemIDChanging(value);
                ReportPropertyChanging("DocItemID");
                _DocItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocItemID");
                OnDocItemIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DocItemID;
        partial void OnDocItemIDChanging(Nullable<global::System.Int64> value);
        partial void OnDocItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AdmID;
        partial void OnAdmIDChanging(Nullable<global::System.Int64> value);
        partial void OnAdmIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AttachedDoc_DocItem", "DocItem")]
        public DocItem DocItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocItem>("SureHisModel.FK_AttachedDoc_DocItem", "DocItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocItem>("SureHisModel.FK_AttachedDoc_DocItem", "DocItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocItem> DocItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocItem>("SureHisModel.FK_AttachedDoc_DocItem", "DocItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocItem>("SureHisModel.FK_AttachedDoc_DocItem", "DocItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AttachedDoc_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_AttachedDoc_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_AttachedDoc_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_AttachedDoc_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_AttachedDoc_PatientAdmission", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="BedInRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BedInRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BedInRoom object.
        /// </summary>
        /// <param name="ptBdRmID">Initial value of the PtBdRmID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="slotNo">Initial value of the SlotNo property.</param>
        /// <param name="v_PatientBedStatus">Initial value of the V_PatientBedStatus property.</param>
        /// <param name="allocatedDate">Initial value of the AllocatedDate property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        public static BedInRoom CreateBedInRoom(global::System.Int64 ptBdRmID, global::System.Int64 roomID, global::System.Byte slotNo, global::System.Int64 v_PatientBedStatus, global::System.DateTime allocatedDate, global::System.Int64 sID, global::System.Int64 estEmpID)
        {
            BedInRoom bedInRoom = new BedInRoom();
            bedInRoom.PtBdRmID = ptBdRmID;
            bedInRoom.RoomID = roomID;
            bedInRoom.SlotNo = slotNo;
            bedInRoom.V_PatientBedStatus = v_PatientBedStatus;
            bedInRoom.AllocatedDate = allocatedDate;
            bedInRoom.SID = sID;
            bedInRoom.EstEmpID = estEmpID;
            return bedInRoom;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtBdRmID
        {
            get
            {
                return _PtBdRmID;
            }
            set
            {
                if (_PtBdRmID != value)
                {
                    OnPtBdRmIDChanging(value);
                    ReportPropertyChanging("PtBdRmID");
                    _PtBdRmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtBdRmID");
                    OnPtBdRmIDChanged();
                }
            }
        }
        private global::System.Int64 _PtBdRmID;
        partial void OnPtBdRmIDChanging(global::System.Int64 value);
        partial void OnPtBdRmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int64 _RoomID;
        partial void OnRoomIDChanging(global::System.Int64 value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SlotNo
        {
            get
            {
                return _SlotNo;
            }
            set
            {
                OnSlotNoChanging(value);
                ReportPropertyChanging("SlotNo");
                _SlotNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SlotNo");
                OnSlotNoChanged();
            }
        }
        private global::System.Byte _SlotNo;
        partial void OnSlotNoChanging(global::System.Byte value);
        partial void OnSlotNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtBedID
        {
            get
            {
                return _PtBedID;
            }
            set
            {
                OnPtBedIDChanging(value);
                ReportPropertyChanging("PtBedID");
                _PtBedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtBedID");
                OnPtBedIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtBedID;
        partial void OnPtBedIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtBedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_PatientBedStatus
        {
            get
            {
                return _V_PatientBedStatus;
            }
            set
            {
                OnV_PatientBedStatusChanging(value);
                ReportPropertyChanging("V_PatientBedStatus");
                _V_PatientBedStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PatientBedStatus");
                OnV_PatientBedStatusChanged();
            }
        }
        private global::System.Int64 _V_PatientBedStatus;
        partial void OnV_PatientBedStatusChanging(global::System.Int64 value);
        partial void OnV_PatientBedStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AllocatedDate
        {
            get
            {
                return _AllocatedDate;
            }
            set
            {
                OnAllocatedDateChanging(value);
                ReportPropertyChanging("AllocatedDate");
                _AllocatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllocatedDate");
                OnAllocatedDateChanged();
            }
        }
        private global::System.DateTime _AllocatedDate;
        partial void OnAllocatedDateChanging(global::System.DateTime value);
        partial void OnAllocatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BedInRoom_PatientBed", "PatientBed")]
        public PatientBed PatientBed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_BedInRoom_PatientBed", "PatientBed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_BedInRoom_PatientBed", "PatientBed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientBed> PatientBedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_BedInRoom_PatientBed", "PatientBed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientBed>("SureHisModel.FK_BedInRoom_PatientBed", "PatientBed", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BedInRoom_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_BedInRoom_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_BedInRoom_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_BedInRoom_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_BedInRoom_RoomAllocation", "RoomAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientInBedRoom_BedInRoom", "PatientInBedRoom")]
        public EntityCollection<PatientInBedRoom> PatientInBedRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientInBedRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "PatientInBedRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientInBedRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "PatientInBedRoom", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Bloodbank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bloodbank : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bloodbank object.
        /// </summary>
        /// <param name="bloodBankID">Initial value of the BloodBankID property.</param>
        /// <param name="bloodTypeID">Initial value of the BloodTypeID property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="storageDate">Initial value of the StorageDate property.</param>
        /// <param name="isLimited">Initial value of the IsLimited property.</param>
        public static Bloodbank CreateBloodbank(global::System.Int64 bloodBankID, global::System.Int64 bloodTypeID, global::System.Int16 qty, global::System.DateTime storageDate, global::System.Boolean isLimited)
        {
            Bloodbank bloodbank = new Bloodbank();
            bloodbank.BloodBankID = bloodBankID;
            bloodbank.BloodTypeID = bloodTypeID;
            bloodbank.Qty = qty;
            bloodbank.StorageDate = storageDate;
            bloodbank.IsLimited = isLimited;
            return bloodbank;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BloodBankID
        {
            get
            {
                return _BloodBankID;
            }
            set
            {
                if (_BloodBankID != value)
                {
                    OnBloodBankIDChanging(value);
                    ReportPropertyChanging("BloodBankID");
                    _BloodBankID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BloodBankID");
                    OnBloodBankIDChanged();
                }
            }
        }
        private global::System.Int64 _BloodBankID;
        partial void OnBloodBankIDChanging(global::System.Int64 value);
        partial void OnBloodBankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BloodTypeID
        {
            get
            {
                return _BloodTypeID;
            }
            set
            {
                OnBloodTypeIDChanging(value);
                ReportPropertyChanging("BloodTypeID");
                _BloodTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodTypeID");
                OnBloodTypeIDChanged();
            }
        }
        private global::System.Int64 _BloodTypeID;
        partial void OnBloodTypeIDChanging(global::System.Int64 value);
        partial void OnBloodTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int16 _Qty;
        partial void OnQtyChanging(global::System.Int16 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DonatedUnit
        {
            get
            {
                return _DonatedUnit;
            }
            set
            {
                OnDonatedUnitChanging(value);
                ReportPropertyChanging("DonatedUnit");
                _DonatedUnit = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DonatedUnit");
                OnDonatedUnitChanged();
            }
        }
        private global::System.String _DonatedUnit;
        partial void OnDonatedUnitChanging(global::System.String value);
        partial void OnDonatedUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StorageDate
        {
            get
            {
                return _StorageDate;
            }
            set
            {
                OnStorageDateChanging(value);
                ReportPropertyChanging("StorageDate");
                _StorageDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StorageDate");
                OnStorageDateChanged();
            }
        }
        private global::System.DateTime _StorageDate;
        partial void OnStorageDateChanging(global::System.DateTime value);
        partial void OnStorageDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsLimited
        {
            get
            {
                return _IsLimited;
            }
            set
            {
                OnIsLimitedChanging(value);
                ReportPropertyChanging("IsLimited");
                _IsLimited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLimited");
                OnIsLimitedChanged();
            }
        }
        private global::System.Boolean _IsLimited;
        partial void OnIsLimitedChanging(global::System.Boolean value);
        partial void OnIsLimitedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Bloodbank_refBloodType", "refBloodType")]
        public refBloodType refBloodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Bloodbank_refBloodType", "refBloodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Bloodbank_refBloodType", "refBloodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refBloodType> refBloodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Bloodbank_refBloodType", "refBloodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refBloodType>("SureHisModel.FK_Bloodbank_refBloodType", "refBloodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BloodDonation_Bloodbank", "BloodDonation")]
        public EntityCollection<BloodDonation> BloodDonation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodDonation>("SureHisModel.FK_BloodDonation_Bloodbank", "BloodDonation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodDonation>("SureHisModel.FK_BloodDonation_Bloodbank", "BloodDonation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SeparationOfBlood_Bloodbank", "SeparationOfBlood")]
        public EntityCollection<SeparationOfBlood> SeparationOfBlood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SeparationOfBlood>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "SeparationOfBlood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SeparationOfBlood>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "SeparationOfBlood", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestBlood_Bloodbank", "TestBlood")]
        public EntityCollection<TestBlood> TestBlood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestBlood>("SureHisModel.FK_TestBlood_Bloodbank", "TestBlood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestBlood>("SureHisModel.FK_TestBlood_Bloodbank", "TestBlood", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="BloodDonation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BloodDonation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BloodDonation object.
        /// </summary>
        /// <param name="bloodDonID">Initial value of the BloodDonID property.</param>
        /// <param name="dayOfDonation">Initial value of the DayOfDonation property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        public static BloodDonation CreateBloodDonation(global::System.Int64 bloodDonID, global::System.DateTime dayOfDonation, global::System.Byte qty)
        {
            BloodDonation bloodDonation = new BloodDonation();
            bloodDonation.BloodDonID = bloodDonID;
            bloodDonation.DayOfDonation = dayOfDonation;
            bloodDonation.Qty = qty;
            return bloodDonation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BloodDonID
        {
            get
            {
                return _BloodDonID;
            }
            set
            {
                if (_BloodDonID != value)
                {
                    OnBloodDonIDChanging(value);
                    ReportPropertyChanging("BloodDonID");
                    _BloodDonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BloodDonID");
                    OnBloodDonIDChanged();
                }
            }
        }
        private global::System.Int64 _BloodDonID;
        partial void OnBloodDonIDChanging(global::System.Int64 value);
        partial void OnBloodDonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayOfDonation
        {
            get
            {
                return _DayOfDonation;
            }
            set
            {
                OnDayOfDonationChanging(value);
                ReportPropertyChanging("DayOfDonation");
                _DayOfDonation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayOfDonation");
                OnDayOfDonationChanged();
            }
        }
        private global::System.DateTime _DayOfDonation;
        partial void OnDayOfDonationChanging(global::System.DateTime value);
        partial void OnDayOfDonationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Byte _Qty;
        partial void OnQtyChanging(global::System.Byte value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DonorID
        {
            get
            {
                return _DonorID;
            }
            set
            {
                OnDonorIDChanging(value);
                ReportPropertyChanging("DonorID");
                _DonorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonorID");
                OnDonorIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DonorID;
        partial void OnDonorIDChanging(Nullable<global::System.Int64> value);
        partial void OnDonorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BloodBankID
        {
            get
            {
                return _BloodBankID;
            }
            set
            {
                OnBloodBankIDChanging(value);
                ReportPropertyChanging("BloodBankID");
                _BloodBankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodBankID");
                OnBloodBankIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BloodBankID;
        partial void OnBloodBankIDChanging(Nullable<global::System.Int64> value);
        partial void OnBloodBankIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BloodDonation_Bloodbank", "Bloodbank")]
        public Bloodbank Bloodbank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_BloodDonation_Bloodbank", "Bloodbank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_BloodDonation_Bloodbank", "Bloodbank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bloodbank> BloodbankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_BloodDonation_Bloodbank", "Bloodbank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bloodbank>("SureHisModel.FK_BloodDonation_Bloodbank", "Bloodbank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BloodDonation_Donor", "Donor")]
        public Donor Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_BloodDonation_Donor", "Donor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_BloodDonation_Donor", "Donor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Donor> DonorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_BloodDonation_Donor", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Donor>("SureHisModel.FK_BloodDonation_Donor", "Donor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="BodyRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BodyRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BodyRegion object.
        /// </summary>
        /// <param name="bRegID">Initial value of the BRegID property.</param>
        /// <param name="clinReqID">Initial value of the ClinReqID property.</param>
        /// <param name="examActID">Initial value of the ExamActID property.</param>
        public static BodyRegion CreateBodyRegion(global::System.Int64 bRegID, global::System.Int64 clinReqID, global::System.Int64 examActID)
        {
            BodyRegion bodyRegion = new BodyRegion();
            bodyRegion.BRegID = bRegID;
            bodyRegion.ClinReqID = clinReqID;
            bodyRegion.ExamActID = examActID;
            return bodyRegion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BRegID
        {
            get
            {
                return _BRegID;
            }
            set
            {
                if (_BRegID != value)
                {
                    OnBRegIDChanging(value);
                    ReportPropertyChanging("BRegID");
                    _BRegID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BRegID");
                    OnBRegIDChanged();
                }
            }
        }
        private global::System.Int64 _BRegID;
        partial void OnBRegIDChanging(global::System.Int64 value);
        partial void OnBRegIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClinReqID
        {
            get
            {
                return _ClinReqID;
            }
            set
            {
                OnClinReqIDChanging(value);
                ReportPropertyChanging("ClinReqID");
                _ClinReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinReqID");
                OnClinReqIDChanged();
            }
        }
        private global::System.Int64 _ClinReqID;
        partial void OnClinReqIDChanging(global::System.Int64 value);
        partial void OnClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedImgTestItemID
        {
            get
            {
                return _MedImgTestItemID;
            }
            set
            {
                OnMedImgTestItemIDChanging(value);
                ReportPropertyChanging("MedImgTestItemID");
                _MedImgTestItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedImgTestItemID");
                OnMedImgTestItemIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedImgTestItemID;
        partial void OnMedImgTestItemIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedImgTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExamActID
        {
            get
            {
                return _ExamActID;
            }
            set
            {
                OnExamActIDChanging(value);
                ReportPropertyChanging("ExamActID");
                _ExamActID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamActID");
                OnExamActIDChanged();
            }
        }
        private global::System.Int64 _ExamActID;
        partial void OnExamActIDChanging(global::System.Int64 value);
        partial void OnExamActIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems")]
        public MedImagingTestItems MedImagingTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTestItems>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTestItems>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedImagingTestItems> MedImagingTestItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTestItems>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedImagingTestItems>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "MedImagingTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq")]
        public ParaClinicalReq ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalReq> ParaClinicalReqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalReq>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_refExamAction", "refExamAction")]
        public refExamAction refExamAction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamAction>("SureHisModel.FK_BodyRegion_refExamAction", "refExamAction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamAction>("SureHisModel.FK_BodyRegion_refExamAction", "refExamAction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refExamAction> refExamActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamAction>("SureHisModel.FK_BodyRegion_refExamAction", "refExamAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refExamAction>("SureHisModel.FK_BodyRegion_refExamAction", "refExamAction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="BusySchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BusySchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BusySchedule object.
        /// </summary>
        /// <param name="busySkedID">Initial value of the BusySkedID property.</param>
        /// <param name="tFID">Initial value of the TFID property.</param>
        /// <param name="wSID">Initial value of the WSID property.</param>
        public static BusySchedule CreateBusySchedule(global::System.Int64 busySkedID, global::System.Int16 tFID, global::System.Int64 wSID)
        {
            BusySchedule busySchedule = new BusySchedule();
            busySchedule.BusySkedID = busySkedID;
            busySchedule.TFID = tFID;
            busySchedule.WSID = wSID;
            return busySchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BusySkedID
        {
            get
            {
                return _BusySkedID;
            }
            set
            {
                if (_BusySkedID != value)
                {
                    OnBusySkedIDChanging(value);
                    ReportPropertyChanging("BusySkedID");
                    _BusySkedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BusySkedID");
                    OnBusySkedIDChanged();
                }
            }
        }
        private global::System.Int64 _BusySkedID;
        partial void OnBusySkedIDChanging(global::System.Int64 value);
        partial void OnBusySkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TFID
        {
            get
            {
                return _TFID;
            }
            set
            {
                OnTFIDChanging(value);
                ReportPropertyChanging("TFID");
                _TFID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TFID");
                OnTFIDChanged();
            }
        }
        private global::System.Int16 _TFID;
        partial void OnTFIDChanging(global::System.Int16 value);
        partial void OnTFIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WSID
        {
            get
            {
                return _WSID;
            }
            set
            {
                OnWSIDChanging(value);
                ReportPropertyChanging("WSID");
                _WSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WSID");
                OnWSIDChanged();
            }
        }
        private global::System.Int64 _WSID;
        partial void OnWSIDChanging(global::System.Int64 value);
        partial void OnWSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_Reasons
        {
            get
            {
                return _V_Reasons;
            }
            set
            {
                OnV_ReasonsChanging(value);
                ReportPropertyChanging("V_Reasons");
                _V_Reasons = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_Reasons");
                OnV_ReasonsChanged();
            }
        }
        private Nullable<global::System.Int64> _V_Reasons;
        partial void OnV_ReasonsChanging(Nullable<global::System.Int64> value);
        partial void OnV_ReasonsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule")]
        public EmpWorkSchedule EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpWorkSchedule> EmpWorkScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpWorkSchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "EmpWorkSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BusySchedule_refTimeFrame", "refTimeFrame")]
        public refTimeFrame refTimeFrame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_BusySchedule_refTimeFrame", "refTimeFrame").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_BusySchedule_refTimeFrame", "refTimeFrame").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTimeFrame> refTimeFrameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTimeFrame>("SureHisModel.FK_BusySchedule_refTimeFrame", "refTimeFrame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTimeFrame>("SureHisModel.FK_BusySchedule_refTimeFrame", "refTimeFrame", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ChainMedicalServices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ChainMedicalServices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ChainMedicalServices object.
        /// </summary>
        /// <param name="chainID">Initial value of the ChainID property.</param>
        /// <param name="idx">Initial value of the Idx property.</param>
        /// <param name="weight">Initial value of the Weight property.</param>
        public static ChainMedicalServices CreateChainMedicalServices(global::System.Int64 chainID, global::System.Byte idx, global::System.Double weight)
        {
            ChainMedicalServices chainMedicalServices = new ChainMedicalServices();
            chainMedicalServices.ChainID = chainID;
            chainMedicalServices.Idx = idx;
            chainMedicalServices.Weight = weight;
            return chainMedicalServices;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ChainID
        {
            get
            {
                return _ChainID;
            }
            set
            {
                if (_ChainID != value)
                {
                    OnChainIDChanging(value);
                    ReportPropertyChanging("ChainID");
                    _ChainID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChainID");
                    OnChainIDChanged();
                }
            }
        }
        private global::System.Int64 _ChainID;
        partial void OnChainIDChanging(global::System.Int64 value);
        partial void OnChainIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerPkgID
        {
            get
            {
                return _MedSerPkgID;
            }
            set
            {
                OnMedSerPkgIDChanging(value);
                ReportPropertyChanging("MedSerPkgID");
                _MedSerPkgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerPkgID");
                OnMedSerPkgIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerPkgID;
        partial void OnMedSerPkgIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerPkgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerID;
        partial void OnMedSerIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                OnIdxChanging(value);
                ReportPropertyChanging("Idx");
                _Idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Idx");
                OnIdxChanged();
            }
        }
        private global::System.Byte _Idx;
        partial void OnIdxChanging(global::System.Byte value);
        partial void OnIdxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private global::System.Double _Weight;
        partial void OnWeightChanging(global::System.Double value);
        partial void OnWeightChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage")]
        public MedicalServicePackage MedicalServicePackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServicePackage> MedicalServicePackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServicePackage>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "MedicalServicePackage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ClinicalIndicatorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicalIndicatorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicalIndicatorType object.
        /// </summary>
        /// <param name="clinIndTypeID">Initial value of the ClinIndTypeID property.</param>
        /// <param name="clinIndTypeName">Initial value of the ClinIndTypeName property.</param>
        public static ClinicalIndicatorType CreateClinicalIndicatorType(global::System.Int64 clinIndTypeID, global::System.String clinIndTypeName)
        {
            ClinicalIndicatorType clinicalIndicatorType = new ClinicalIndicatorType();
            clinicalIndicatorType.ClinIndTypeID = clinIndTypeID;
            clinicalIndicatorType.ClinIndTypeName = clinIndTypeName;
            return clinicalIndicatorType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClinIndTypeID
        {
            get
            {
                return _ClinIndTypeID;
            }
            set
            {
                if (_ClinIndTypeID != value)
                {
                    OnClinIndTypeIDChanging(value);
                    ReportPropertyChanging("ClinIndTypeID");
                    _ClinIndTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinIndTypeID");
                    OnClinIndTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _ClinIndTypeID;
        partial void OnClinIndTypeIDChanging(global::System.Int64 value);
        partial void OnClinIndTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinIndTypeName
        {
            get
            {
                return _ClinIndTypeName;
            }
            set
            {
                OnClinIndTypeNameChanging(value);
                ReportPropertyChanging("ClinIndTypeName");
                _ClinIndTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClinIndTypeName");
                OnClinIndTypeNameChanged();
            }
        }
        private global::System.String _ClinIndTypeName;
        partial void OnClinIndTypeNameChanging(global::System.String value);
        partial void OnClinIndTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClinIndTypeDesc
        {
            get
            {
                return _ClinIndTypeDesc;
            }
            set
            {
                OnClinIndTypeDescChanging(value);
                ReportPropertyChanging("ClinIndTypeDesc");
                _ClinIndTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClinIndTypeDesc");
                OnClinIndTypeDescChanged();
            }
        }
        private global::System.String _ClinIndTypeDesc;
        partial void OnClinIndTypeDescChanging(global::System.String value);
        partial void OnClinIndTypeDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_ClinicalIndicatorType", "MedLabTest")]
        public EntityCollection<MedLabTest> MedLabTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "MedLabTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "MedLabTest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ClinicalTrial")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicalTrial : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicalTrial object.
        /// </summary>
        /// <param name="v_ClinTrialCategory">Initial value of the V_ClinTrialCategory property.</param>
        /// <param name="clintID">Initial value of the ClintID property.</param>
        /// <param name="clintTile">Initial value of the ClintTile property.</param>
        /// <param name="clintDateFrom">Initial value of the ClintDateFrom property.</param>
        /// <param name="clintDateTo">Initial value of the ClintDateTo property.</param>
        public static ClinicalTrial CreateClinicalTrial(global::System.Int64 v_ClinTrialCategory, global::System.Int64 clintID, global::System.String clintTile, global::System.DateTime clintDateFrom, global::System.DateTime clintDateTo)
        {
            ClinicalTrial clinicalTrial = new ClinicalTrial();
            clinicalTrial.V_ClinTrialCategory = v_ClinTrialCategory;
            clinicalTrial.ClintID = clintID;
            clinicalTrial.ClintTile = clintTile;
            clinicalTrial.ClintDateFrom = clintDateFrom;
            clinicalTrial.ClintDateTo = clintDateTo;
            return clinicalTrial;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ClinTrialCategory
        {
            get
            {
                return _V_ClinTrialCategory;
            }
            set
            {
                OnV_ClinTrialCategoryChanging(value);
                ReportPropertyChanging("V_ClinTrialCategory");
                _V_ClinTrialCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ClinTrialCategory");
                OnV_ClinTrialCategoryChanged();
            }
        }
        private global::System.Int64 _V_ClinTrialCategory;
        partial void OnV_ClinTrialCategoryChanging(global::System.Int64 value);
        partial void OnV_ClinTrialCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClintID
        {
            get
            {
                return _ClintID;
            }
            set
            {
                if (_ClintID != value)
                {
                    OnClintIDChanging(value);
                    ReportPropertyChanging("ClintID");
                    _ClintID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClintID");
                    OnClintIDChanged();
                }
            }
        }
        private global::System.Int64 _ClintID;
        partial void OnClintIDChanging(global::System.Int64 value);
        partial void OnClintIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClintTile
        {
            get
            {
                return _ClintTile;
            }
            set
            {
                OnClintTileChanging(value);
                ReportPropertyChanging("ClintTile");
                _ClintTile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClintTile");
                OnClintTileChanged();
            }
        }
        private global::System.String _ClintTile;
        partial void OnClintTileChanging(global::System.String value);
        partial void OnClintTileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClintDesc
        {
            get
            {
                return _ClintDesc;
            }
            set
            {
                OnClintDescChanging(value);
                ReportPropertyChanging("ClintDesc");
                _ClintDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClintDesc");
                OnClintDescChanged();
            }
        }
        private global::System.String _ClintDesc;
        partial void OnClintDescChanging(global::System.String value);
        partial void OnClintDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ClintDateFrom
        {
            get
            {
                return _ClintDateFrom;
            }
            set
            {
                OnClintDateFromChanging(value);
                ReportPropertyChanging("ClintDateFrom");
                _ClintDateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClintDateFrom");
                OnClintDateFromChanged();
            }
        }
        private global::System.DateTime _ClintDateFrom;
        partial void OnClintDateFromChanging(global::System.DateTime value);
        partial void OnClintDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ClintDateTo
        {
            get
            {
                return _ClintDateTo;
            }
            set
            {
                OnClintDateToChanging(value);
                ReportPropertyChanging("ClintDateTo");
                _ClintDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClintDateTo");
                OnClintDateToChanged();
            }
        }
        private global::System.DateTime _ClintDateTo;
        partial void OnClintDateToChanging(global::System.DateTime value);
        partial void OnClintDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosDeptID;
        partial void OnHosDeptIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClintNotes
        {
            get
            {
                return _ClintNotes;
            }
            set
            {
                OnClintNotesChanging(value);
                ReportPropertyChanging("ClintNotes");
                _ClintNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClintNotes");
                OnClintNotesChanged();
            }
        }
        private global::System.String _ClintNotes;
        partial void OnClintNotesChanging(global::System.String value);
        partial void OnClintNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrialResult")]
        public EntityCollection<ClinicalTrialResult> ClinicalTrialResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicalTrialResult>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrialResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicalTrialResult>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrialResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ClinicalTrialResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClinicalTrialResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClinicalTrialResult object.
        /// </summary>
        /// <param name="clintRsltID">Initial value of the ClintRsltID property.</param>
        public static ClinicalTrialResult CreateClinicalTrialResult(global::System.Int64 clintRsltID)
        {
            ClinicalTrialResult clinicalTrialResult = new ClinicalTrialResult();
            clinicalTrialResult.ClintRsltID = clintRsltID;
            return clinicalTrialResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClintRsltID
        {
            get
            {
                return _ClintRsltID;
            }
            set
            {
                if (_ClintRsltID != value)
                {
                    OnClintRsltIDChanging(value);
                    ReportPropertyChanging("ClintRsltID");
                    _ClintRsltID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClintRsltID");
                    OnClintRsltIDChanged();
                }
            }
        }
        private global::System.Int64 _ClintRsltID;
        partial void OnClintRsltIDChanging(global::System.Int64 value);
        partial void OnClintRsltIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClintID
        {
            get
            {
                return _ClintID;
            }
            set
            {
                OnClintIDChanging(value);
                ReportPropertyChanging("ClintID");
                _ClintID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClintID");
                OnClintIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClintID;
        partial void OnClintIDChanging(Nullable<global::System.Int64> value);
        partial void OnClintIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_ClinicalTestResult
        {
            get
            {
                return _V_ClinicalTestResult;
            }
            set
            {
                OnV_ClinicalTestResultChanging(value);
                ReportPropertyChanging("V_ClinicalTestResult");
                _V_ClinicalTestResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ClinicalTestResult");
                OnV_ClinicalTestResultChanged();
            }
        }
        private Nullable<global::System.Int64> _V_ClinicalTestResult;
        partial void OnV_ClinicalTestResultChanging(Nullable<global::System.Int64> value);
        partial void OnV_ClinicalTestResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial")]
        public ClinicalTrial ClinicalTrial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalTrial>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalTrial>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicalTrial> ClinicalTrialReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalTrial>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicalTrial>("SureHisModel.FK_ClinicalTrialResult_ClinicalTrial", "ClinicalTrial", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ContactDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactDetails object.
        /// </summary>
        /// <param name="kID">Initial value of the KID property.</param>
        /// <param name="dKID">Initial value of the DKID property.</param>
        /// <param name="rscrID">Initial value of the RscrID property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="curCode">Initial value of the CurCode property.</param>
        /// <param name="exchangeRate">Initial value of the ExchangeRate property.</param>
        public static ContactDetails CreateContactDetails(global::System.Int64 kID, global::System.Int64 dKID, global::System.Int64 rscrID, global::System.Int16 qty, global::System.Double unitPrice, global::System.String curCode, global::System.Double exchangeRate)
        {
            ContactDetails contactDetails = new ContactDetails();
            contactDetails.KID = kID;
            contactDetails.DKID = dKID;
            contactDetails.RscrID = rscrID;
            contactDetails.Qty = qty;
            contactDetails.UnitPrice = unitPrice;
            contactDetails.CurCode = curCode;
            contactDetails.ExchangeRate = exchangeRate;
            return contactDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KID
        {
            get
            {
                return _KID;
            }
            set
            {
                OnKIDChanging(value);
                ReportPropertyChanging("KID");
                _KID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KID");
                OnKIDChanged();
            }
        }
        private global::System.Int64 _KID;
        partial void OnKIDChanging(global::System.Int64 value);
        partial void OnKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DKID
        {
            get
            {
                return _DKID;
            }
            set
            {
                if (_DKID != value)
                {
                    OnDKIDChanging(value);
                    ReportPropertyChanging("DKID");
                    _DKID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DKID");
                    OnDKIDChanged();
                }
            }
        }
        private global::System.Int64 _DKID;
        partial void OnDKIDChanging(global::System.Int64 value);
        partial void OnDKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RscrID
        {
            get
            {
                return _RscrID;
            }
            set
            {
                OnRscrIDChanging(value);
                ReportPropertyChanging("RscrID");
                _RscrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RscrID");
                OnRscrIDChanged();
            }
        }
        private global::System.Int64 _RscrID;
        partial void OnRscrIDChanging(global::System.Int64 value);
        partial void OnRscrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Int16 _Qty;
        partial void OnQtyChanging(global::System.Int16 value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCode
        {
            get
            {
                return _CurCode;
            }
            set
            {
                OnCurCodeChanging(value);
                ReportPropertyChanging("CurCode");
                _CurCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurCode");
                OnCurCodeChanged();
            }
        }
        private global::System.String _CurCode;
        partial void OnCurCodeChanging(global::System.String value);
        partial void OnCurCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Double _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Double value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WarrantyNo
        {
            get
            {
                return _WarrantyNo;
            }
            set
            {
                OnWarrantyNoChanging(value);
                ReportPropertyChanging("WarrantyNo");
                _WarrantyNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WarrantyNo");
                OnWarrantyNoChanged();
            }
        }
        private global::System.String _WarrantyNo;
        partial void OnWarrantyNoChanging(global::System.String value);
        partial void OnWarrantyNoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContactDetails_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContactDetails_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContactDetails_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContactDetails_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("SureHisModel.FK_ContactDetails_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContactDetails_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_ContactDetails_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_ContactDetails_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_ContactDetails_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("SureHisModel.FK_ContactDetails_Resource", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Contract")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contract : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contract object.
        /// </summary>
        /// <param name="kID">Initial value of the KID property.</param>
        /// <param name="kNo">Initial value of the KNo property.</param>
        /// <param name="kDate">Initial value of the KDate property.</param>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        public static Contract CreateContract(global::System.Int64 kID, global::System.String kNo, global::System.DateTime kDate, global::System.Int64 supplierID)
        {
            Contract contract = new Contract();
            contract.KID = kID;
            contract.KNo = kNo;
            contract.KDate = kDate;
            contract.SupplierID = supplierID;
            return contract;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KID
        {
            get
            {
                return _KID;
            }
            set
            {
                if (_KID != value)
                {
                    OnKIDChanging(value);
                    ReportPropertyChanging("KID");
                    _KID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KID");
                    OnKIDChanged();
                }
            }
        }
        private global::System.Int64 _KID;
        partial void OnKIDChanging(global::System.Int64 value);
        partial void OnKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KNo
        {
            get
            {
                return _KNo;
            }
            set
            {
                OnKNoChanging(value);
                ReportPropertyChanging("KNo");
                _KNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KNo");
                OnKNoChanged();
            }
        }
        private global::System.String _KNo;
        partial void OnKNoChanging(global::System.String value);
        partial void OnKNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KDate
        {
            get
            {
                return _KDate;
            }
            set
            {
                OnKDateChanging(value);
                ReportPropertyChanging("KDate");
                _KDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KDate");
                OnKDateChanged();
            }
        }
        private global::System.DateTime _KDate;
        partial void OnKDateChanging(global::System.DateTime value);
        partial void OnKDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private global::System.Int64 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int64 value);
        partial void OnSupplierIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContactDetails_Contract", "ContactDetails")]
        public EntityCollection<ContactDetails> ContactDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactDetails>("SureHisModel.FK_ContactDetails_Contract", "ContactDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactDetails>("SureHisModel.FK_ContactDetails_Contract", "ContactDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Contract_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Contract_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Contract_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Contract_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("SureHisModel.FK_Contract_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractChange_Contract", "ContractChange")]
        public EntityCollection<ContractChange> ContractChange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractChange>("SureHisModel.FK_ContractChange_Contract", "ContractChange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractChange>("SureHisModel.FK_ContractChange_Contract", "ContractChange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_Contract", "ContractDocument")]
        public EntityCollection<ContractDocument> ContractDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_Contract", "ContractDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_Contract", "ContractDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ContractChange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractChange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractChange object.
        /// </summary>
        /// <param name="kChangeID">Initial value of the KChangeID property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        /// <param name="kID">Initial value of the KID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ContractChange CreateContractChange(global::System.Int64 kChangeID, global::System.Int64 estEmpID, global::System.Int64 kID, global::System.DateTime modifiedDate)
        {
            ContractChange contractChange = new ContractChange();
            contractChange.KChangeID = kChangeID;
            contractChange.EstEmpID = estEmpID;
            contractChange.KID = kID;
            contractChange.ModifiedDate = modifiedDate;
            return contractChange;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KChangeID
        {
            get
            {
                return _KChangeID;
            }
            set
            {
                if (_KChangeID != value)
                {
                    OnKChangeIDChanging(value);
                    ReportPropertyChanging("KChangeID");
                    _KChangeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KChangeID");
                    OnKChangeIDChanged();
                }
            }
        }
        private global::System.Int64 _KChangeID;
        partial void OnKChangeIDChanging(global::System.Int64 value);
        partial void OnKChangeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KID
        {
            get
            {
                return _KID;
            }
            set
            {
                OnKIDChanging(value);
                ReportPropertyChanging("KID");
                _KID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KID");
                OnKIDChanged();
            }
        }
        private global::System.Int64 _KID;
        partial void OnKIDChanging(global::System.Int64 value);
        partial void OnKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChangeLog
        {
            get
            {
                return _ChangeLog;
            }
            set
            {
                OnChangeLogChanging(value);
                ReportPropertyChanging("ChangeLog");
                _ChangeLog = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChangeLog");
                OnChangeLogChanged();
            }
        }
        private global::System.String _ChangeLog;
        partial void OnChangeLogChanging(global::System.String value);
        partial void OnChangeLogChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractChange_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractChange_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractChange_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractChange_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("SureHisModel.FK_ContractChange_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_ContractChange", "ContractDocument")]
        public EntityCollection<ContractDocument> ContractDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_ContractChange", "ContractDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_ContractChange", "ContractDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ContractDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractDocument object.
        /// </summary>
        /// <param name="kDocID">Initial value of the KDocID property.</param>
        /// <param name="kID">Initial value of the KID property.</param>
        /// <param name="stdKSectD">Initial value of the StdKSectD property.</param>
        public static ContractDocument CreateContractDocument(global::System.Int64 kDocID, global::System.Int64 kID, global::System.Int64 stdKSectD)
        {
            ContractDocument contractDocument = new ContractDocument();
            contractDocument.KDocID = kDocID;
            contractDocument.KID = kID;
            contractDocument.StdKSectD = stdKSectD;
            return contractDocument;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KDocID
        {
            get
            {
                return _KDocID;
            }
            set
            {
                if (_KDocID != value)
                {
                    OnKDocIDChanging(value);
                    ReportPropertyChanging("KDocID");
                    _KDocID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KDocID");
                    OnKDocIDChanged();
                }
            }
        }
        private global::System.Int64 _KDocID;
        partial void OnKDocIDChanging(global::System.Int64 value);
        partial void OnKDocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KID
        {
            get
            {
                return _KID;
            }
            set
            {
                OnKIDChanging(value);
                ReportPropertyChanging("KID");
                _KID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KID");
                OnKIDChanged();
            }
        }
        private global::System.Int64 _KID;
        partial void OnKIDChanging(global::System.Int64 value);
        partial void OnKIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StdKSectD
        {
            get
            {
                return _StdKSectD;
            }
            set
            {
                OnStdKSectDChanging(value);
                ReportPropertyChanging("StdKSectD");
                _StdKSectD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StdKSectD");
                OnStdKSectDChanged();
            }
        }
        private global::System.Int64 _StdKSectD;
        partial void OnStdKSectDChanging(global::System.Int64 value);
        partial void OnStdKSectDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> KChangeID
        {
            get
            {
                return _KChangeID;
            }
            set
            {
                OnKChangeIDChanging(value);
                ReportPropertyChanging("KChangeID");
                _KChangeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KChangeID");
                OnKChangeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _KChangeID;
        partial void OnKChangeIDChanging(Nullable<global::System.Int64> value);
        partial void OnKChangeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_Contract", "Contract")]
        public Contract Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractDocument_Contract", "Contract").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractDocument_Contract", "Contract").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contract> ContractReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contract>("SureHisModel.FK_ContractDocument_Contract", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contract>("SureHisModel.FK_ContractDocument_Contract", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_ContractChange", "ContractChange")]
        public ContractChange ContractChange
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractChange>("SureHisModel.FK_ContractDocument_ContractChange", "ContractChange").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractChange>("SureHisModel.FK_ContractDocument_ContractChange", "ContractChange").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ContractChange> ContractChangeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ContractChange>("SureHisModel.FK_ContractDocument_ContractChange", "ContractChange");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ContractChange>("SureHisModel.FK_ContractDocument_ContractChange", "ContractChange", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_StdKSection", "StdKSection")]
        public StdKSection StdKSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StdKSection>("SureHisModel.FK_ContractDocument_StdKSection", "StdKSection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StdKSection>("SureHisModel.FK_ContractDocument_StdKSection", "StdKSection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StdKSection> StdKSectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StdKSection>("SureHisModel.FK_ContractDocument_StdKSection", "StdKSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StdKSection>("SureHisModel.FK_ContractDocument_StdKSection", "StdKSection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DDI")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DDI : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DDI object.
        /// </summary>
        /// <param name="dDIID">Initial value of the DDIID property.</param>
        /// <param name="majDID">Initial value of the MajDID property.</param>
        /// <param name="refDID">Initial value of the RefDID property.</param>
        public static DDI CreateDDI(global::System.Int64 dDIID, global::System.Int64 majDID, global::System.Int64 refDID)
        {
            DDI dDI = new DDI();
            dDI.DDIID = dDIID;
            dDI.MajDID = majDID;
            dDI.RefDID = refDID;
            return dDI;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DDIID
        {
            get
            {
                return _DDIID;
            }
            set
            {
                if (_DDIID != value)
                {
                    OnDDIIDChanging(value);
                    ReportPropertyChanging("DDIID");
                    _DDIID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DDIID");
                    OnDDIIDChanged();
                }
            }
        }
        private global::System.Int64 _DDIID;
        partial void OnDDIIDChanging(global::System.Int64 value);
        partial void OnDDIIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MajDID
        {
            get
            {
                return _MajDID;
            }
            set
            {
                OnMajDIDChanging(value);
                ReportPropertyChanging("MajDID");
                _MajDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MajDID");
                OnMajDIDChanged();
            }
        }
        private global::System.Int64 _MajDID;
        partial void OnMajDIDChanging(global::System.Int64 value);
        partial void OnMajDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RefDID
        {
            get
            {
                return _RefDID;
            }
            set
            {
                OnRefDIDChanging(value);
                ReportPropertyChanging("RefDID");
                _RefDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefDID");
                OnRefDIDChanged();
            }
        }
        private global::System.Int64 _RefDID;
        partial void OnRefDIDChanging(global::System.Int64 value);
        partial void OnRefDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DDILevel
        {
            get
            {
                return _V_DDILevel;
            }
            set
            {
                OnV_DDILevelChanging(value);
                ReportPropertyChanging("V_DDILevel");
                _V_DDILevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DDILevel");
                OnV_DDILevelChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DDILevel;
        partial void OnV_DDILevelChanging(Nullable<global::System.Int64> value);
        partial void OnV_DDILevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DDIVNLevel
        {
            get
            {
                return _V_DDIVNLevel;
            }
            set
            {
                OnV_DDIVNLevelChanging(value);
                ReportPropertyChanging("V_DDIVNLevel");
                _V_DDIVNLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DDIVNLevel");
                OnV_DDIVNLevelChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DDIVNLevel;
        partial void OnV_DDIVNLevelChanging(Nullable<global::System.Int64> value);
        partial void OnV_DDIVNLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNNotes
        {
            get
            {
                return _VNNotes;
            }
            set
            {
                OnVNNotesChanging(value);
                ReportPropertyChanging("VNNotes");
                _VNNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNNotes");
                OnVNNotesChanged();
            }
        }
        private global::System.String _VNNotes;
        partial void OnVNNotesChanging(global::System.String value);
        partial void OnVNNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DDI_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DDI_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DDI_Drug_02", "Drug")]
        public Drug Drug1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug_02", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug_02", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> Drug1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DDI_Drug_02", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DDI_Drug_02", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DeathSituationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DeathSituationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DeathSituationInfo object.
        /// </summary>
        /// <param name="dCertID">Initial value of the DCertID property.</param>
        /// <param name="dCertText">Initial value of the DCertText property.</param>
        /// <param name="hCEpiIDCode">Initial value of the HCEpiIDCode property.</param>
        /// <param name="dCertDeathDtm">Initial value of the DCertDeathDtm property.</param>
        /// <param name="isPostMorternExam">Initial value of the IsPostMorternExam property.</param>
        public static DeathSituationInfo CreateDeathSituationInfo(global::System.Int64 dCertID, global::System.String dCertText, global::System.Int64 hCEpiIDCode, global::System.DateTime dCertDeathDtm, global::System.Boolean isPostMorternExam)
        {
            DeathSituationInfo deathSituationInfo = new DeathSituationInfo();
            deathSituationInfo.DCertID = dCertID;
            deathSituationInfo.DCertText = dCertText;
            deathSituationInfo.HCEpiIDCode = hCEpiIDCode;
            deathSituationInfo.DCertDeathDtm = dCertDeathDtm;
            deathSituationInfo.IsPostMorternExam = isPostMorternExam;
            return deathSituationInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DCertID
        {
            get
            {
                return _DCertID;
            }
            set
            {
                if (_DCertID != value)
                {
                    OnDCertIDChanging(value);
                    ReportPropertyChanging("DCertID");
                    _DCertID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DCertID");
                    OnDCertIDChanged();
                }
            }
        }
        private global::System.Int64 _DCertID;
        partial void OnDCertIDChanging(global::System.Int64 value);
        partial void OnDCertIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DCertText
        {
            get
            {
                return _DCertText;
            }
            set
            {
                OnDCertTextChanging(value);
                ReportPropertyChanging("DCertText");
                _DCertText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DCertText");
                OnDCertTextChanged();
            }
        }
        private global::System.String _DCertText;
        partial void OnDCertTextChanging(global::System.String value);
        partial void OnDCertTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCEpiIDCode
        {
            get
            {
                return _HCEpiIDCode;
            }
            set
            {
                OnHCEpiIDCodeChanging(value);
                ReportPropertyChanging("HCEpiIDCode");
                _HCEpiIDCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCEpiIDCode");
                OnHCEpiIDCodeChanged();
            }
        }
        private global::System.Int64 _HCEpiIDCode;
        partial void OnHCEpiIDCodeChanging(global::System.Int64 value);
        partial void OnHCEpiIDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HCFEDispDiagICDCode
        {
            get
            {
                return _HCFEDispDiagICDCode;
            }
            set
            {
                OnHCFEDispDiagICDCodeChanging(value);
                ReportPropertyChanging("HCFEDispDiagICDCode");
                _HCFEDispDiagICDCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFEDispDiagICDCode");
                OnHCFEDispDiagICDCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _HCFEDispDiagICDCode;
        partial void OnHCFEDispDiagICDCodeChanging(Nullable<global::System.Int64> value);
        partial void OnHCFEDispDiagICDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DCertDeathDtm
        {
            get
            {
                return _DCertDeathDtm;
            }
            set
            {
                OnDCertDeathDtmChanging(value);
                ReportPropertyChanging("DCertDeathDtm");
                _DCertDeathDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DCertDeathDtm");
                OnDCertDeathDtmChanged();
            }
        }
        private global::System.DateTime _DCertDeathDtm;
        partial void OnDCertDeathDtmChanging(global::System.DateTime value);
        partial void OnDCertDeathDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DCertDeathCauseCode
        {
            get
            {
                return _DCertDeathCauseCode;
            }
            set
            {
                OnDCertDeathCauseCodeChanging(value);
                ReportPropertyChanging("DCertDeathCauseCode");
                _DCertDeathCauseCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DCertDeathCauseCode");
                OnDCertDeathCauseCodeChanged();
            }
        }
        private global::System.String _DCertDeathCauseCode;
        partial void OnDCertDeathCauseCodeChanging(global::System.String value);
        partial void OnDCertDeathCauseCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DCertDeathCauseDesc
        {
            get
            {
                return _DCertDeathCauseDesc;
            }
            set
            {
                OnDCertDeathCauseDescChanging(value);
                ReportPropertyChanging("DCertDeathCauseDesc");
                _DCertDeathCauseDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DCertDeathCauseDesc");
                OnDCertDeathCauseDescChanged();
            }
        }
        private global::System.String _DCertDeathCauseDesc;
        partial void OnDCertDeathCauseDescChanging(global::System.String value);
        partial void OnDCertDeathCauseDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPostMorternExam
        {
            get
            {
                return _IsPostMorternExam;
            }
            set
            {
                OnIsPostMorternExamChanging(value);
                ReportPropertyChanging("IsPostMorternExam");
                _IsPostMorternExam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostMorternExam");
                OnIsPostMorternExamChanged();
            }
        }
        private global::System.Boolean _IsPostMorternExam;
        partial void OnIsPostMorternExamChanging(global::System.Boolean value);
        partial void OnIsPostMorternExamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostMorternExamDiagnosis
        {
            get
            {
                return _PostMorternExamDiagnosis;
            }
            set
            {
                OnPostMorternExamDiagnosisChanging(value);
                ReportPropertyChanging("PostMorternExamDiagnosis");
                _PostMorternExamDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostMorternExamDiagnosis");
                OnPostMorternExamDiagnosisChanged();
            }
        }
        private global::System.String _PostMorternExamDiagnosis;
        partial void OnPostMorternExamDiagnosisChanging(global::System.String value);
        partial void OnPostMorternExamDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_CategoryOfDeath
        {
            get
            {
                return _V_CategoryOfDeath;
            }
            set
            {
                OnV_CategoryOfDeathChanging(value);
                ReportPropertyChanging("V_CategoryOfDeath");
                _V_CategoryOfDeath = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_CategoryOfDeath");
                OnV_CategoryOfDeathChanged();
            }
        }
        private Nullable<global::System.Int64> _V_CategoryOfDeath;
        partial void OnV_CategoryOfDeathChanging(Nullable<global::System.Int64> value);
        partial void OnV_CategoryOfDeathChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DeathSituationInfo_ReceivePatient", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DHCRoomBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DHCRoomBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DHCRoomBlock object.
        /// </summary>
        /// <param name="dHCRmBlockID">Initial value of the DHCRmBlockID property.</param>
        /// <param name="hCRmBlockID">Initial value of the HCRmBlockID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        public static DHCRoomBlock CreateDHCRoomBlock(global::System.Int64 dHCRmBlockID, global::System.Int64 hCRmBlockID, global::System.Int64 roomID)
        {
            DHCRoomBlock dHCRoomBlock = new DHCRoomBlock();
            dHCRoomBlock.DHCRmBlockID = dHCRmBlockID;
            dHCRoomBlock.HCRmBlockID = hCRmBlockID;
            dHCRoomBlock.RoomID = roomID;
            return dHCRoomBlock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DHCRmBlockID
        {
            get
            {
                return _DHCRmBlockID;
            }
            set
            {
                if (_DHCRmBlockID != value)
                {
                    OnDHCRmBlockIDChanging(value);
                    ReportPropertyChanging("DHCRmBlockID");
                    _DHCRmBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DHCRmBlockID");
                    OnDHCRmBlockIDChanged();
                }
            }
        }
        private global::System.Int64 _DHCRmBlockID;
        partial void OnDHCRmBlockIDChanging(global::System.Int64 value);
        partial void OnDHCRmBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCRmBlockID
        {
            get
            {
                return _HCRmBlockID;
            }
            set
            {
                OnHCRmBlockIDChanging(value);
                ReportPropertyChanging("HCRmBlockID");
                _HCRmBlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCRmBlockID");
                OnHCRmBlockIDChanged();
            }
        }
        private global::System.Int64 _HCRmBlockID;
        partial void OnHCRmBlockIDChanging(global::System.Int64 value);
        partial void OnHCRmBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int64 _RoomID;
        partial void OnRoomIDChanging(global::System.Int64 value);
        partial void OnRoomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock")]
        public HCRoomBlock HCRoomBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCRoomBlock> HCRoomBlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "HCRoomBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DHCRoomBlock_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "RoomAllocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DiagDescribeTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DiagDescribeTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DiagDescribeTmp object.
        /// </summary>
        /// <param name="dxDTmpID">Initial value of the DxDTmpID property.</param>
        /// <param name="dxDTmpCode">Initial value of the DxDTmpCode property.</param>
        /// <param name="dxDTmpName">Initial value of the DxDTmpName property.</param>
        /// <param name="dxDTmpContent">Initial value of the DxDTmpContent property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        public static DiagDescribeTmp CreateDiagDescribeTmp(global::System.Int64 dxDTmpID, global::System.String dxDTmpCode, global::System.String dxDTmpName, global::System.String dxDTmpContent, global::System.Int64 estEmpID)
        {
            DiagDescribeTmp diagDescribeTmp = new DiagDescribeTmp();
            diagDescribeTmp.DxDTmpID = dxDTmpID;
            diagDescribeTmp.DxDTmpCode = dxDTmpCode;
            diagDescribeTmp.DxDTmpName = dxDTmpName;
            diagDescribeTmp.DxDTmpContent = dxDTmpContent;
            diagDescribeTmp.EstEmpID = estEmpID;
            return diagDescribeTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DxDTmpID
        {
            get
            {
                return _DxDTmpID;
            }
            set
            {
                if (_DxDTmpID != value)
                {
                    OnDxDTmpIDChanging(value);
                    ReportPropertyChanging("DxDTmpID");
                    _DxDTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DxDTmpID");
                    OnDxDTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _DxDTmpID;
        partial void OnDxDTmpIDChanging(global::System.Int64 value);
        partial void OnDxDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DxDTmpCode
        {
            get
            {
                return _DxDTmpCode;
            }
            set
            {
                OnDxDTmpCodeChanging(value);
                ReportPropertyChanging("DxDTmpCode");
                _DxDTmpCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DxDTmpCode");
                OnDxDTmpCodeChanged();
            }
        }
        private global::System.String _DxDTmpCode;
        partial void OnDxDTmpCodeChanging(global::System.String value);
        partial void OnDxDTmpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DxDTmpName
        {
            get
            {
                return _DxDTmpName;
            }
            set
            {
                OnDxDTmpNameChanging(value);
                ReportPropertyChanging("DxDTmpName");
                _DxDTmpName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DxDTmpName");
                OnDxDTmpNameChanged();
            }
        }
        private global::System.String _DxDTmpName;
        partial void OnDxDTmpNameChanging(global::System.String value);
        partial void OnDxDTmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DxDTmpContent
        {
            get
            {
                return _DxDTmpContent;
            }
            set
            {
                OnDxDTmpContentChanging(value);
                ReportPropertyChanging("DxDTmpContent");
                _DxDTmpContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DxDTmpContent");
                OnDxDTmpContentChanged();
            }
        }
        private global::System.String _DxDTmpContent;
        partial void OnDxDTmpContentChanging(global::System.String value);
        partial void OnDxDTmpContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDtm
        {
            get
            {
                return _ModifiedDtm;
            }
            set
            {
                OnModifiedDtmChanging(value);
                ReportPropertyChanging("ModifiedDtm");
                _ModifiedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDtm");
                OnModifiedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDtm;
        partial void OnModifiedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                OnParClinExamGroupIDChanging(value);
                ReportPropertyChanging("ParClinExamGroupID");
                _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParClinExamGroupID");
                OnParClinExamGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnParClinExamGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientDiagnosticImaging_DiagDescribeTmp", "PatientDiagnosticImaging")]
        public EntityCollection<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "PatientDiagnosticImaging", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DisposableMDResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DisposableMDResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DisposableMDResource object.
        /// </summary>
        /// <param name="dispMDRscrID">Initial value of the DispMDRscrID property.</param>
        public static DisposableMDResource CreateDisposableMDResource(global::System.Int64 dispMDRscrID)
        {
            DisposableMDResource disposableMDResource = new DisposableMDResource();
            disposableMDResource.DispMDRscrID = dispMDRscrID;
            return disposableMDResource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DispMDRscrID
        {
            get
            {
                return _DispMDRscrID;
            }
            set
            {
                if (_DispMDRscrID != value)
                {
                    OnDispMDRscrIDChanging(value);
                    ReportPropertyChanging("DispMDRscrID");
                    _DispMDRscrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DispMDRscrID");
                    OnDispMDRscrIDChanged();
                }
            }
        }
        private global::System.Int64 _DispMDRscrID;
        partial void OnDispMDRscrIDChanging(global::System.Int64 value);
        partial void OnDispMDRscrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UsedTech
        {
            get
            {
                return _UsedTech;
            }
            set
            {
                OnUsedTechChanging(value);
                ReportPropertyChanging("UsedTech");
                _UsedTech = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UsedTech");
                OnUsedTechChanged();
            }
        }
        private global::System.String _UsedTech;
        partial void OnUsedTechChanging(global::System.String value);
        partial void OnUsedTechChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Components
        {
            get
            {
                return _Components;
            }
            set
            {
                OnComponentsChanging(value);
                ReportPropertyChanging("Components");
                _Components = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Components");
                OnComponentsChanged();
            }
        }
        private global::System.String _Components;
        partial void OnComponentsChanging(global::System.String value);
        partial void OnComponentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClinicalIndications
        {
            get
            {
                return _ClinicalIndications;
            }
            set
            {
                OnClinicalIndicationsChanging(value);
                ReportPropertyChanging("ClinicalIndications");
                _ClinicalIndications = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClinicalIndications");
                OnClinicalIndicationsChanged();
            }
        }
        private global::System.String _ClinicalIndications;
        partial void OnClinicalIndicationsChanging(global::System.String value);
        partial void OnClinicalIndicationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Effective
        {
            get
            {
                return _Effective;
            }
            set
            {
                OnEffectiveChanging(value);
                ReportPropertyChanging("Effective");
                _Effective = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Effective");
                OnEffectiveChanged();
            }
        }
        private global::System.String _Effective;
        partial void OnEffectiveChanging(global::System.String value);
        partial void OnEffectiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ExpectedTimeUse
        {
            get
            {
                return _ExpectedTimeUse;
            }
            set
            {
                OnExpectedTimeUseChanging(value);
                ReportPropertyChanging("ExpectedTimeUse");
                _ExpectedTimeUse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpectedTimeUse");
                OnExpectedTimeUseChanged();
            }
        }
        private Nullable<global::System.Int64> _ExpectedTimeUse;
        partial void OnExpectedTimeUseChanging(Nullable<global::System.Int64> value);
        partial void OnExpectedTimeUseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreatmentNotes
        {
            get
            {
                return _TreatmentNotes;
            }
            set
            {
                OnTreatmentNotesChanging(value);
                ReportPropertyChanging("TreatmentNotes");
                _TreatmentNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TreatmentNotes");
                OnTreatmentNotesChanged();
            }
        }
        private global::System.String _TreatmentNotes;
        partial void OnTreatmentNotesChanging(global::System.String value);
        partial void OnTreatmentNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RscrID
        {
            get
            {
                return _RscrID;
            }
            set
            {
                OnRscrIDChanging(value);
                ReportPropertyChanging("RscrID");
                _RscrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RscrID");
                OnRscrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RscrID;
        partial void OnRscrIDChanging(Nullable<global::System.Int64> value);
        partial void OnRscrIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DisposableMDResource_Resource", "Resource")]
        public Resource Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_DisposableMDResource_Resource", "Resource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_DisposableMDResource_Resource", "Resource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Resource> ResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Resource>("SureHisModel.FK_DisposableMDResource_Resource", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Resource>("SureHisModel.FK_DisposableMDResource_Resource", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DocItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocItem object.
        /// </summary>
        /// <param name="docItemID">Initial value of the DocItemID property.</param>
        /// <param name="docItemTile">Initial value of the DocItemTile property.</param>
        /// <param name="filePathLocation">Initial value of the FilePathLocation property.</param>
        public static DocItem CreateDocItem(global::System.Int64 docItemID, global::System.String docItemTile, global::System.String filePathLocation)
        {
            DocItem docItem = new DocItem();
            docItem.DocItemID = docItemID;
            docItem.DocItemTile = docItemTile;
            docItem.FilePathLocation = filePathLocation;
            return docItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DocItemID
        {
            get
            {
                return _DocItemID;
            }
            set
            {
                if (_DocItemID != value)
                {
                    OnDocItemIDChanging(value);
                    ReportPropertyChanging("DocItemID");
                    _DocItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocItemID");
                    OnDocItemIDChanged();
                }
            }
        }
        private global::System.Int64 _DocItemID;
        partial void OnDocItemIDChanging(global::System.Int64 value);
        partial void OnDocItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                OnItemTypeIDChanging(value);
                ReportPropertyChanging("ItemTypeID");
                _ItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemTypeID");
                OnItemTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ItemTypeID;
        partial void OnItemTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocItemTile
        {
            get
            {
                return _DocItemTile;
            }
            set
            {
                OnDocItemTileChanging(value);
                ReportPropertyChanging("DocItemTile");
                _DocItemTile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocItemTile");
                OnDocItemTileChanged();
            }
        }
        private global::System.String _DocItemTile;
        partial void OnDocItemTileChanging(global::System.String value);
        partial void OnDocItemTileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePathLocation
        {
            get
            {
                return _FilePathLocation;
            }
            set
            {
                OnFilePathLocationChanging(value);
                ReportPropertyChanging("FilePathLocation");
                _FilePathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePathLocation");
                OnFilePathLocationChanged();
            }
        }
        private global::System.String _FilePathLocation;
        partial void OnFilePathLocationChanging(global::System.String value);
        partial void OnFilePathLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssuedDate;
        partial void OnIssuedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AttachedDoc_DocItem", "AttachedDoc")]
        public EntityCollection<AttachedDoc> AttachedDoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachedDoc>("SureHisModel.FK_AttachedDoc_DocItem", "AttachedDoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachedDoc>("SureHisModel.FK_AttachedDoc_DocItem", "AttachedDoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DocItem_refItemType", "refItemType")]
        public refItemType refItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refItemType>("SureHisModel.FK_DocItem_refItemType", "refItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refItemType>("SureHisModel.FK_DocItem_refItemType", "refItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refItemType> refItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refItemType>("SureHisModel.FK_DocItem_refItemType", "refItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refItemType>("SureHisModel.FK_DocItem_refItemType", "refItemType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Donor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Donor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Donor object.
        /// </summary>
        /// <param name="donorID">Initial value of the DonorID property.</param>
        public static Donor CreateDonor(global::System.Int64 donorID)
        {
            Donor donor = new Donor();
            donor.DonorID = donorID;
            return donor;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DonorID
        {
            get
            {
                return _DonorID;
            }
            set
            {
                if (_DonorID != value)
                {
                    OnDonorIDChanging(value);
                    ReportPropertyChanging("DonorID");
                    _DonorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DonorID");
                    OnDonorIDChanged();
                }
            }
        }
        private global::System.Int64 _DonorID;
        partial void OnDonorIDChanging(global::System.Int64 value);
        partial void OnDonorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BloodTypeID
        {
            get
            {
                return _BloodTypeID;
            }
            set
            {
                OnBloodTypeIDChanging(value);
                ReportPropertyChanging("BloodTypeID");
                _BloodTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodTypeID");
                OnBloodTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BloodTypeID;
        partial void OnBloodTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnBloodTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BloodDonation_Donor", "BloodDonation")]
        public EntityCollection<BloodDonation> BloodDonation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BloodDonation>("SureHisModel.FK_BloodDonation_Donor", "BloodDonation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BloodDonation>("SureHisModel.FK_BloodDonation_Donor", "BloodDonation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Donor_refBloodType", "refBloodType")]
        public refBloodType refBloodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Donor_refBloodType", "refBloodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Donor_refBloodType", "refBloodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refBloodType> refBloodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Donor_refBloodType", "refBloodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refBloodType>("SureHisModel.FK_Donor_refBloodType", "refBloodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedicalConditions_Donor", "DonorMedicalConditions")]
        public EntityCollection<DonorMedicalConditions> DonorMedicalConditions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonorMedicalConditions>("SureHisModel.FK_DonorMedicalConditions_Donor", "DonorMedicalConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonorMedicalConditions>("SureHisModel.FK_DonorMedicalConditions_Donor", "DonorMedicalConditions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedication_Donor", "DonorMedication")]
        public EntityCollection<DonorMedication> DonorMedication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonorMedication>("SureHisModel.FK_DonorMedication_Donor", "DonorMedication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonorMedication>("SureHisModel.FK_DonorMedication_Donor", "DonorMedication", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DonorMedicalConditions")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DonorMedicalConditions : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DonorMedicalConditions object.
        /// </summary>
        /// <param name="donorMedCondID">Initial value of the DonorMedCondID property.</param>
        /// <param name="donorID">Initial value of the DonorID property.</param>
        /// <param name="mCID">Initial value of the MCID property.</param>
        public static DonorMedicalConditions CreateDonorMedicalConditions(global::System.Int64 donorMedCondID, global::System.Int64 donorID, global::System.Int64 mCID)
        {
            DonorMedicalConditions donorMedicalConditions = new DonorMedicalConditions();
            donorMedicalConditions.DonorMedCondID = donorMedCondID;
            donorMedicalConditions.DonorID = donorID;
            donorMedicalConditions.MCID = mCID;
            return donorMedicalConditions;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DonorMedCondID
        {
            get
            {
                return _DonorMedCondID;
            }
            set
            {
                if (_DonorMedCondID != value)
                {
                    OnDonorMedCondIDChanging(value);
                    ReportPropertyChanging("DonorMedCondID");
                    _DonorMedCondID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DonorMedCondID");
                    OnDonorMedCondIDChanged();
                }
            }
        }
        private global::System.Int64 _DonorMedCondID;
        partial void OnDonorMedCondIDChanging(global::System.Int64 value);
        partial void OnDonorMedCondIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DonorID
        {
            get
            {
                return _DonorID;
            }
            set
            {
                OnDonorIDChanging(value);
                ReportPropertyChanging("DonorID");
                _DonorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonorID");
                OnDonorIDChanged();
            }
        }
        private global::System.Int64 _DonorID;
        partial void OnDonorIDChanging(global::System.Int64 value);
        partial void OnDonorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MCID
        {
            get
            {
                return _MCID;
            }
            set
            {
                OnMCIDChanging(value);
                ReportPropertyChanging("MCID");
                _MCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MCID");
                OnMCIDChanged();
            }
        }
        private global::System.Int64 _MCID;
        partial void OnMCIDChanging(global::System.Int64 value);
        partial void OnMCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MCExplainOrNotes
        {
            get
            {
                return _MCExplainOrNotes;
            }
            set
            {
                OnMCExplainOrNotesChanging(value);
                ReportPropertyChanging("MCExplainOrNotes");
                _MCExplainOrNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MCExplainOrNotes");
                OnMCExplainOrNotesChanged();
            }
        }
        private global::System.String _MCExplainOrNotes;
        partial void OnMCExplainOrNotesChanging(global::System.String value);
        partial void OnMCExplainOrNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedicalConditions_Donor", "Donor")]
        public Donor Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedicalConditions_Donor", "Donor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedicalConditions_Donor", "Donor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Donor> DonorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedicalConditions_Donor", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Donor>("SureHisModel.FK_DonorMedicalConditions_Donor", "Donor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition")]
        public refMedicalCondition refMedicalCondition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedicalCondition> refMedicalConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedicalCondition>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "refMedicalCondition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DonorMedication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DonorMedication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DonorMedication object.
        /// </summary>
        /// <param name="donorMedID">Initial value of the DonorMedID property.</param>
        /// <param name="donorID">Initial value of the DonorID property.</param>
        /// <param name="medCode">Initial value of the MedCode property.</param>
        public static DonorMedication CreateDonorMedication(global::System.Int64 donorMedID, global::System.Int64 donorID, global::System.Int64 medCode)
        {
            DonorMedication donorMedication = new DonorMedication();
            donorMedication.DonorMedID = donorMedID;
            donorMedication.DonorID = donorID;
            donorMedication.MedCode = medCode;
            return donorMedication;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DonorMedID
        {
            get
            {
                return _DonorMedID;
            }
            set
            {
                if (_DonorMedID != value)
                {
                    OnDonorMedIDChanging(value);
                    ReportPropertyChanging("DonorMedID");
                    _DonorMedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DonorMedID");
                    OnDonorMedIDChanged();
                }
            }
        }
        private global::System.Int64 _DonorMedID;
        partial void OnDonorMedIDChanging(global::System.Int64 value);
        partial void OnDonorMedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DonorID
        {
            get
            {
                return _DonorID;
            }
            set
            {
                OnDonorIDChanging(value);
                ReportPropertyChanging("DonorID");
                _DonorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DonorID");
                OnDonorIDChanged();
            }
        }
        private global::System.Int64 _DonorID;
        partial void OnDonorIDChanging(global::System.Int64 value);
        partial void OnDonorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedCode
        {
            get
            {
                return _MedCode;
            }
            set
            {
                OnMedCodeChanging(value);
                ReportPropertyChanging("MedCode");
                _MedCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedCode");
                OnMedCodeChanged();
            }
        }
        private global::System.Int64 _MedCode;
        partial void OnMedCodeChanging(global::System.Int64 value);
        partial void OnMedCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedication_Donor", "Donor")]
        public Donor Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedication_Donor", "Donor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedication_Donor", "Donor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Donor> DonorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Donor>("SureHisModel.FK_DonorMedication_Donor", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Donor>("SureHisModel.FK_DonorMedication_Donor", "Donor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedication_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DonorMedication_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DonorMedication_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DonorMedication_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DonorMedication_Drug", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrAdviceTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrAdviceTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrAdviceTmp object.
        /// </summary>
        /// <param name="drAdvTmpID">Initial value of the DrAdvTmpID property.</param>
        /// <param name="drID">Initial value of the DrID property.</param>
        /// <param name="advTmpCode">Initial value of the AdvTmpCode property.</param>
        /// <param name="advTmpContent">Initial value of the AdvTmpContent property.</param>
        public static DrAdviceTmp CreateDrAdviceTmp(global::System.Int64 drAdvTmpID, global::System.Int64 drID, global::System.String advTmpCode, global::System.String advTmpContent)
        {
            DrAdviceTmp drAdviceTmp = new DrAdviceTmp();
            drAdviceTmp.DrAdvTmpID = drAdvTmpID;
            drAdviceTmp.DrID = drID;
            drAdviceTmp.AdvTmpCode = advTmpCode;
            drAdviceTmp.AdvTmpContent = advTmpContent;
            return drAdviceTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrAdvTmpID
        {
            get
            {
                return _DrAdvTmpID;
            }
            set
            {
                if (_DrAdvTmpID != value)
                {
                    OnDrAdvTmpIDChanging(value);
                    ReportPropertyChanging("DrAdvTmpID");
                    _DrAdvTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrAdvTmpID");
                    OnDrAdvTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _DrAdvTmpID;
        partial void OnDrAdvTmpIDChanging(global::System.Int64 value);
        partial void OnDrAdvTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrID
        {
            get
            {
                return _DrID;
            }
            set
            {
                OnDrIDChanging(value);
                ReportPropertyChanging("DrID");
                _DrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrID");
                OnDrIDChanged();
            }
        }
        private global::System.Int64 _DrID;
        partial void OnDrIDChanging(global::System.Int64 value);
        partial void OnDrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HCCnslTopic
        {
            get
            {
                return _V_HCCnslTopic;
            }
            set
            {
                OnV_HCCnslTopicChanging(value);
                ReportPropertyChanging("V_HCCnslTopic");
                _V_HCCnslTopic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HCCnslTopic");
                OnV_HCCnslTopicChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HCCnslTopic;
        partial void OnV_HCCnslTopicChanging(Nullable<global::System.Int64> value);
        partial void OnV_HCCnslTopicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvTmpCode
        {
            get
            {
                return _AdvTmpCode;
            }
            set
            {
                OnAdvTmpCodeChanging(value);
                ReportPropertyChanging("AdvTmpCode");
                _AdvTmpCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvTmpCode");
                OnAdvTmpCodeChanged();
            }
        }
        private global::System.String _AdvTmpCode;
        partial void OnAdvTmpCodeChanging(global::System.String value);
        partial void OnAdvTmpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AdvTmpContent
        {
            get
            {
                return _AdvTmpContent;
            }
            set
            {
                OnAdvTmpContentChanging(value);
                ReportPropertyChanging("AdvTmpContent");
                _AdvTmpContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AdvTmpContent");
                OnAdvTmpContentChanged();
            }
        }
        private global::System.String _AdvTmpContent;
        partial void OnAdvTmpContentChanging(global::System.String value);
        partial void OnAdvTmpContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDtm
        {
            get
            {
                return _ModifiedDtm;
            }
            set
            {
                OnModifiedDtmChanging(value);
                ReportPropertyChanging("ModifiedDtm");
                _ModifiedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDtm");
                OnModifiedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDtm;
        partial void OnModifiedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDtmChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrAdviceTmp_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrAdviceTmp_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrAdviceTmp_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrAdviceTmp_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_DrAdviceTmp_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineAdvice_DrAdviceTmp", "DrMedicineAdvice")]
        public EntityCollection<DrMedicineAdvice> DrMedicineAdvice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrMedicineAdvice>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrMedicineAdvice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrMedicineAdvice>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrMedicineAdvice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrMedicineAdvice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrMedicineAdvice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrMedicineAdvice object.
        /// </summary>
        /// <param name="dMAID">Initial value of the DMAID property.</param>
        public static DrMedicineAdvice CreateDrMedicineAdvice(global::System.Int64 dMAID)
        {
            DrMedicineAdvice drMedicineAdvice = new DrMedicineAdvice();
            drMedicineAdvice.DMAID = dMAID;
            return drMedicineAdvice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DMAID
        {
            get
            {
                return _DMAID;
            }
            set
            {
                if (_DMAID != value)
                {
                    OnDMAIDChanging(value);
                    ReportPropertyChanging("DMAID");
                    _DMAID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DMAID");
                    OnDMAIDChanged();
                }
            }
        }
        private global::System.Int64 _DMAID;
        partial void OnDMAIDChanging(global::System.Int64 value);
        partial void OnDMAIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DrMedTmpID
        {
            get
            {
                return _DrMedTmpID;
            }
            set
            {
                OnDrMedTmpIDChanging(value);
                ReportPropertyChanging("DrMedTmpID");
                _DrMedTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrMedTmpID");
                OnDrMedTmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DrMedTmpID;
        partial void OnDrMedTmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnDrMedTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DrAdvTmpID
        {
            get
            {
                return _DrAdvTmpID;
            }
            set
            {
                OnDrAdvTmpIDChanging(value);
                ReportPropertyChanging("DrAdvTmpID");
                _DrAdvTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrAdvTmpID");
                OnDrAdvTmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DrAdvTmpID;
        partial void OnDrAdvTmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnDrAdvTmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp")]
        public DrAdviceTmp DrAdviceTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrAdviceTmp>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrAdviceTmp>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DrAdviceTmp> DrAdviceTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrAdviceTmp>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DrAdviceTmp>("SureHisModel.FK_DrMedicineAdvice_DrAdviceTmp", "DrAdviceTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp")]
        public DrMedicineTmp DrMedicineTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrMedicineTmp>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrMedicineTmp>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DrMedicineTmp> DrMedicineTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrMedicineTmp>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DrMedicineTmp>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineTmp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrMedicineTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrMedicineTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrMedicineTmp object.
        /// </summary>
        /// <param name="drMedTmpID">Initial value of the DrMedTmpID property.</param>
        public static DrMedicineTmp CreateDrMedicineTmp(global::System.Int64 drMedTmpID)
        {
            DrMedicineTmp drMedicineTmp = new DrMedicineTmp();
            drMedicineTmp.DrMedTmpID = drMedTmpID;
            return drMedicineTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrMedTmpID
        {
            get
            {
                return _DrMedTmpID;
            }
            set
            {
                if (_DrMedTmpID != value)
                {
                    OnDrMedTmpIDChanging(value);
                    ReportPropertyChanging("DrMedTmpID");
                    _DrMedTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrMedTmpID");
                    OnDrMedTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _DrMedTmpID;
        partial void OnDrMedTmpIDChanging(global::System.Int64 value);
        partial void OnDrMedTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedcnID
        {
            get
            {
                return _MedcnID;
            }
            set
            {
                OnMedcnIDChanging(value);
                ReportPropertyChanging("MedcnID");
                _MedcnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnID");
                OnMedcnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedcnID;
        partial void OnMedcnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedcnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DrID
        {
            get
            {
                return _DrID;
            }
            set
            {
                OnDrIDChanging(value);
                ReportPropertyChanging("DrID");
                _DrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrID");
                OnDrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DrID;
        partial void OnDrIDChanging(Nullable<global::System.Int64> value);
        partial void OnDrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDtm
        {
            get
            {
                return _ModifiedDtm;
            }
            set
            {
                OnModifiedDtmChanging(value);
                ReportPropertyChanging("ModifiedDtm");
                _ModifiedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDtm");
                OnModifiedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDtm;
        partial void OnModifiedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDtmChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineAdvice")]
        public EntityCollection<DrMedicineAdvice> DrMedicineAdvice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrMedicineAdvice>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineAdvice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrMedicineAdvice>("SureHisModel.FK_DrMedicineAdvice_DrMedicineTmp", "DrMedicineAdvice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineTmp_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrMedicineTmp_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrMedicineTmp_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrMedicineTmp_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DrMedicineTmp_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineTmp_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrMedicineTmp_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrMedicineTmp_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrMedicineTmp_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_DrMedicineTmp_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrPrescriptionTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrPrescriptionTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrPrescriptionTmp object.
        /// </summary>
        /// <param name="drID">Initial value of the DrID property.</param>
        /// <param name="drRxTmpID">Initial value of the DrRxTmpID property.</param>
        /// <param name="rxTmpName">Initial value of the RxTmpName property.</param>
        /// <param name="iCD10">Initial value of the ICD10 property.</param>
        public static DrPrescriptionTmp CreateDrPrescriptionTmp(global::System.Int64 drID, global::System.Int64 drRxTmpID, global::System.String rxTmpName, global::System.Int64 iCD10)
        {
            DrPrescriptionTmp drPrescriptionTmp = new DrPrescriptionTmp();
            drPrescriptionTmp.DrID = drID;
            drPrescriptionTmp.DrRxTmpID = drRxTmpID;
            drPrescriptionTmp.RxTmpName = rxTmpName;
            drPrescriptionTmp.ICD10 = iCD10;
            return drPrescriptionTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrID
        {
            get
            {
                return _DrID;
            }
            set
            {
                OnDrIDChanging(value);
                ReportPropertyChanging("DrID");
                _DrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrID");
                OnDrIDChanged();
            }
        }
        private global::System.Int64 _DrID;
        partial void OnDrIDChanging(global::System.Int64 value);
        partial void OnDrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrRxTmpID
        {
            get
            {
                return _DrRxTmpID;
            }
            set
            {
                if (_DrRxTmpID != value)
                {
                    OnDrRxTmpIDChanging(value);
                    ReportPropertyChanging("DrRxTmpID");
                    _DrRxTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrRxTmpID");
                    OnDrRxTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _DrRxTmpID;
        partial void OnDrRxTmpIDChanging(global::System.Int64 value);
        partial void OnDrRxTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RxTmpName
        {
            get
            {
                return _RxTmpName;
            }
            set
            {
                OnRxTmpNameChanging(value);
                ReportPropertyChanging("RxTmpName");
                _RxTmpName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RxTmpName");
                OnRxTmpNameChanged();
            }
        }
        private global::System.String _RxTmpName;
        partial void OnRxTmpNameChanging(global::System.String value);
        partial void OnRxTmpNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RxTmpDesc
        {
            get
            {
                return _RxTmpDesc;
            }
            set
            {
                OnRxTmpDescChanging(value);
                ReportPropertyChanging("RxTmpDesc");
                _RxTmpDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RxTmpDesc");
                OnRxTmpDescChanged();
            }
        }
        private global::System.String _RxTmpDesc;
        partial void OnRxTmpDescChanging(global::System.String value);
        partial void OnRxTmpDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ICD10
        {
            get
            {
                return _ICD10;
            }
            set
            {
                OnICD10Changing(value);
                ReportPropertyChanging("ICD10");
                _ICD10 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICD10");
                OnICD10Changed();
            }
        }
        private global::System.Int64 _ICD10;
        partial void OnICD10Changing(global::System.Int64 value);
        partial void OnICD10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagDesc
        {
            get
            {
                return _DiagDesc;
            }
            set
            {
                OnDiagDescChanging(value);
                ReportPropertyChanging("DiagDesc");
                _DiagDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagDesc");
                OnDiagDescChanged();
            }
        }
        private global::System.String _DiagDesc;
        partial void OnDiagDescChanging(global::System.String value);
        partial void OnDiagDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrAdvice
        {
            get
            {
                return _DrAdvice;
            }
            set
            {
                OnDrAdviceChanging(value);
                ReportPropertyChanging("DrAdvice");
                _DrAdvice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrAdvice");
                OnDrAdviceChanged();
            }
        }
        private global::System.String _DrAdvice;
        partial void OnDrAdviceChanging(global::System.String value);
        partial void OnDrAdviceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_RxCatg
        {
            get
            {
                return _V_RxCatg;
            }
            set
            {
                OnV_RxCatgChanging(value);
                ReportPropertyChanging("V_RxCatg");
                _V_RxCatg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_RxCatg");
                OnV_RxCatgChanged();
            }
        }
        private Nullable<global::System.Int64> _V_RxCatg;
        partial void OnV_RxCatgChanging(Nullable<global::System.Int64> value);
        partial void OnV_RxCatgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNoEffect
        {
            get
            {
                return _IsNoEffect;
            }
            set
            {
                OnIsNoEffectChanging(value);
                ReportPropertyChanging("IsNoEffect");
                _IsNoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNoEffect");
                OnIsNoEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNoEffect;
        partial void OnIsNoEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNoEffectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmp_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrPrescriptionTmp_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrPrescriptionTmp_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_DrPrescriptionTmp_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_DrPrescriptionTmp_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmp_ICD10", "ICD10")]
        public ICD10 ICD101
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD101Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmps", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrPrescriptionTmps")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrPrescriptionTmps : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrPrescriptionTmps object.
        /// </summary>
        /// <param name="drRxTmpsID">Initial value of the DrRxTmpsID property.</param>
        public static DrPrescriptionTmps CreateDrPrescriptionTmps(global::System.Int64 drRxTmpsID)
        {
            DrPrescriptionTmps drPrescriptionTmps = new DrPrescriptionTmps();
            drPrescriptionTmps.DrRxTmpsID = drRxTmpsID;
            return drPrescriptionTmps;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DrRxTmpID
        {
            get
            {
                return _DrRxTmpID;
            }
            set
            {
                OnDrRxTmpIDChanging(value);
                ReportPropertyChanging("DrRxTmpID");
                _DrRxTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrRxTmpID");
                OnDrRxTmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DrRxTmpID;
        partial void OnDrRxTmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnDrRxTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrRxTmpsID
        {
            get
            {
                return _DrRxTmpsID;
            }
            set
            {
                if (_DrRxTmpsID != value)
                {
                    OnDrRxTmpsIDChanging(value);
                    ReportPropertyChanging("DrRxTmpsID");
                    _DrRxTmpsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrRxTmpsID");
                    OnDrRxTmpsIDChanged();
                }
            }
        }
        private global::System.Int64 _DrRxTmpsID;
        partial void OnDrRxTmpsIDChanging(global::System.Int64 value);
        partial void OnDrRxTmpsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedcnID
        {
            get
            {
                return _MedcnID;
            }
            set
            {
                OnMedcnIDChanging(value);
                ReportPropertyChanging("MedcnID");
                _MedcnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnID");
                OnMedcnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedcnID;
        partial void OnMedcnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedcnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnName
        {
            get
            {
                return _MedcnName;
            }
            set
            {
                OnMedcnNameChanging(value);
                ReportPropertyChanging("MedcnName");
                _MedcnName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnName");
                OnMedcnNameChanged();
            }
        }
        private global::System.String _MedcnName;
        partial void OnMedcnNameChanging(global::System.String value);
        partial void OnMedcnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcPrincipleName
        {
            get
            {
                return _AcPrincipleName;
            }
            set
            {
                OnAcPrincipleNameChanging(value);
                ReportPropertyChanging("AcPrincipleName");
                _AcPrincipleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcPrincipleName");
                OnAcPrincipleNameChanged();
            }
        }
        private global::System.String _AcPrincipleName;
        partial void OnAcPrincipleNameChanging(global::System.String value);
        partial void OnAcPrincipleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MedcnDoseQty
        {
            get
            {
                return _MedcnDoseQty;
            }
            set
            {
                OnMedcnDoseQtyChanging(value);
                ReportPropertyChanging("MedcnDoseQty");
                _MedcnDoseQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDoseQty");
                OnMedcnDoseQtyChanged();
            }
        }
        private Nullable<global::System.Double> _MedcnDoseQty;
        partial void OnMedcnDoseQtyChanging(Nullable<global::System.Double> value);
        partial void OnMedcnDoseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnDoseUnitCode
        {
            get
            {
                return _MedcnDoseUnitCode;
            }
            set
            {
                OnMedcnDoseUnitCodeChanging(value);
                ReportPropertyChanging("MedcnDoseUnitCode");
                _MedcnDoseUnitCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDoseUnitCode");
                OnMedcnDoseUnitCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnDoseUnitCode;
        partial void OnMedcnDoseUnitCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnDoseUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminFreqCode
        {
            get
            {
                return _MedcnAdminFreqCode;
            }
            set
            {
                OnMedcnAdminFreqCodeChanging(value);
                ReportPropertyChanging("MedcnAdminFreqCode");
                _MedcnAdminFreqCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminFreqCode");
                OnMedcnAdminFreqCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminFreqCode;
        partial void OnMedcnAdminFreqCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminFreqCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminFreqPerDay
        {
            get
            {
                return _MedcnAdminFreqPerDay;
            }
            set
            {
                OnMedcnAdminFreqPerDayChanging(value);
                ReportPropertyChanging("MedcnAdminFreqPerDay");
                _MedcnAdminFreqPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminFreqPerDay");
                OnMedcnAdminFreqPerDayChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminFreqPerDay;
        partial void OnMedcnAdminFreqPerDayChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminFreqPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MedcnDispenseQty
        {
            get
            {
                return _MedcnDispenseQty;
            }
            set
            {
                OnMedcnDispenseQtyChanging(value);
                ReportPropertyChanging("MedcnDispenseQty");
                _MedcnDispenseQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDispenseQty");
                OnMedcnDispenseQtyChanged();
            }
        }
        private Nullable<global::System.Double> _MedcnDispenseQty;
        partial void OnMedcnDispenseQtyChanging(Nullable<global::System.Double> value);
        partial void OnMedcnDispenseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MedcnUsingDuration
        {
            get
            {
                return _MedcnUsingDuration;
            }
            set
            {
                OnMedcnUsingDurationChanging(value);
                ReportPropertyChanging("MedcnUsingDuration");
                _MedcnUsingDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnUsingDuration");
                OnMedcnUsingDurationChanged();
            }
        }
        private Nullable<global::System.Byte> _MedcnUsingDuration;
        partial void OnMedcnUsingDurationChanging(Nullable<global::System.Byte> value);
        partial void OnMedcnUsingDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminRouteCode
        {
            get
            {
                return _MedcnAdminRouteCode;
            }
            set
            {
                OnMedcnAdminRouteCodeChanging(value);
                ReportPropertyChanging("MedcnAdminRouteCode");
                _MedcnAdminRouteCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminRouteCode");
                OnMedcnAdminRouteCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminRouteCode;
        partial void OnMedcnAdminRouteCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminRouteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnInstructionCode
        {
            get
            {
                return _MedcnInstructionCode;
            }
            set
            {
                OnMedcnInstructionCodeChanging(value);
                ReportPropertyChanging("MedcnInstructionCode");
                _MedcnInstructionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnInstructionCode");
                OnMedcnInstructionCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnInstructionCode;
        partial void OnMedcnInstructionCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnInstructionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnNotesText
        {
            get
            {
                return _MedcnNotesText;
            }
            set
            {
                OnMedcnNotesTextChanging(value);
                ReportPropertyChanging("MedcnNotesText");
                _MedcnNotesText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnNotesText");
                OnMedcnNotesTextChanged();
            }
        }
        private global::System.String _MedcnNotesText;
        partial void OnMedcnNotesTextChanging(global::System.String value);
        partial void OnMedcnNotesTextChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp")]
        public DrPrescriptionTmp DrPrescriptionTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DrPrescriptionTmp> DrPrescriptionTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmps_DrPrescriptionTmp", "DrPrescriptionTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm")]
        public refCommonTerm refCommonTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm")]
        public refCommonTerm refCommonTerm1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm")]
        public refCommonTerm refCommonTerm2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm")]
        public refCommonTerm refCommonTerm3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm")]
        public refCommonTerm refCommonTerm4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "refCommonTerm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Drug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Drug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Drug object.
        /// </summary>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="drugCode">Initial value of the DrugCode property.</param>
        /// <param name="medcnNameText">Initial value of the MedcnNameText property.</param>
        /// <param name="v_ItemGroup">Initial value of the V_ItemGroup property.</param>
        /// <param name="drugKindID">Initial value of the DrugKindID property.</param>
        /// <param name="hIDrug">Initial value of the HIDrug property.</param>
        /// <param name="invMearsure">Initial value of the InvMearsure property.</param>
        /// <param name="buyCnvFactor">Initial value of the BuyCnvFactor property.</param>
        /// <param name="sellCnvFactor">Initial value of the SellCnvFactor property.</param>
        /// <param name="safeStock">Initial value of the SafeStock property.</param>
        /// <param name="minStock">Initial value of the MinStock property.</param>
        /// <param name="maxStock">Initial value of the MaxStock property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Drug CreateDrug(global::System.Int64 drugID, global::System.String drugCode, global::System.String medcnNameText, global::System.Int64 v_ItemGroup, global::System.Int64 drugKindID, global::System.Boolean hIDrug, global::System.Int64 invMearsure, global::System.Decimal buyCnvFactor, global::System.Decimal sellCnvFactor, global::System.Decimal safeStock, global::System.Decimal minStock, global::System.Decimal maxStock, global::System.Boolean stop, global::System.DateTime createdDate)
        {
            Drug drug = new Drug();
            drug.DrugID = drugID;
            drug.DrugCode = drugCode;
            drug.MedcnNameText = medcnNameText;
            drug.V_ItemGroup = v_ItemGroup;
            drug.DrugKindID = drugKindID;
            drug.HIDrug = hIDrug;
            drug.InvMearsure = invMearsure;
            drug.BuyCnvFactor = buyCnvFactor;
            drug.SellCnvFactor = sellCnvFactor;
            drug.SafeStock = safeStock;
            drug.MinStock = minStock;
            drug.MaxStock = maxStock;
            drug.Stop = stop;
            drug.CreatedDate = createdDate;
            return drug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                if (_DrugID != value)
                {
                    OnDrugIDChanging(value);
                    ReportPropertyChanging("DrugID");
                    _DrugID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugID");
                    OnDrugIDChanged();
                }
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugCode
        {
            get
            {
                return _DrugCode;
            }
            set
            {
                OnDrugCodeChanging(value);
                ReportPropertyChanging("DrugCode");
                _DrugCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DrugCode");
                OnDrugCodeChanged();
            }
        }
        private global::System.String _DrugCode;
        partial void OnDrugCodeChanging(global::System.String value);
        partial void OnDrugCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcnNameText
        {
            get
            {
                return _MedcnNameText;
            }
            set
            {
                OnMedcnNameTextChanging(value);
                ReportPropertyChanging("MedcnNameText");
                _MedcnNameText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedcnNameText");
                OnMedcnNameTextChanged();
            }
        }
        private global::System.String _MedcnNameText;
        partial void OnMedcnNameTextChanging(global::System.String value);
        partial void OnMedcnNameTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrugFullName
        {
            get
            {
                return _DrugFullName;
            }
            set
            {
                OnDrugFullNameChanging(value);
                ReportPropertyChanging("DrugFullName");
                _DrugFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrugFullName");
                OnDrugFullNameChanged();
            }
        }
        private global::System.String _DrugFullName;
        partial void OnDrugFullNameChanging(global::System.String value);
        partial void OnDrugFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrugContent
        {
            get
            {
                return _DrugContent;
            }
            set
            {
                OnDrugContentChanging(value);
                ReportPropertyChanging("DrugContent");
                _DrugContent = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrugContent");
                OnDrugContentChanged();
            }
        }
        private global::System.String _DrugContent;
        partial void OnDrugContentChanging(global::System.String value);
        partial void OnDrugContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnVehicleFormCode
        {
            get
            {
                return _MedcnVehicleFormCode;
            }
            set
            {
                OnMedcnVehicleFormCodeChanging(value);
                ReportPropertyChanging("MedcnVehicleFormCode");
                _MedcnVehicleFormCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnVehicleFormCode");
                OnMedcnVehicleFormCodeChanged();
            }
        }
        private global::System.String _MedcnVehicleFormCode;
        partial void OnMedcnVehicleFormCodeChanging(global::System.String value);
        partial void OnMedcnVehicleFormCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnAdminRouteCode
        {
            get
            {
                return _MedcnAdminRouteCode;
            }
            set
            {
                OnMedcnAdminRouteCodeChanging(value);
                ReportPropertyChanging("MedcnAdminRouteCode");
                _MedcnAdminRouteCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnAdminRouteCode");
                OnMedcnAdminRouteCodeChanged();
            }
        }
        private global::System.String _MedcnAdminRouteCode;
        partial void OnMedcnAdminRouteCodeChanging(global::System.String value);
        partial void OnMedcnAdminRouteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductCode
        {
            get
            {
                return _ProductCode;
            }
            set
            {
                OnProductCodeChanging(value);
                ReportPropertyChanging("ProductCode");
                _ProductCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductCode");
                OnProductCodeChanged();
            }
        }
        private global::System.String _ProductCode;
        partial void OnProductCodeChanging(global::System.String value);
        partial void OnProductCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ItemGroup
        {
            get
            {
                return _V_ItemGroup;
            }
            set
            {
                OnV_ItemGroupChanging(value);
                ReportPropertyChanging("V_ItemGroup");
                _V_ItemGroup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ItemGroup");
                OnV_ItemGroupChanged();
            }
        }
        private global::System.Int64 _V_ItemGroup;
        partial void OnV_ItemGroupChanging(global::System.Int64 value);
        partial void OnV_ItemGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugKindID
        {
            get
            {
                return _DrugKindID;
            }
            set
            {
                OnDrugKindIDChanging(value);
                ReportPropertyChanging("DrugKindID");
                _DrugKindID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugKindID");
                OnDrugKindIDChanged();
            }
        }
        private global::System.Int64 _DrugKindID;
        partial void OnDrugKindIDChanging(global::System.Int64 value);
        partial void OnDrugKindIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HIDrug
        {
            get
            {
                return _HIDrug;
            }
            set
            {
                OnHIDrugChanging(value);
                ReportPropertyChanging("HIDrug");
                _HIDrug = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIDrug");
                OnHIDrugChanged();
            }
        }
        private global::System.Boolean _HIDrug;
        partial void OnHIDrugChanging(global::System.Boolean value);
        partial void OnHIDrugChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsurKindID
        {
            get
            {
                return _InsurKindID;
            }
            set
            {
                OnInsurKindIDChanging(value);
                ReportPropertyChanging("InsurKindID");
                _InsurKindID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsurKindID");
                OnInsurKindIDChanged();
            }
        }
        private global::System.String _InsurKindID;
        partial void OnInsurKindIDChanging(global::System.String value);
        partial void OnInsurKindIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsurName
        {
            get
            {
                return _InsurName;
            }
            set
            {
                OnInsurNameChanging(value);
                ReportPropertyChanging("InsurName");
                _InsurName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsurName");
                OnInsurNameChanged();
            }
        }
        private global::System.String _InsurName;
        partial void OnInsurNameChanging(global::System.String value);
        partial void OnInsurNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedDrugID
        {
            get
            {
                return _MedDrugID;
            }
            set
            {
                OnMedDrugIDChanging(value);
                ReportPropertyChanging("MedDrugID");
                _MedDrugID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedDrugID");
                OnMedDrugIDChanged();
            }
        }
        private global::System.String _MedDrugID;
        partial void OnMedDrugIDChanging(global::System.String value);
        partial void OnMedDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedNumber
        {
            get
            {
                return _MedNumber;
            }
            set
            {
                OnMedNumberChanging(value);
                ReportPropertyChanging("MedNumber");
                _MedNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedNumber");
                OnMedNumberChanged();
            }
        }
        private global::System.String _MedNumber;
        partial void OnMedNumberChanging(global::System.String value);
        partial void OnMedNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProducerID
        {
            get
            {
                return _ProducerID;
            }
            set
            {
                OnProducerIDChanging(value);
                ReportPropertyChanging("ProducerID");
                _ProducerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProducerID");
                OnProducerIDChanged();
            }
        }
        private global::System.String _ProducerID;
        partial void OnProducerIDChanging(global::System.String value);
        partial void OnProducerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnDoseUnitCode
        {
            get
            {
                return _MedcnDoseUnitCode;
            }
            set
            {
                OnMedcnDoseUnitCodeChanging(value);
                ReportPropertyChanging("MedcnDoseUnitCode");
                _MedcnDoseUnitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnDoseUnitCode");
                OnMedcnDoseUnitCodeChanged();
            }
        }
        private global::System.String _MedcnDoseUnitCode;
        partial void OnMedcnDoseUnitCodeChanging(global::System.String value);
        partial void OnMedcnDoseUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InvMearsure
        {
            get
            {
                return _InvMearsure;
            }
            set
            {
                OnInvMearsureChanging(value);
                ReportPropertyChanging("InvMearsure");
                _InvMearsure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvMearsure");
                OnInvMearsureChanged();
            }
        }
        private global::System.Int64 _InvMearsure;
        partial void OnInvMearsureChanging(global::System.Int64 value);
        partial void OnInvMearsureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BuyMearsure
        {
            get
            {
                return _BuyMearsure;
            }
            set
            {
                OnBuyMearsureChanging(value);
                ReportPropertyChanging("BuyMearsure");
                _BuyMearsure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyMearsure");
                OnBuyMearsureChanged();
            }
        }
        private Nullable<global::System.Int64> _BuyMearsure;
        partial void OnBuyMearsureChanging(Nullable<global::System.Int64> value);
        partial void OnBuyMearsureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BuyCnvFactor
        {
            get
            {
                return _BuyCnvFactor;
            }
            set
            {
                OnBuyCnvFactorChanging(value);
                ReportPropertyChanging("BuyCnvFactor");
                _BuyCnvFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BuyCnvFactor");
                OnBuyCnvFactorChanged();
            }
        }
        private global::System.Decimal _BuyCnvFactor;
        partial void OnBuyCnvFactorChanging(global::System.Decimal value);
        partial void OnBuyCnvFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SellMearsure
        {
            get
            {
                return _SellMearsure;
            }
            set
            {
                OnSellMearsureChanging(value);
                ReportPropertyChanging("SellMearsure");
                _SellMearsure = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellMearsure");
                OnSellMearsureChanged();
            }
        }
        private Nullable<global::System.Int64> _SellMearsure;
        partial void OnSellMearsureChanging(Nullable<global::System.Int64> value);
        partial void OnSellMearsureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SellCnvFactor
        {
            get
            {
                return _SellCnvFactor;
            }
            set
            {
                OnSellCnvFactorChanging(value);
                ReportPropertyChanging("SellCnvFactor");
                _SellCnvFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellCnvFactor");
                OnSellCnvFactorChanged();
            }
        }
        private global::System.Decimal _SellCnvFactor;
        partial void OnSellCnvFactorChanging(global::System.Decimal value);
        partial void OnSellCnvFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal SafeStock
        {
            get
            {
                return _SafeStock;
            }
            set
            {
                OnSafeStockChanging(value);
                ReportPropertyChanging("SafeStock");
                _SafeStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SafeStock");
                OnSafeStockChanged();
            }
        }
        private global::System.Decimal _SafeStock;
        partial void OnSafeStockChanging(global::System.Decimal value);
        partial void OnSafeStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MinStock
        {
            get
            {
                return _MinStock;
            }
            set
            {
                OnMinStockChanging(value);
                ReportPropertyChanging("MinStock");
                _MinStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinStock");
                OnMinStockChanged();
            }
        }
        private global::System.Decimal _MinStock;
        partial void OnMinStockChanging(global::System.Decimal value);
        partial void OnMinStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MaxStock
        {
            get
            {
                return _MaxStock;
            }
            set
            {
                OnMaxStockChanging(value);
                ReportPropertyChanging("MaxStock");
                _MaxStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxStock");
                OnMaxStockChanged();
            }
        }
        private global::System.Decimal _MaxStock;
        partial void OnMaxStockChanging(global::System.Decimal value);
        partial void OnMaxStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrugImage
        {
            get
            {
                return _DrugImage;
            }
            set
            {
                OnDrugImageChanging(value);
                ReportPropertyChanging("DrugImage");
                _DrugImage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrugImage");
                OnDrugImageChanged();
            }
        }
        private global::System.String _DrugImage;
        partial void OnDrugImageChanging(global::System.String value);
        partial void OnDrugImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private global::System.String _LastUpdBy;
        partial void OnLastUpdByChanging(global::System.String value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AcPrincDrug_Drug", "AcPrincDrug")]
        public EntityCollection<AcPrincDrug> AcPrincDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AcPrincDrug>("SureHisModel.FK_AcPrincDrug_Drug", "AcPrincDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AcPrincDrug>("SureHisModel.FK_AcPrincDrug_Drug", "AcPrincDrug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AntagonistDrug_Drug", "AntagonistDrug")]
        public EntityCollection<AntagonistDrug> AntagonistDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AntagonistDrug>("SureHisModel.FK_AntagonistDrug_Drug", "AntagonistDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AntagonistDrug>("SureHisModel.FK_AntagonistDrug_Drug", "AntagonistDrug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AntagonistDrug_Drug_02", "AntagonistDrug")]
        public EntityCollection<AntagonistDrug> AntagonistDrug1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AntagonistDrug>("SureHisModel.FK_AntagonistDrug_Drug_02", "AntagonistDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AntagonistDrug>("SureHisModel.FK_AntagonistDrug_Drug_02", "AntagonistDrug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DDI_Drug", "DDI")]
        public EntityCollection<DDI> DDI
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DDI>("SureHisModel.FK_DDI_Drug", "DDI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DDI>("SureHisModel.FK_DDI_Drug", "DDI", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DDI_Drug_02", "DDI")]
        public EntityCollection<DDI> DDI1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DDI>("SureHisModel.FK_DDI_Drug_02", "DDI");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DDI>("SureHisModel.FK_DDI_Drug_02", "DDI", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedication_Drug", "DonorMedication")]
        public EntityCollection<DonorMedication> DonorMedication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonorMedication>("SureHisModel.FK_DonorMedication_Drug", "DonorMedication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonorMedication>("SureHisModel.FK_DonorMedication_Drug", "DonorMedication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineTmp_Drug", "DrMedicineTmp")]
        public EntityCollection<DrMedicineTmp> DrMedicineTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrMedicineTmp>("SureHisModel.FK_DrMedicineTmp_Drug", "DrMedicineTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrMedicineTmp>("SureHisModel.FK_DrMedicineTmp_Drug", "DrMedicineTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_DrugKind", "refDrugKind")]
        public refDrugKind refDrugKind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_Drug_DrugKind", "refDrugKind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_Drug_DrugKind", "refDrugKind").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDrugKind> refDrugKindReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_Drug_DrugKind", "refDrugKind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDrugKind>("SureHisModel.FK_Drug_DrugKind", "refDrugKind", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_InsurKind", "refInsurKind")]
        public refInsurKind refInsurKind
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInsurKind>("SureHisModel.FK_Drug_InsurKind", "refInsurKind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInsurKind>("SureHisModel.FK_Drug_InsurKind", "refInsurKind").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refInsurKind> refInsurKindReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInsurKind>("SureHisModel.FK_Drug_InsurKind", "refInsurKind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refInsurKind>("SureHisModel.FK_Drug_InsurKind", "refInsurKind", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refCountry", "refCountry")]
        public refCountry refCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Drug_refCountry", "refCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Drug_refCountry", "refCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCountry> refCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Drug_refCountry", "refCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCountry>("SureHisModel.FK_Drug_refCountry", "refCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute")]
        public refMedcnAdminRoute refMedcnAdminRoute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnAdminRoute>("SureHisModel.FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnAdminRoute>("SureHisModel.FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedcnAdminRoute> refMedcnAdminRouteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnAdminRoute>("SureHisModel.FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedcnAdminRoute>("SureHisModel.FK_Drug_refMedcnAdminRoute", "refMedcnAdminRoute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm")]
        public refMedcnVehicleForm refMedcnVehicleForm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnVehicleForm>("SureHisModel.FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnVehicleForm>("SureHisModel.FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedcnVehicleForm> refMedcnVehicleFormReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedcnVehicleForm>("SureHisModel.FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedcnVehicleForm>("SureHisModel.FK_Drug_refMedcnVehicleForm", "refMedcnVehicleForm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasure1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasure2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_Drug", "DrugConfign")]
        public EntityCollection<DrugConfign> DrugConfign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_Drug", "DrugConfign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_Drug", "DrugConfign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_Drug_02", "DrugConfign")]
        public EntityCollection<DrugConfign> DrugConfign1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_Drug_02", "DrugConfign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_Drug_02", "DrugConfign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugDepartment_Drug", "DrugInDepartment")]
        public EntityCollection<DrugInDepartment> DrugInDepartment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugInDepartment>("SureHisModel.FK_DrugDepartment_Drug", "DrugInDepartment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugInDepartment>("SureHisModel.FK_DrugDepartment_Drug", "DrugInDepartment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugPrice_Drug", "DrugPrice")]
        public EntityCollection<DrugPrice> DrugPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugPrice>("SureHisModel.FK_DrugPrice_Drug", "DrugPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugPrice>("SureHisModel.FK_DrugPrice_Drug", "DrugPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_Drug", "InOutwardDrug")]
        public EntityCollection<InOutwardDrug> InOutwardDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_Drug", "InOutwardDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_Drug", "InOutwardDrug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_Drug", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_Drug", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_Drug", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ProvidableDrugs_Drug", "ProvidableDrugs")]
        public EntityCollection<ProvidableDrugs> ProvidableDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProvidableDrugs>("SureHisModel.FK_ProvidableDrugs_Drug", "ProvidableDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProvidableDrugs>("SureHisModel.FK_ProvidableDrugs_Drug", "ProvidableDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrugConfign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugConfign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugConfign object.
        /// </summary>
        /// <param name="configDrugID">Initial value of the ConfigDrugID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="rDrugID">Initial value of the RDrugID property.</param>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        /// <param name="cnvFactor">Initial value of the CnvFactor property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="sysDate">Initial value of the SysDate property.</param>
        public static DrugConfign CreateDrugConfign(global::System.Int64 configDrugID, global::System.Int64 drugID, global::System.Int64 rDrugID, global::System.Int64 uOMID, global::System.Decimal cnvFactor, global::System.Decimal quantity, global::System.DateTime sysDate)
        {
            DrugConfign drugConfign = new DrugConfign();
            drugConfign.ConfigDrugID = configDrugID;
            drugConfign.DrugID = drugID;
            drugConfign.RDrugID = rDrugID;
            drugConfign.UOMID = uOMID;
            drugConfign.CnvFactor = cnvFactor;
            drugConfign.Quantity = quantity;
            drugConfign.SysDate = sysDate;
            return drugConfign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ConfigDrugID
        {
            get
            {
                return _ConfigDrugID;
            }
            set
            {
                if (_ConfigDrugID != value)
                {
                    OnConfigDrugIDChanging(value);
                    ReportPropertyChanging("ConfigDrugID");
                    _ConfigDrugID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigDrugID");
                    OnConfigDrugIDChanged();
                }
            }
        }
        private global::System.Int64 _ConfigDrugID;
        partial void OnConfigDrugIDChanging(global::System.Int64 value);
        partial void OnConfigDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RDrugID
        {
            get
            {
                return _RDrugID;
            }
            set
            {
                OnRDrugIDChanging(value);
                ReportPropertyChanging("RDrugID");
                _RDrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RDrugID");
                OnRDrugIDChanged();
            }
        }
        private global::System.Int64 _RDrugID;
        partial void OnRDrugIDChanging(global::System.Int64 value);
        partial void OnRDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private global::System.Int64 _UOMID;
        partial void OnUOMIDChanging(global::System.Int64 value);
        partial void OnUOMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CnvFactor
        {
            get
            {
                return _CnvFactor;
            }
            set
            {
                OnCnvFactorChanging(value);
                ReportPropertyChanging("CnvFactor");
                _CnvFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CnvFactor");
                OnCnvFactorChanged();
            }
        }
        private global::System.Decimal _CnvFactor;
        partial void OnCnvFactorChanging(global::System.Decimal value);
        partial void OnCnvFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Decimal _Quantity;
        partial void OnQuantityChanging(global::System.Decimal value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SysDate
        {
            get
            {
                return _SysDate;
            }
            set
            {
                OnSysDateChanging(value);
                ReportPropertyChanging("SysDate");
                _SysDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SysDate");
                OnSysDateChanged();
            }
        }
        private global::System.DateTime _SysDate;
        partial void OnSysDateChanging(global::System.DateTime value);
        partial void OnSysDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_Drug_02", "Drug")]
        public Drug Drug1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug_02", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug_02", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> Drug1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug_02", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DrugConfign_Drug_02", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrugInDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugInDepartment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugInDepartment object.
        /// </summary>
        /// <param name="drugDepID">Initial value of the DrugDepID property.</param>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="baseQty">Initial value of the BaseQty property.</param>
        public static DrugInDepartment CreateDrugInDepartment(global::System.Int64 drugDepID, global::System.Int64 deptID, global::System.Int64 drugID, global::System.Double baseQty)
        {
            DrugInDepartment drugInDepartment = new DrugInDepartment();
            drugInDepartment.DrugDepID = drugDepID;
            drugInDepartment.DeptID = deptID;
            drugInDepartment.DrugID = drugID;
            drugInDepartment.BaseQty = baseQty;
            return drugInDepartment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugDepID
        {
            get
            {
                return _DrugDepID;
            }
            set
            {
                if (_DrugDepID != value)
                {
                    OnDrugDepIDChanging(value);
                    ReportPropertyChanging("DrugDepID");
                    _DrugDepID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugDepID");
                    OnDrugDepIDChanged();
                }
            }
        }
        private global::System.Int64 _DrugDepID;
        partial void OnDrugDepIDChanging(global::System.Int64 value);
        partial void OnDrugDepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private global::System.Int64 _DeptID;
        partial void OnDeptIDChanging(global::System.Int64 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double BaseQty
        {
            get
            {
                return _BaseQty;
            }
            set
            {
                OnBaseQtyChanging(value);
                ReportPropertyChanging("BaseQty");
                _BaseQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BaseQty");
                OnBaseQtyChanged();
            }
        }
        private global::System.Double _BaseQty;
        partial void OnBaseQtyChanging(global::System.Double value);
        partial void OnBaseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _NoEffect;
        partial void OnNoEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnNoEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugDepartment_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugDepartment_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugDepartment_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugDepartment_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DrugDepartment_Drug", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="DrugPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DrugPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DrugPrice object.
        /// </summary>
        /// <param name="drugPriceID">Initial value of the DrugPriceID property.</param>
        /// <param name="priceListID">Initial value of the PriceListID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        public static DrugPrice CreateDrugPrice(global::System.Int64 drugPriceID, global::System.Int64 priceListID, global::System.Int64 drugID)
        {
            DrugPrice drugPrice = new DrugPrice();
            drugPrice.DrugPriceID = drugPriceID;
            drugPrice.PriceListID = priceListID;
            drugPrice.DrugID = drugID;
            return drugPrice;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugPriceID
        {
            get
            {
                return _DrugPriceID;
            }
            set
            {
                if (_DrugPriceID != value)
                {
                    OnDrugPriceIDChanging(value);
                    ReportPropertyChanging("DrugPriceID");
                    _DrugPriceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugPriceID");
                    OnDrugPriceIDChanged();
                }
            }
        }
        private global::System.Int64 _DrugPriceID;
        partial void OnDrugPriceIDChanging(global::System.Int64 value);
        partial void OnDrugPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PriceListID
        {
            get
            {
                return _PriceListID;
            }
            set
            {
                OnPriceListIDChanging(value);
                ReportPropertyChanging("PriceListID");
                _PriceListID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PriceListID");
                OnPriceListIDChanged();
            }
        }
        private global::System.Int64 _PriceListID;
        partial void OnPriceListIDChanging(global::System.Int64 value);
        partial void OnPriceListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SellPrice
        {
            get
            {
                return _SellPrice;
            }
            set
            {
                OnSellPriceChanging(value);
                ReportPropertyChanging("SellPrice");
                _SellPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellPrice");
                OnSellPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _SellPrice;
        partial void OnSellPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnSellPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> HIPrice
        {
            get
            {
                return _HIPrice;
            }
            set
            {
                OnHIPriceChanging(value);
                ReportPropertyChanging("HIPrice");
                _HIPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIPrice");
                OnHIPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _HIPrice;
        partial void OnHIPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnHIPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsFree
        {
            get
            {
                return _IsFree;
            }
            set
            {
                OnIsFreeChanging(value);
                ReportPropertyChanging("IsFree");
                _IsFree = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFree");
                OnIsFreeChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsFree;
        partial void OnIsFreeChanging(Nullable<global::System.Boolean> value);
        partial void OnIsFreeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _NoEffect;
        partial void OnNoEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnNoEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugPrice_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugPrice_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugPrice_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_DrugPrice_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_DrugPrice_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugPrice_PriceList", "PriceList")]
        public PriceList PriceList
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("SureHisModel.FK_DrugPrice_PriceList", "PriceList").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("SureHisModel.FK_DrugPrice_PriceList", "PriceList").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PriceList> PriceListReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PriceList>("SureHisModel.FK_DrugPrice_PriceList", "PriceList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PriceList>("SureHisModel.FK_DrugPrice_PriceList", "PriceList", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EduLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EduLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EduLevel object.
        /// </summary>
        /// <param name="eduLevelID">Initial value of the EduLevelID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static EduLevel CreateEduLevel(global::System.Int64 eduLevelID, global::System.Int64 personID)
        {
            EduLevel eduLevel = new EduLevel();
            eduLevel.EduLevelID = eduLevelID;
            eduLevel.PersonID = personID;
            return eduLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EduLevelID
        {
            get
            {
                return _EduLevelID;
            }
            set
            {
                if (_EduLevelID != value)
                {
                    OnEduLevelIDChanging(value);
                    ReportPropertyChanging("EduLevelID");
                    _EduLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EduLevelID");
                    OnEduLevelIDChanged();
                }
            }
        }
        private global::System.Int64 _EduLevelID;
        partial void OnEduLevelIDChanging(global::System.Int64 value);
        partial void OnEduLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int64 _PersonID;
        partial void OnPersonIDChanging(global::System.Int64 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InstitudeID
        {
            get
            {
                return _InstitudeID;
            }
            set
            {
                OnInstitudeIDChanging(value);
                ReportPropertyChanging("InstitudeID");
                _InstitudeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstitudeID");
                OnInstitudeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InstitudeID;
        partial void OnInstitudeIDChanging(Nullable<global::System.Int64> value);
        partial void OnInstitudeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssuedDate;
        partial void OnIssuedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiredDate
        {
            get
            {
                return _ExpiredDate;
            }
            set
            {
                OnExpiredDateChanging(value);
                ReportPropertyChanging("ExpiredDate");
                _ExpiredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiredDate");
                OnExpiredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiredDate;
        partial void OnExpiredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CertificateCode
        {
            get
            {
                return _CertificateCode;
            }
            set
            {
                OnCertificateCodeChanging(value);
                ReportPropertyChanging("CertificateCode");
                _CertificateCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CertificateCode");
                OnCertificateCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _CertificateCode;
        partial void OnCertificateCodeChanging(Nullable<global::System.Int64> value);
        partial void OnCertificateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificateNo
        {
            get
            {
                return _CertificateNo;
            }
            set
            {
                OnCertificateNoChanging(value);
                ReportPropertyChanging("CertificateNo");
                _CertificateNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificateNo");
                OnCertificateNoChanged();
            }
        }
        private global::System.String _CertificateNo;
        partial void OnCertificateNoChanging(global::System.String value);
        partial void OnCertificateNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlaceOfIssue
        {
            get
            {
                return _PlaceOfIssue;
            }
            set
            {
                OnPlaceOfIssueChanging(value);
                ReportPropertyChanging("PlaceOfIssue");
                _PlaceOfIssue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlaceOfIssue");
                OnPlaceOfIssueChanged();
            }
        }
        private global::System.String _PlaceOfIssue;
        partial void OnPlaceOfIssueChanging(global::System.String value);
        partial void OnPlaceOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Issuer
        {
            get
            {
                return _Issuer;
            }
            set
            {
                OnIssuerChanging(value);
                ReportPropertyChanging("Issuer");
                _Issuer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Issuer");
                OnIssuerChanged();
            }
        }
        private global::System.String _Issuer;
        partial void OnIssuerChanging(global::System.String value);
        partial void OnIssuerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingType
        {
            get
            {
                return _TrainingType;
            }
            set
            {
                OnTrainingTypeChanging(value);
                ReportPropertyChanging("TrainingType");
                _TrainingType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingType");
                OnTrainingTypeChanged();
            }
        }
        private global::System.String _TrainingType;
        partial void OnTrainingTypeChanging(global::System.String value);
        partial void OnTrainingTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingYear
        {
            get
            {
                return _TrainingYear;
            }
            set
            {
                OnTrainingYearChanging(value);
                ReportPropertyChanging("TrainingYear");
                _TrainingYear = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingYear");
                OnTrainingYearChanged();
            }
        }
        private global::System.String _TrainingYear;
        partial void OnTrainingYearChanging(global::System.String value);
        partial void OnTrainingYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TrainingDesc
        {
            get
            {
                return _TrainingDesc;
            }
            set
            {
                OnTrainingDescChanging(value);
                ReportPropertyChanging("TrainingDesc");
                _TrainingDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TrainingDesc");
                OnTrainingDescChanged();
            }
        }
        private global::System.String _TrainingDesc;
        partial void OnTrainingDescChanging(global::System.String value);
        partial void OnTrainingDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_EduLevel_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_EduLevel_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_EduLevel_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_EduLevel_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_refCertification_", "refCertification")]
        public refCertification refCertification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCertification>("SureHisModel.FK_EduLevel_refCertification_", "refCertification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCertification>("SureHisModel.FK_EduLevel_refCertification_", "refCertification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCertification> refCertificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCertification>("SureHisModel.FK_EduLevel_refCertification_", "refCertification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCertification>("SureHisModel.FK_EduLevel_refCertification_", "refCertification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_refInstUniversity", "refInstUniversity")]
        public refInstUniversity refInstUniversity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInstUniversity>("SureHisModel.FK_EduLevel_refInstUniversity", "refInstUniversity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInstUniversity>("SureHisModel.FK_EduLevel_refInstUniversity", "refInstUniversity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refInstUniversity> refInstUniversityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refInstUniversity>("SureHisModel.FK_EduLevel_refInstUniversity", "refInstUniversity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refInstUniversity>("SureHisModel.FK_EduLevel_refInstUniversity", "refInstUniversity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EmpAllocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpAllocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpAllocation object.
        /// </summary>
        /// <param name="empWardAssgID">Initial value of the EmpWardAssgID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="wDID">Initial value of the WDID property.</param>
        /// <param name="fromDate">Initial value of the FromDate property.</param>
        public static EmpAllocation CreateEmpAllocation(global::System.Int64 empWardAssgID, global::System.Int64 empID, global::System.Int64 wDID, global::System.DateTime fromDate)
        {
            EmpAllocation empAllocation = new EmpAllocation();
            empAllocation.EmpWardAssgID = empWardAssgID;
            empAllocation.EmpID = empID;
            empAllocation.WDID = wDID;
            empAllocation.FromDate = fromDate;
            return empAllocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpWardAssgID
        {
            get
            {
                return _EmpWardAssgID;
            }
            set
            {
                if (_EmpWardAssgID != value)
                {
                    OnEmpWardAssgIDChanging(value);
                    ReportPropertyChanging("EmpWardAssgID");
                    _EmpWardAssgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmpWardAssgID");
                    OnEmpWardAssgIDChanged();
                }
            }
        }
        private global::System.Int64 _EmpWardAssgID;
        partial void OnEmpWardAssgIDChanging(global::System.Int64 value);
        partial void OnEmpWardAssgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private global::System.Int64 _WDID;
        partial void OnWDIDChanging(global::System.Int64 value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private global::System.DateTime _FromDate;
        partial void OnFromDateChanging(global::System.DateTime value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpAllocation_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpAllocation_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpAllocation_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpAllocation_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_EmpAllocation_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpAllocation_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_EmpAllocation_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_EmpAllocation_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_EmpAllocation_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_EmpAllocation_WardInDept", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="empCode">Initial value of the EmpCode property.</param>
        /// <param name="pstnID">Initial value of the PstnID property.</param>
        /// <param name="employDate">Initial value of the EmployDate property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static Employee CreateEmployee(global::System.Int64 empID, global::System.String empCode, global::System.Int64 pstnID, global::System.DateTime employDate, global::System.DateTime modifiedDate)
        {
            Employee employee = new Employee();
            employee.EmpID = empID;
            employee.EmpCode = empCode;
            employee.PstnID = pstnID;
            employee.EmployDate = employDate;
            employee.ModifiedDate = modifiedDate;
            return employee;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                if (_EmpID != value)
                {
                    OnEmpIDChanging(value);
                    ReportPropertyChanging("EmpID");
                    _EmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmpID");
                    OnEmpIDChanged();
                }
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmpCode
        {
            get
            {
                return _EmpCode;
            }
            set
            {
                OnEmpCodeChanging(value);
                ReportPropertyChanging("EmpCode");
                _EmpCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmpCode");
                OnEmpCodeChanged();
            }
        }
        private global::System.String _EmpCode;
        partial void OnEmpCodeChanging(global::System.String value);
        partial void OnEmpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosID;
        partial void OnHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JTID
        {
            get
            {
                return _JTID;
            }
            set
            {
                OnJTIDChanging(value);
                ReportPropertyChanging("JTID");
                _JTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JTID");
                OnJTIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JTID;
        partial void OnJTIDChanging(Nullable<global::System.Int64> value);
        partial void OnJTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PstnID
        {
            get
            {
                return _PstnID;
            }
            set
            {
                OnPstnIDChanging(value);
                ReportPropertyChanging("PstnID");
                _PstnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PstnID");
                OnPstnIDChanged();
            }
        }
        private global::System.Int64 _PstnID;
        partial void OnPstnIDChanging(global::System.Int64 value);
        partial void OnPstnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AcademicCode
        {
            get
            {
                return _AcademicCode;
            }
            set
            {
                OnAcademicCodeChanging(value);
                ReportPropertyChanging("AcademicCode");
                _AcademicCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AcademicCode");
                OnAcademicCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _AcademicCode;
        partial void OnAcademicCodeChanging(Nullable<global::System.Int32> value);
        partial void OnAcademicCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EmployDate
        {
            get
            {
                return _EmployDate;
            }
            set
            {
                OnEmployDateChanging(value);
                ReportPropertyChanging("EmployDate");
                _EmployDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployDate");
                OnEmployDateChanged();
            }
        }
        private global::System.DateTime _EmployDate;
        partial void OnEmployDateChanging(global::System.DateTime value);
        partial void OnEmployDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LeftDate
        {
            get
            {
                return _LeftDate;
            }
            set
            {
                OnLeftDateChanging(value);
                ReportPropertyChanging("LeftDate");
                _LeftDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeftDate");
                OnLeftDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LeftDate;
        partial void OnLeftDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLeftDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosDeptID;
        partial void OnHosDeptIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosDeptIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdvancedSpecialist_Employee", "AdvancedSpecialist")]
        public EntityCollection<AdvancedSpecialist> AdvancedSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvancedSpecialist>("SureHisModel.FK_AdvancedSpecialist_Employee", "AdvancedSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvancedSpecialist>("SureHisModel.FK_AdvancedSpecialist_Employee", "AdvancedSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_Employee", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_Employee", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_Employee", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignmentSchedule_Employee", "AssignmentSchedule")]
        public EntityCollection<AssignmentSchedule> AssignmentSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentSchedule>("SureHisModel.FK_AssignmentSchedule_Employee", "AssignmentSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentSchedule>("SureHisModel.FK_AssignmentSchedule_Employee", "AssignmentSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrAdviceTmp_Employee", "DrAdviceTmp")]
        public EntityCollection<DrAdviceTmp> DrAdviceTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrAdviceTmp>("SureHisModel.FK_DrAdviceTmp_Employee", "DrAdviceTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrAdviceTmp>("SureHisModel.FK_DrAdviceTmp_Employee", "DrAdviceTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrMedicineTmp_Employee", "DrMedicineTmp")]
        public EntityCollection<DrMedicineTmp> DrMedicineTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrMedicineTmp>("SureHisModel.FK_DrMedicineTmp_Employee", "DrMedicineTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrMedicineTmp>("SureHisModel.FK_DrMedicineTmp_Employee", "DrMedicineTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmp_Employee", "DrPrescriptionTmp")]
        public EntityCollection<DrPrescriptionTmp> DrPrescriptionTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmp_Employee", "DrPrescriptionTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmp_Employee", "DrPrescriptionTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpAllocation_Employee", "EmpAllocation")]
        public EntityCollection<EmpAllocation> EmpAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpAllocation>("SureHisModel.FK_EmpAllocation_Employee", "EmpAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpAllocation>("SureHisModel.FK_EmpAllocation_Employee", "EmpAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_HCEnterprise", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_Employee_HCEnterprise", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_Employee_HCEnterprise", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_Employee_HCEnterprise", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_Employee_HCEnterprise", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_Employee_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_Employee_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_Employee_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_Employee_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employee_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employee_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employee_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_Employee_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_refAcademicTile", "refAcademicTile")]
        public refAcademicTile refAcademicTile
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAcademicTile>("SureHisModel.FK_Employee_refAcademicTile", "refAcademicTile").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAcademicTile>("SureHisModel.FK_Employee_refAcademicTile", "refAcademicTile").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAcademicTile> refAcademicTileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAcademicTile>("SureHisModel.FK_Employee_refAcademicTile", "refAcademicTile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAcademicTile>("SureHisModel.FK_Employee_refAcademicTile", "refAcademicTile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_refJobTitle", "refJobTitle")]
        public refJobTitle refJobTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_Employee_refJobTitle", "refJobTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_Employee_refJobTitle", "refJobTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refJobTitle> refJobTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_Employee_refJobTitle", "refJobTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refJobTitle>("SureHisModel.FK_Employee_refJobTitle", "refJobTitle", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeAnnualLeave_Employee", "EmployeeAnnualLeave")]
        public EntityCollection<EmployeeAnnualLeave> EmployeeAnnualLeave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeAnnualLeave>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "EmployeeAnnualLeave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeAnnualLeave>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "EmployeeAnnualLeave", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeLeaveTaken_Employee", "EmployeeLeaveTaken")]
        public EntityCollection<EmployeeLeaveTaken> EmployeeLeaveTaken
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeLeaveTaken>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "EmployeeLeaveTaken");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeLeaveTaken>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "EmployeeLeaveTaken", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_Employee", "EmpWorkSchedule")]
        public EntityCollection<EmpWorkSchedule> EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_Employee", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_Employee", "EmpWorkSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceRegQueue_Employee", "InsuranceRegQueue")]
        public EntityCollection<InsuranceRegQueue> InsuranceRegQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsuranceRegQueue>("SureHisModel.FK_InsuranceRegQueue_Employee", "InsuranceRegQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsuranceRegQueue>("SureHisModel.FK_InsuranceRegQueue_Employee", "InsuranceRegQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobHistory_Employee", "JobHistory")]
        public EntityCollection<JobHistory> JobHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobHistory>("SureHisModel.FK_JobHistory_Employee", "JobHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobHistory>("SureHisModel.FK_JobHistory_Employee", "JobHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonalProperty_Employee", "PersonalProperty")]
        public EntityCollection<PersonalProperty> PersonalProperty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonalProperty>("SureHisModel.FK_PersonalProperty_Employee", "PersonalProperty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonalProperty>("SureHisModel.FK_PersonalProperty_Employee", "PersonalProperty", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegQueue_Employee", "RegQueue")]
        public EntityCollection<RegQueue> RegQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegQueue>("SureHisModel.FK_RegQueue_Employee", "RegQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegQueue>("SureHisModel.FK_RegQueue_Employee", "RegQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ResourceLog_Employee", "ResourceLog")]
        public EntityCollection<ResourceLog> ResourceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceLog>("SureHisModel.FK_ResourceLog_Employee", "ResourceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceLog>("SureHisModel.FK_ResourceLog_Employee", "ResourceLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SocialAndHealthInsurance_Employee", "SocialAndHealthInsurance")]
        public EntityCollection<SocialAndHealthInsurance> SocialAndHealthInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SocialAndHealthInsurance>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "SocialAndHealthInsurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SocialAndHealthInsurance>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "SocialAndHealthInsurance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestBlood_Employee", "TestBlood")]
        public EntityCollection<TestBlood> TestBlood
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestBlood>("SureHisModel.FK_TestBlood_Employee", "TestBlood");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestBlood>("SureHisModel.FK_TestBlood_Employee", "TestBlood", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee", "TestOnPatientSpecimen")]
        public EntityCollection<TestOnPatientSpecimen> TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "TestOnPatientSpecimen", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee_02", "TestOnPatientSpecimen")]
        public EntityCollection<TestOnPatientSpecimen> TestOnPatientSpecimen1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EmployeeAnnualLeave")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeAnnualLeave : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeAnnualLeave object.
        /// </summary>
        /// <param name="empALID">Initial value of the EmpALID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        /// <param name="yearNumber">Initial value of the YearNumber property.</param>
        /// <param name="tAbsID">Initial value of the TAbsID property.</param>
        /// <param name="leaveDaysAllowed">Initial value of the LeaveDaysAllowed property.</param>
        /// <param name="leaveCumulativeDaysTaken">Initial value of the LeaveCumulativeDaysTaken property.</param>
        public static EmployeeAnnualLeave CreateEmployeeAnnualLeave(global::System.Int64 empALID, global::System.Int64 empID, global::System.Int16 yearNumber, global::System.Byte tAbsID, global::System.Byte leaveDaysAllowed, global::System.Byte leaveCumulativeDaysTaken)
        {
            EmployeeAnnualLeave employeeAnnualLeave = new EmployeeAnnualLeave();
            employeeAnnualLeave.EmpALID = empALID;
            employeeAnnualLeave.EmpID = empID;
            employeeAnnualLeave.YearNumber = yearNumber;
            employeeAnnualLeave.TAbsID = tAbsID;
            employeeAnnualLeave.LeaveDaysAllowed = leaveDaysAllowed;
            employeeAnnualLeave.LeaveCumulativeDaysTaken = leaveCumulativeDaysTaken;
            return employeeAnnualLeave;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpALID
        {
            get
            {
                return _EmpALID;
            }
            set
            {
                if (_EmpALID != value)
                {
                    OnEmpALIDChanging(value);
                    ReportPropertyChanging("EmpALID");
                    _EmpALID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmpALID");
                    OnEmpALIDChanged();
                }
            }
        }
        private global::System.Int64 _EmpALID;
        partial void OnEmpALIDChanging(global::System.Int64 value);
        partial void OnEmpALIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 YearNumber
        {
            get
            {
                return _YearNumber;
            }
            set
            {
                OnYearNumberChanging(value);
                ReportPropertyChanging("YearNumber");
                _YearNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearNumber");
                OnYearNumberChanged();
            }
        }
        private global::System.Int16 _YearNumber;
        partial void OnYearNumberChanging(global::System.Int16 value);
        partial void OnYearNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdatedDate
        {
            get
            {
                return _UpdatedDate;
            }
            set
            {
                OnUpdatedDateChanging(value);
                ReportPropertyChanging("UpdatedDate");
                _UpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdatedDate");
                OnUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdatedDate;
        partial void OnUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TAbsID
        {
            get
            {
                return _TAbsID;
            }
            set
            {
                OnTAbsIDChanging(value);
                ReportPropertyChanging("TAbsID");
                _TAbsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TAbsID");
                OnTAbsIDChanged();
            }
        }
        private global::System.Byte _TAbsID;
        partial void OnTAbsIDChanging(global::System.Byte value);
        partial void OnTAbsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte LeaveDaysAllowed
        {
            get
            {
                return _LeaveDaysAllowed;
            }
            set
            {
                OnLeaveDaysAllowedChanging(value);
                ReportPropertyChanging("LeaveDaysAllowed");
                _LeaveDaysAllowed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveDaysAllowed");
                OnLeaveDaysAllowedChanged();
            }
        }
        private global::System.Byte _LeaveDaysAllowed;
        partial void OnLeaveDaysAllowedChanging(global::System.Byte value);
        partial void OnLeaveDaysAllowedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte LeaveCumulativeDaysTaken
        {
            get
            {
                return _LeaveCumulativeDaysTaken;
            }
            set
            {
                OnLeaveCumulativeDaysTakenChanging(value);
                ReportPropertyChanging("LeaveCumulativeDaysTaken");
                _LeaveCumulativeDaysTaken = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveCumulativeDaysTaken");
                OnLeaveCumulativeDaysTakenChanged();
            }
        }
        private global::System.Byte _LeaveCumulativeDaysTaken;
        partial void OnLeaveCumulativeDaysTakenChanging(global::System.Byte value);
        partial void OnLeaveCumulativeDaysTakenChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeAnnualLeave_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_EmployeeAnnualLeave_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent")]
        public refTypeAbsent refTypeAbsent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTypeAbsent> refTypeAbsentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "refTypeAbsent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EmployeeLeaveTaken")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeLeaveTaken : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeLeaveTaken object.
        /// </summary>
        /// <param name="lPeriodID">Initial value of the LPeriodID property.</param>
        /// <param name="tAbsID">Initial value of the TAbsID property.</param>
        /// <param name="v_LeavePeriodType">Initial value of the V_LeavePeriodType property.</param>
        /// <param name="leaveFromDate">Initial value of the LeaveFromDate property.</param>
        /// <param name="leaveToDate">Initial value of the LeaveToDate property.</param>
        public static EmployeeLeaveTaken CreateEmployeeLeaveTaken(global::System.Int64 lPeriodID, global::System.Byte tAbsID, global::System.Int64 v_LeavePeriodType, global::System.DateTime leaveFromDate, global::System.DateTime leaveToDate)
        {
            EmployeeLeaveTaken employeeLeaveTaken = new EmployeeLeaveTaken();
            employeeLeaveTaken.LPeriodID = lPeriodID;
            employeeLeaveTaken.TAbsID = tAbsID;
            employeeLeaveTaken.V_LeavePeriodType = v_LeavePeriodType;
            employeeLeaveTaken.LeaveFromDate = leaveFromDate;
            employeeLeaveTaken.LeaveToDate = leaveToDate;
            return employeeLeaveTaken;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LPeriodID
        {
            get
            {
                return _LPeriodID;
            }
            set
            {
                if (_LPeriodID != value)
                {
                    OnLPeriodIDChanging(value);
                    ReportPropertyChanging("LPeriodID");
                    _LPeriodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LPeriodID");
                    OnLPeriodIDChanged();
                }
            }
        }
        private global::System.Int64 _LPeriodID;
        partial void OnLPeriodIDChanging(global::System.Int64 value);
        partial void OnLPeriodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TAbsID
        {
            get
            {
                return _TAbsID;
            }
            set
            {
                OnTAbsIDChanging(value);
                ReportPropertyChanging("TAbsID");
                _TAbsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TAbsID");
                OnTAbsIDChanged();
            }
        }
        private global::System.Byte _TAbsID;
        partial void OnTAbsIDChanging(global::System.Byte value);
        partial void OnTAbsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_LeavePeriodType
        {
            get
            {
                return _V_LeavePeriodType;
            }
            set
            {
                OnV_LeavePeriodTypeChanging(value);
                ReportPropertyChanging("V_LeavePeriodType");
                _V_LeavePeriodType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_LeavePeriodType");
                OnV_LeavePeriodTypeChanged();
            }
        }
        private global::System.Int64 _V_LeavePeriodType;
        partial void OnV_LeavePeriodTypeChanging(global::System.Int64 value);
        partial void OnV_LeavePeriodTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaveFromDate
        {
            get
            {
                return _LeaveFromDate;
            }
            set
            {
                OnLeaveFromDateChanging(value);
                ReportPropertyChanging("LeaveFromDate");
                _LeaveFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveFromDate");
                OnLeaveFromDateChanged();
            }
        }
        private global::System.DateTime _LeaveFromDate;
        partial void OnLeaveFromDateChanging(global::System.DateTime value);
        partial void OnLeaveFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LeaveToDate
        {
            get
            {
                return _LeaveToDate;
            }
            set
            {
                OnLeaveToDateChanging(value);
                ReportPropertyChanging("LeaveToDate");
                _LeaveToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LeaveToDate");
                OnLeaveToDateChanged();
            }
        }
        private global::System.DateTime _LeaveToDate;
        partial void OnLeaveToDateChanging(global::System.DateTime value);
        partial void OnLeaveToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReasonVacation
        {
            get
            {
                return _ReasonVacation;
            }
            set
            {
                OnReasonVacationChanging(value);
                ReportPropertyChanging("ReasonVacation");
                _ReasonVacation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReasonVacation");
                OnReasonVacationChanged();
            }
        }
        private global::System.String _ReasonVacation;
        partial void OnReasonVacationChanging(global::System.String value);
        partial void OnReasonVacationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeLeaveTaken_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_EmployeeLeaveTaken_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent")]
        public refTypeAbsent refTypeAbsent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTypeAbsent> refTypeAbsentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTypeAbsent>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "refTypeAbsent", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Employeer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employeer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employeer object.
        /// </summary>
        /// <param name="employeerID">Initial value of the EmployeerID property.</param>
        public static Employeer CreateEmployeer(global::System.Int64 employeerID)
        {
            Employeer employeer = new Employeer();
            employeer.EmployeerID = employeerID;
            return employeer;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmployeerID
        {
            get
            {
                return _EmployeerID;
            }
            set
            {
                if (_EmployeerID != value)
                {
                    OnEmployeerIDChanging(value);
                    ReportPropertyChanging("EmployeerID");
                    _EmployeerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeerID");
                    OnEmployeerIDChanged();
                }
            }
        }
        private global::System.Int64 _EmployeerID;
        partial void OnEmployeerIDChanging(global::System.Int64 value);
        partial void OnEmployeerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PersonID;
        partial void OnPersonIDChanging(Nullable<global::System.Int64> value);
        partial void OnPersonIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employeer_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employeer_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employeer_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Employeer_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_Employeer_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EmpWorkSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmpWorkSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmpWorkSchedule object.
        /// </summary>
        /// <param name="dOpSkedID">Initial value of the DOpSkedID property.</param>
        /// <param name="wSID">Initial value of the WSID property.</param>
        /// <param name="dateObserved">Initial value of the DateObserved property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static EmpWorkSchedule CreateEmpWorkSchedule(global::System.Int64 dOpSkedID, global::System.Int64 wSID, global::System.DateTime dateObserved, global::System.Int64 empID)
        {
            EmpWorkSchedule empWorkSchedule = new EmpWorkSchedule();
            empWorkSchedule.DOpSkedID = dOpSkedID;
            empWorkSchedule.WSID = wSID;
            empWorkSchedule.DateObserved = dateObserved;
            empWorkSchedule.EmpID = empID;
            return empWorkSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DOpSkedID
        {
            get
            {
                return _DOpSkedID;
            }
            set
            {
                OnDOpSkedIDChanging(value);
                ReportPropertyChanging("DOpSkedID");
                _DOpSkedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOpSkedID");
                OnDOpSkedIDChanged();
            }
        }
        private global::System.Int64 _DOpSkedID;
        partial void OnDOpSkedIDChanging(global::System.Int64 value);
        partial void OnDOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WSID
        {
            get
            {
                return _WSID;
            }
            set
            {
                if (_WSID != value)
                {
                    OnWSIDChanging(value);
                    ReportPropertyChanging("WSID");
                    _WSID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WSID");
                    OnWSIDChanged();
                }
            }
        }
        private global::System.Int64 _WSID;
        partial void OnWSIDChanging(global::System.Int64 value);
        partial void OnWSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateObserved
        {
            get
            {
                return _DateObserved;
            }
            set
            {
                OnDateObservedChanging(value);
                ReportPropertyChanging("DateObserved");
                _DateObserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateObserved");
                OnDateObservedChanged();
            }
        }
        private global::System.DateTime _DateObserved;
        partial void OnDateObservedChanging(global::System.DateTime value);
        partial void OnDateObservedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> TAbsID
        {
            get
            {
                return _TAbsID;
            }
            set
            {
                OnTAbsIDChanging(value);
                ReportPropertyChanging("TAbsID");
                _TAbsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TAbsID");
                OnTAbsIDChanged();
            }
        }
        private Nullable<global::System.Byte> _TAbsID;
        partial void OnTAbsIDChanging(Nullable<global::System.Byte> value);
        partial void OnTAbsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> StatusOfApptSlot
        {
            get
            {
                return _StatusOfApptSlot;
            }
            set
            {
                OnStatusOfApptSlotChanging(value);
                ReportPropertyChanging("StatusOfApptSlot");
                _StatusOfApptSlot = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusOfApptSlot");
                OnStatusOfApptSlotChanged();
            }
        }
        private Nullable<global::System.Boolean> _StatusOfApptSlot;
        partial void OnStatusOfApptSlotChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusOfApptSlotChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_EmpWorkSchedule", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_EmpWorkSchedule", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_EmpWorkSchedule", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BusySchedule_EmpWorkSchedule", "BusySchedule")]
        public EntityCollection<BusySchedule> BusySchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusySchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "BusySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusySchedule>("SureHisModel.FK_BusySchedule_EmpWorkSchedule", "BusySchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpWorkSchedule_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpWorkSchedule_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_EmpWorkSchedule_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_EmpWorkSchedule_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_Operations", "Operations")]
        public Operations Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operations>("SureHisModel.FK_EmpWorkSchedule_Operations", "Operations").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operations>("SureHisModel.FK_EmpWorkSchedule_Operations", "Operations").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Operations> OperationsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Operations>("SureHisModel.FK_EmpWorkSchedule_Operations", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Operations>("SureHisModel.FK_EmpWorkSchedule_Operations", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent")]
        public refTypeAbsent refTypeAbsent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTypeAbsent> refTypeAbsentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTypeAbsent>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTypeAbsent>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "refTypeAbsent", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_EmpWorkSchedule", "RescrUsedInOperation")]
        public EntityCollection<RescrUsedInOperation> RescrUsedInOperation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "RescrUsedInOperation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "RescrUsedInOperation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EquipHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquipHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquipHistory object.
        /// </summary>
        /// <param name="equipHisItemID">Initial value of the EquipHisItemID property.</param>
        /// <param name="v_ExamRegStatus">Initial value of the V_ExamRegStatus property.</param>
        public static EquipHistory CreateEquipHistory(global::System.Int64 equipHisItemID, global::System.Int64 v_ExamRegStatus)
        {
            EquipHistory equipHistory = new EquipHistory();
            equipHistory.EquipHisItemID = equipHisItemID;
            equipHistory.V_ExamRegStatus = v_ExamRegStatus;
            return equipHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EquipMDSrcrID
        {
            get
            {
                return _EquipMDSrcrID;
            }
            set
            {
                OnEquipMDSrcrIDChanging(value);
                ReportPropertyChanging("EquipMDSrcrID");
                _EquipMDSrcrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipMDSrcrID");
                OnEquipMDSrcrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EquipMDSrcrID;
        partial void OnEquipMDSrcrIDChanging(Nullable<global::System.Int64> value);
        partial void OnEquipMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EquipHisItemID
        {
            get
            {
                return _EquipHisItemID;
            }
            set
            {
                if (_EquipHisItemID != value)
                {
                    OnEquipHisItemIDChanging(value);
                    ReportPropertyChanging("EquipHisItemID");
                    _EquipHisItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipHisItemID");
                    OnEquipHisItemIDChanged();
                }
            }
        }
        private global::System.Int64 _EquipHisItemID;
        partial void OnEquipHisItemIDChanging(global::System.Int64 value);
        partial void OnEquipHisItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ExamRegStatus
        {
            get
            {
                return _V_ExamRegStatus;
            }
            set
            {
                OnV_ExamRegStatusChanging(value);
                ReportPropertyChanging("V_ExamRegStatus");
                _V_ExamRegStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ExamRegStatus");
                OnV_ExamRegStatusChanged();
            }
        }
        private global::System.Int64 _V_ExamRegStatus;
        partial void OnV_ExamRegStatusChanging(global::System.Int64 value);
        partial void OnV_ExamRegStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReasonOrNotes
        {
            get
            {
                return _ReasonOrNotes;
            }
            set
            {
                OnReasonOrNotesChanging(value);
                ReportPropertyChanging("ReasonOrNotes");
                _ReasonOrNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReasonOrNotes");
                OnReasonOrNotesChanged();
            }
        }
        private global::System.String _ReasonOrNotes;
        partial void OnReasonOrNotesChanging(global::System.String value);
        partial void OnReasonOrNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources")]
        public MedicalEquimentsResources MedicalEquimentsResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEquimentsResources> MedicalEquimentsResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "MedicalEquimentsResources", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EquivMedService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquivMedService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquivMedService object.
        /// </summary>
        /// <param name="eMSID">Initial value of the EMSID property.</param>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        public static EquivMedService CreateEquivMedService(global::System.Int64 eMSID, global::System.Int64 medSerID)
        {
            EquivMedService equivMedService = new EquivMedService();
            equivMedService.EMSID = eMSID;
            equivMedService.MedSerID = medSerID;
            return equivMedService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EMSID
        {
            get
            {
                return _EMSID;
            }
            set
            {
                if (_EMSID != value)
                {
                    OnEMSIDChanging(value);
                    ReportPropertyChanging("EMSID");
                    _EMSID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EMSID");
                    OnEMSIDChanged();
                }
            }
        }
        private global::System.Int64 _EMSID;
        partial void OnEMSIDChanging(global::System.Int64 value);
        partial void OnEMSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HISerItemID
        {
            get
            {
                return _HISerItemID;
            }
            set
            {
                OnHISerItemIDChanging(value);
                ReportPropertyChanging("HISerItemID");
                _HISerItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HISerItemID");
                OnHISerItemIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HISerItemID;
        partial void OnHISerItemIDChanging(Nullable<global::System.Int64> value);
        partial void OnHISerItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Surcharge
        {
            get
            {
                return _Surcharge;
            }
            set
            {
                OnSurchargeChanging(value);
                ReportPropertyChanging("Surcharge");
                _Surcharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Surcharge");
                OnSurchargeChanged();
            }
        }
        private Nullable<global::System.Double> _Surcharge;
        partial void OnSurchargeChanging(Nullable<global::System.Double> value);
        partial void OnSurchargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquivMedService_HIServiceItem", "HIServiceItem")]
        public HIServiceItem HIServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_EquivMedService_HIServiceItem", "HIServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_EquivMedService_HIServiceItem", "HIServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HIServiceItem> HIServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_EquivMedService_HIServiceItem", "HIServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HIServiceItem>("SureHisModel.FK_EquivMedService_HIServiceItem", "HIServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="EventHoliday")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventHoliday : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventHoliday object.
        /// </summary>
        /// <param name="hldID">Initial value of the HldID property.</param>
        /// <param name="hldName">Initial value of the HldName property.</param>
        /// <param name="dayObserved">Initial value of the DayObserved property.</param>
        /// <param name="yearNumber">Initial value of the YearNumber property.</param>
        public static EventHoliday CreateEventHoliday(global::System.Int64 hldID, global::System.String hldName, global::System.DateTime dayObserved, global::System.Int16 yearNumber)
        {
            EventHoliday eventHoliday = new EventHoliday();
            eventHoliday.HldID = hldID;
            eventHoliday.HldName = hldName;
            eventHoliday.DayObserved = dayObserved;
            eventHoliday.YearNumber = yearNumber;
            return eventHoliday;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HldID
        {
            get
            {
                return _HldID;
            }
            set
            {
                if (_HldID != value)
                {
                    OnHldIDChanging(value);
                    ReportPropertyChanging("HldID");
                    _HldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HldID");
                    OnHldIDChanged();
                }
            }
        }
        private global::System.Int64 _HldID;
        partial void OnHldIDChanging(global::System.Int64 value);
        partial void OnHldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HldName
        {
            get
            {
                return _HldName;
            }
            set
            {
                OnHldNameChanging(value);
                ReportPropertyChanging("HldName");
                _HldName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HldName");
                OnHldNameChanged();
            }
        }
        private global::System.String _HldName;
        partial void OnHldNameChanging(global::System.String value);
        partial void OnHldNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayObserved
        {
            get
            {
                return _DayObserved;
            }
            set
            {
                OnDayObservedChanging(value);
                ReportPropertyChanging("DayObserved");
                _DayObserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DayObserved");
                OnDayObservedChanged();
            }
        }
        private global::System.DateTime _DayObserved;
        partial void OnDayObservedChanging(global::System.DateTime value);
        partial void OnDayObservedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 YearNumber
        {
            get
            {
                return _YearNumber;
            }
            set
            {
                OnYearNumberChanging(value);
                ReportPropertyChanging("YearNumber");
                _YearNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("YearNumber");
                OnYearNumberChanged();
            }
        }
        private global::System.Int16 _YearNumber;
        partial void OnYearNumberChanging(global::System.Int16 value);
        partial void OnYearNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNationalHolidays
        {
            get
            {
                return _IsNationalHolidays;
            }
            set
            {
                OnIsNationalHolidaysChanging(value);
                ReportPropertyChanging("IsNationalHolidays");
                _IsNationalHolidays = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNationalHolidays");
                OnIsNationalHolidaysChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNationalHolidays;
        partial void OnIsNationalHolidaysChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNationalHolidaysChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NotOneDay
        {
            get
            {
                return _NotOneDay;
            }
            set
            {
                OnNotOneDayChanging(value);
                ReportPropertyChanging("NotOneDay");
                _NotOneDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotOneDay");
                OnNotOneDayChanged();
            }
        }
        private Nullable<global::System.Boolean> _NotOneDay;
        partial void OnNotOneDayChanging(Nullable<global::System.Boolean> value);
        partial void OnNotOneDayChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ExamMaintenanceHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ExamMaintenanceHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ExamMaintenanceHistory object.
        /// </summary>
        /// <param name="tIANo">Initial value of the TIANo property.</param>
        /// <param name="eqpMDSrcrID">Initial value of the EqpMDSrcrID property.</param>
        /// <param name="mEHisCode">Initial value of the MEHisCode property.</param>
        /// <param name="mEHisDate">Initial value of the MEHisDate property.</param>
        /// <param name="mEHisCause">Initial value of the MEHisCause property.</param>
        /// <param name="mEHisResult">Initial value of the MEHisResult property.</param>
        public static ExamMaintenanceHistory CreateExamMaintenanceHistory(global::System.Int64 tIANo, global::System.Int64 eqpMDSrcrID, global::System.Int64 mEHisCode, global::System.DateTime mEHisDate, global::System.String mEHisCause, global::System.String mEHisResult)
        {
            ExamMaintenanceHistory examMaintenanceHistory = new ExamMaintenanceHistory();
            examMaintenanceHistory.TIANo = tIANo;
            examMaintenanceHistory.EqpMDSrcrID = eqpMDSrcrID;
            examMaintenanceHistory.MEHisCode = mEHisCode;
            examMaintenanceHistory.MEHisDate = mEHisDate;
            examMaintenanceHistory.MEHisCause = mEHisCause;
            examMaintenanceHistory.MEHisResult = mEHisResult;
            return examMaintenanceHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TIANo
        {
            get
            {
                return _TIANo;
            }
            set
            {
                OnTIANoChanging(value);
                ReportPropertyChanging("TIANo");
                _TIANo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TIANo");
                OnTIANoChanged();
            }
        }
        private global::System.Int64 _TIANo;
        partial void OnTIANoChanging(global::System.Int64 value);
        partial void OnTIANoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EqpMDSrcrID
        {
            get
            {
                return _EqpMDSrcrID;
            }
            set
            {
                OnEqpMDSrcrIDChanging(value);
                ReportPropertyChanging("EqpMDSrcrID");
                _EqpMDSrcrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EqpMDSrcrID");
                OnEqpMDSrcrIDChanged();
            }
        }
        private global::System.Int64 _EqpMDSrcrID;
        partial void OnEqpMDSrcrIDChanging(global::System.Int64 value);
        partial void OnEqpMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MEHisCode
        {
            get
            {
                return _MEHisCode;
            }
            set
            {
                if (_MEHisCode != value)
                {
                    OnMEHisCodeChanging(value);
                    ReportPropertyChanging("MEHisCode");
                    _MEHisCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MEHisCode");
                    OnMEHisCodeChanged();
                }
            }
        }
        private global::System.Int64 _MEHisCode;
        partial void OnMEHisCodeChanging(global::System.Int64 value);
        partial void OnMEHisCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MEHisDate
        {
            get
            {
                return _MEHisDate;
            }
            set
            {
                OnMEHisDateChanging(value);
                ReportPropertyChanging("MEHisDate");
                _MEHisDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MEHisDate");
                OnMEHisDateChanged();
            }
        }
        private global::System.DateTime _MEHisDate;
        partial void OnMEHisDateChanging(global::System.DateTime value);
        partial void OnMEHisDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MEHisCause
        {
            get
            {
                return _MEHisCause;
            }
            set
            {
                OnMEHisCauseChanging(value);
                ReportPropertyChanging("MEHisCause");
                _MEHisCause = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MEHisCause");
                OnMEHisCauseChanged();
            }
        }
        private global::System.String _MEHisCause;
        partial void OnMEHisCauseChanging(global::System.String value);
        partial void OnMEHisCauseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MEHisResult
        {
            get
            {
                return _MEHisResult;
            }
            set
            {
                OnMEHisResultChanging(value);
                ReportPropertyChanging("MEHisResult");
                _MEHisResult = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MEHisResult");
                OnMEHisResultChanged();
            }
        }
        private global::System.String _MEHisResult;
        partial void OnMEHisResultChanging(global::System.String value);
        partial void OnMEHisResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MEHisCost
        {
            get
            {
                return _MEHisCost;
            }
            set
            {
                OnMEHisCostChanging(value);
                ReportPropertyChanging("MEHisCost");
                _MEHisCost = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MEHisCost");
                OnMEHisCostChanged();
            }
        }
        private Nullable<global::System.Double> _MEHisCost;
        partial void OnMEHisCostChanging(Nullable<global::System.Double> value);
        partial void OnMEHisCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MEHisResponsibleItem
        {
            get
            {
                return _MEHisResponsibleItem;
            }
            set
            {
                OnMEHisResponsibleItemChanging(value);
                ReportPropertyChanging("MEHisResponsibleItem");
                _MEHisResponsibleItem = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MEHisResponsibleItem");
                OnMEHisResponsibleItemChanged();
            }
        }
        private global::System.String _MEHisResponsibleItem;
        partial void OnMEHisResponsibleItemChanging(global::System.String value);
        partial void OnMEHisResponsibleItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMaintain
        {
            get
            {
                return _IsMaintain;
            }
            set
            {
                OnIsMaintainChanging(value);
                ReportPropertyChanging("IsMaintain");
                _IsMaintain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMaintain");
                OnIsMaintainChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMaintain;
        partial void OnIsMaintainChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMaintainChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources")]
        public MedicalEquimentsResources MedicalEquimentsResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEquimentsResources> MedicalEquimentsResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "MedicalEquimentsResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency")]
        public TechnicalInspectionAgency TechnicalInspectionAgency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalInspectionAgency>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalInspectionAgency>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TechnicalInspectionAgency> TechnicalInspectionAgencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TechnicalInspectionAgency>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TechnicalInspectionAgency>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "TechnicalInspectionAgency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="FamilyHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FamilyHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FamilyHistory object.
        /// </summary>
        /// <param name="patientFamilyID">Initial value of the PatientFamilyID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="fAMMbrName">Initial value of the FAMMbrName property.</param>
        /// <param name="fAMMbrRelationshipCode">Initial value of the FAMMbrRelationshipCode property.</param>
        /// <param name="fAMMbrMajDiagDeathCode">Initial value of the FAMMbrMajDiagDeathCode property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static FamilyHistory CreateFamilyHistory(global::System.Int64 patientFamilyID, global::System.Int64 ptComMedRecID, global::System.String fAMMbrName, global::System.Int64 fAMMbrRelationshipCode, global::System.String fAMMbrMajDiagDeathCode, global::System.DateTime modifiedDate)
        {
            FamilyHistory familyHistory = new FamilyHistory();
            familyHistory.PatientFamilyID = patientFamilyID;
            familyHistory.PtComMedRecID = ptComMedRecID;
            familyHistory.FAMMbrName = fAMMbrName;
            familyHistory.FAMMbrRelationshipCode = fAMMbrRelationshipCode;
            familyHistory.FAMMbrMajDiagDeathCode = fAMMbrMajDiagDeathCode;
            familyHistory.ModifiedDate = modifiedDate;
            return familyHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PatientFamilyID
        {
            get
            {
                return _PatientFamilyID;
            }
            set
            {
                if (_PatientFamilyID != value)
                {
                    OnPatientFamilyIDChanging(value);
                    ReportPropertyChanging("PatientFamilyID");
                    _PatientFamilyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PatientFamilyID");
                    OnPatientFamilyIDChanged();
                }
            }
        }
        private global::System.Int64 _PatientFamilyID;
        partial void OnPatientFamilyIDChanging(global::System.Int64 value);
        partial void OnPatientFamilyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrName
        {
            get
            {
                return _FAMMbrName;
            }
            set
            {
                OnFAMMbrNameChanging(value);
                ReportPropertyChanging("FAMMbrName");
                _FAMMbrName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAMMbrName");
                OnFAMMbrNameChanged();
            }
        }
        private global::System.String _FAMMbrName;
        partial void OnFAMMbrNameChanging(global::System.String value);
        partial void OnFAMMbrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FAMMbrRelationshipCode
        {
            get
            {
                return _FAMMbrRelationshipCode;
            }
            set
            {
                OnFAMMbrRelationshipCodeChanging(value);
                ReportPropertyChanging("FAMMbrRelationshipCode");
                _FAMMbrRelationshipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAMMbrRelationshipCode");
                OnFAMMbrRelationshipCodeChanged();
            }
        }
        private global::System.Int64 _FAMMbrRelationshipCode;
        partial void OnFAMMbrRelationshipCodeChanging(global::System.Int64 value);
        partial void OnFAMMbrRelationshipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrMajDiagDeathCode
        {
            get
            {
                return _FAMMbrMajDiagDeathCode;
            }
            set
            {
                OnFAMMbrMajDiagDeathCodeChanging(value);
                ReportPropertyChanging("FAMMbrMajDiagDeathCode");
                _FAMMbrMajDiagDeathCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAMMbrMajDiagDeathCode");
                OnFAMMbrMajDiagDeathCodeChanged();
            }
        }
        private global::System.String _FAMMbrMajDiagDeathCode;
        partial void OnFAMMbrMajDiagDeathCodeChanging(global::System.String value);
        partial void OnFAMMbrMajDiagDeathCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrStatus
        {
            get
            {
                return _FAMMbrStatus;
            }
            set
            {
                OnFAMMbrStatusChanging(value);
                ReportPropertyChanging("FAMMbrStatus");
                _FAMMbrStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAMMbrStatus");
                OnFAMMbrStatusChanged();
            }
        }
        private global::System.String _FAMMbrStatus;
        partial void OnFAMMbrStatusChanging(global::System.String value);
        partial void OnFAMMbrStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RelaPatientID
        {
            get
            {
                return _RelaPatientID;
            }
            set
            {
                OnRelaPatientIDChanging(value);
                ReportPropertyChanging("RelaPatientID");
                _RelaPatientID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelaPatientID");
                OnRelaPatientIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RelaPatientID;
        partial void OnRelaPatientIDChanging(Nullable<global::System.Int64> value);
        partial void OnRelaPatientIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_FamilyHistory_refFAMRelationship", "refFAMRelationship")]
        public refFAMRelationship refFAMRelationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "refFAMRelationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "refFAMRelationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refFAMRelationship> refFAMRelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "refFAMRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refFAMRelationship>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "refFAMRelationship", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ForeignExchange")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ForeignExchange : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ForeignExchange object.
        /// </summary>
        /// <param name="fXID">Initial value of the FXID property.</param>
        /// <param name="validFrom">Initial value of the ValidFrom property.</param>
        /// <param name="curCodeFrom">Initial value of the CurCodeFrom property.</param>
        /// <param name="multiply">Initial value of the Multiply property.</param>
        /// <param name="exchangeRate">Initial value of the ExchangeRate property.</param>
        /// <param name="curCodeTo">Initial value of the CurCodeTo property.</param>
        public static ForeignExchange CreateForeignExchange(global::System.Int64 fXID, global::System.DateTime validFrom, global::System.String curCodeFrom, global::System.Boolean multiply, global::System.Double exchangeRate, global::System.String curCodeTo)
        {
            ForeignExchange foreignExchange = new ForeignExchange();
            foreignExchange.FXID = fXID;
            foreignExchange.ValidFrom = validFrom;
            foreignExchange.CurCodeFrom = curCodeFrom;
            foreignExchange.Multiply = multiply;
            foreignExchange.ExchangeRate = exchangeRate;
            foreignExchange.CurCodeTo = curCodeTo;
            return foreignExchange;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FXID
        {
            get
            {
                return _FXID;
            }
            set
            {
                if (_FXID != value)
                {
                    OnFXIDChanging(value);
                    ReportPropertyChanging("FXID");
                    _FXID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FXID");
                    OnFXIDChanged();
                }
            }
        }
        private global::System.Int64 _FXID;
        partial void OnFXIDChanging(global::System.Int64 value);
        partial void OnFXIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidFrom
        {
            get
            {
                return _ValidFrom;
            }
            set
            {
                OnValidFromChanging(value);
                ReportPropertyChanging("ValidFrom");
                _ValidFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidFrom");
                OnValidFromChanged();
            }
        }
        private global::System.DateTime _ValidFrom;
        partial void OnValidFromChanging(global::System.DateTime value);
        partial void OnValidFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCodeFrom
        {
            get
            {
                return _CurCodeFrom;
            }
            set
            {
                OnCurCodeFromChanging(value);
                ReportPropertyChanging("CurCodeFrom");
                _CurCodeFrom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurCodeFrom");
                OnCurCodeFromChanged();
            }
        }
        private global::System.String _CurCodeFrom;
        partial void OnCurCodeFromChanging(global::System.String value);
        partial void OnCurCodeFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Multiply
        {
            get
            {
                return _Multiply;
            }
            set
            {
                OnMultiplyChanging(value);
                ReportPropertyChanging("Multiply");
                _Multiply = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiply");
                OnMultiplyChanged();
            }
        }
        private global::System.Boolean _Multiply;
        partial void OnMultiplyChanging(global::System.Boolean value);
        partial void OnMultiplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Double _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Double value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCodeTo
        {
            get
            {
                return _CurCodeTo;
            }
            set
            {
                OnCurCodeToChanging(value);
                ReportPropertyChanging("CurCodeTo");
                _CurCodeTo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurCodeTo");
                OnCurCodeToChanged();
            }
        }
        private global::System.String _CurCodeTo;
        partial void OnCurCodeToChanging(global::System.String value);
        partial void OnCurCodeToChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="GenericSocialNetwork")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GenericSocialNetwork : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GenericSocialNetwork object.
        /// </summary>
        /// <param name="sNetID">Initial value of the SNetID property.</param>
        /// <param name="sNetName">Initial value of the SNetName property.</param>
        public static GenericSocialNetwork CreateGenericSocialNetwork(global::System.Byte sNetID, global::System.String sNetName)
        {
            GenericSocialNetwork genericSocialNetwork = new GenericSocialNetwork();
            genericSocialNetwork.SNetID = sNetID;
            genericSocialNetwork.SNetName = sNetName;
            return genericSocialNetwork;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SNetID
        {
            get
            {
                return _SNetID;
            }
            set
            {
                if (_SNetID != value)
                {
                    OnSNetIDChanging(value);
                    ReportPropertyChanging("SNetID");
                    _SNetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SNetID");
                    OnSNetIDChanged();
                }
            }
        }
        private global::System.Byte _SNetID;
        partial void OnSNetIDChanging(global::System.Byte value);
        partial void OnSNetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SNetName
        {
            get
            {
                return _SNetName;
            }
            set
            {
                OnSNetNameChanging(value);
                ReportPropertyChanging("SNetName");
                _SNetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SNetName");
                OnSNetNameChanged();
            }
        }
        private global::System.String _SNetName;
        partial void OnSNetNameChanging(global::System.String value);
        partial void OnSNetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SNetDetails
        {
            get
            {
                return _SNetDetails;
            }
            set
            {
                OnSNetDetailsChanging(value);
                ReportPropertyChanging("SNetDetails");
                _SNetDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SNetDetails");
                OnSNetDetailsChanged();
            }
        }
        private global::System.String _SNetDetails;
        partial void OnSNetDetailsChanging(global::System.String value);
        partial void OnSNetDetailsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_GenericSocialNetwork", "NetworkGuestAccount")]
        public EntityCollection<NetworkGuestAccount> NetworkGuestAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "NetworkGuestAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "NetworkGuestAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HCProvider")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCProvider : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCProvider object.
        /// </summary>
        /// <param name="hosID">Initial value of the HosID property.</param>
        /// <param name="hCPrvProviderId">Initial value of the HCPrvProviderId property.</param>
        /// <param name="hCPrvProviderName">Initial value of the HCPrvProviderName property.</param>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        /// <param name="hCPractAddressText">Initial value of the HCPractAddressText property.</param>
        /// <param name="hCPrvProviderTypeCode">Initial value of the HCPrvProviderTypeCode property.</param>
        public static HCProvider CreateHCProvider(global::System.Int64 hosID, global::System.String hCPrvProviderId, global::System.String hCPrvProviderName, global::System.String provinceID, global::System.String hCPractAddressText, global::System.Int64 hCPrvProviderTypeCode)
        {
            HCProvider hCProvider = new HCProvider();
            hCProvider.HosID = hosID;
            hCProvider.HCPrvProviderId = hCPrvProviderId;
            hCProvider.HCPrvProviderName = hCPrvProviderName;
            hCProvider.ProvinceID = provinceID;
            hCProvider.HCPractAddressText = hCPractAddressText;
            hCProvider.HCPrvProviderTypeCode = hCPrvProviderTypeCode;
            return hCProvider;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                if (_HosID != value)
                {
                    OnHosIDChanging(value);
                    ReportPropertyChanging("HosID");
                    _HosID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosID");
                    OnHosIDChanged();
                }
            }
        }
        private global::System.Int64 _HosID;
        partial void OnHosIDChanging(global::System.Int64 value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PHosID
        {
            get
            {
                return _PHosID;
            }
            set
            {
                OnPHosIDChanging(value);
                ReportPropertyChanging("PHosID");
                _PHosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PHosID");
                OnPHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PHosID;
        partial void OnPHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnPHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SatOfHosID
        {
            get
            {
                return _SatOfHosID;
            }
            set
            {
                OnSatOfHosIDChanging(value);
                ReportPropertyChanging("SatOfHosID");
                _SatOfHosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SatOfHosID");
                OnSatOfHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SatOfHosID;
        partial void OnSatOfHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnSatOfHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HIHosCode
        {
            get
            {
                return _HIHosCode;
            }
            set
            {
                OnHIHosCodeChanging(value);
                ReportPropertyChanging("HIHosCode");
                _HIHosCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HIHosCode");
                OnHIHosCodeChanged();
            }
        }
        private global::System.String _HIHosCode;
        partial void OnHIHosCodeChanging(global::System.String value);
        partial void OnHIHosCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OUID
        {
            get
            {
                return _OUID;
            }
            set
            {
                OnOUIDChanging(value);
                ReportPropertyChanging("OUID");
                _OUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OUID");
                OnOUIDChanged();
            }
        }
        private Nullable<global::System.Int64> _OUID;
        partial void OnOUIDChanging(Nullable<global::System.Int64> value);
        partial void OnOUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCPrvProviderId
        {
            get
            {
                return _HCPrvProviderId;
            }
            set
            {
                OnHCPrvProviderIdChanging(value);
                ReportPropertyChanging("HCPrvProviderId");
                _HCPrvProviderId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCPrvProviderId");
                OnHCPrvProviderIdChanged();
            }
        }
        private global::System.String _HCPrvProviderId;
        partial void OnHCPrvProviderIdChanging(global::System.String value);
        partial void OnHCPrvProviderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCPrvProviderName
        {
            get
            {
                return _HCPrvProviderName;
            }
            set
            {
                OnHCPrvProviderNameChanging(value);
                ReportPropertyChanging("HCPrvProviderName");
                _HCPrvProviderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCPrvProviderName");
                OnHCPrvProviderNameChanged();
            }
        }
        private global::System.String _HCPrvProviderName;
        partial void OnHCPrvProviderNameChanging(global::System.String value);
        partial void OnHCPrvProviderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private global::System.String _ProvinceID;
        partial void OnProvinceIDChanging(global::System.String value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosShortName
        {
            get
            {
                return _HosShortName;
            }
            set
            {
                OnHosShortNameChanging(value);
                ReportPropertyChanging("HosShortName");
                _HosShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosShortName");
                OnHosShortNameChanged();
            }
        }
        private global::System.String _HosShortName;
        partial void OnHosShortNameChanging(global::System.String value);
        partial void OnHosShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCPractAddressText
        {
            get
            {
                return _HCPractAddressText;
            }
            set
            {
                OnHCPractAddressTextChanging(value);
                ReportPropertyChanging("HCPractAddressText");
                _HCPractAddressText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCPractAddressText");
                OnHCPractAddressTextChanged();
            }
        }
        private global::System.String _HCPractAddressText;
        partial void OnHCPractAddressTextChanging(global::System.String value);
        partial void OnHCPractAddressTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosLogoImgPath
        {
            get
            {
                return _HosLogoImgPath;
            }
            set
            {
                OnHosLogoImgPathChanging(value);
                ReportPropertyChanging("HosLogoImgPath");
                _HosLogoImgPath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosLogoImgPath");
                OnHosLogoImgPathChanged();
            }
        }
        private global::System.String _HosLogoImgPath;
        partial void OnHosLogoImgPathChanging(global::System.String value);
        partial void OnHosLogoImgPathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Slogan
        {
            get
            {
                return _Slogan;
            }
            set
            {
                OnSloganChanging(value);
                ReportPropertyChanging("Slogan");
                _Slogan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Slogan");
                OnSloganChanged();
            }
        }
        private global::System.String _Slogan;
        partial void OnSloganChanging(global::System.String value);
        partial void OnSloganChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosPhone
        {
            get
            {
                return _HosPhone;
            }
            set
            {
                OnHosPhoneChanging(value);
                ReportPropertyChanging("HosPhone");
                _HosPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosPhone");
                OnHosPhoneChanged();
            }
        }
        private global::System.String _HosPhone;
        partial void OnHosPhoneChanging(global::System.String value);
        partial void OnHosPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosHotline
        {
            get
            {
                return _HosHotline;
            }
            set
            {
                OnHosHotlineChanging(value);
                ReportPropertyChanging("HosHotline");
                _HosHotline = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosHotline");
                OnHosHotlineChanged();
            }
        }
        private global::System.String _HosHotline;
        partial void OnHosHotlineChanging(global::System.String value);
        partial void OnHosHotlineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosWebSite
        {
            get
            {
                return _HosWebSite;
            }
            set
            {
                OnHosWebSiteChanging(value);
                ReportPropertyChanging("HosWebSite");
                _HosWebSite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosWebSite");
                OnHosWebSiteChanged();
            }
        }
        private global::System.String _HosWebSite;
        partial void OnHosWebSiteChanging(global::System.String value);
        partial void OnHosWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosEmail
        {
            get
            {
                return _HosEmail;
            }
            set
            {
                OnHosEmailChanging(value);
                ReportPropertyChanging("HosEmail");
                _HosEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosEmail");
                OnHosEmailChanged();
            }
        }
        private global::System.String _HosEmail;
        partial void OnHosEmailChanging(global::System.String value);
        partial void OnHosEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosFax
        {
            get
            {
                return _HosFax;
            }
            set
            {
                OnHosFaxChanging(value);
                ReportPropertyChanging("HosFax");
                _HosFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosFax");
                OnHosFaxChanged();
            }
        }
        private global::System.String _HosFax;
        partial void OnHosFaxChanging(global::System.String value);
        partial void OnHosFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCPrvProviderTypeCode
        {
            get
            {
                return _HCPrvProviderTypeCode;
            }
            set
            {
                OnHCPrvProviderTypeCodeChanging(value);
                ReportPropertyChanging("HCPrvProviderTypeCode");
                _HCPrvProviderTypeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCPrvProviderTypeCode");
                OnHCPrvProviderTypeCodeChanged();
            }
        }
        private global::System.Int64 _HCPrvProviderTypeCode;
        partial void OnHCPrvProviderTypeCodeChanging(global::System.Int64 value);
        partial void OnHCPrvProviderTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsHeadOffice
        {
            get
            {
                return _IsHeadOffice;
            }
            set
            {
                OnIsHeadOfficeChanging(value);
                ReportPropertyChanging("IsHeadOffice");
                _IsHeadOffice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHeadOffice");
                OnIsHeadOfficeChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsHeadOffice;
        partial void OnIsHeadOfficeChanging(Nullable<global::System.Boolean> value);
        partial void OnIsHeadOfficeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCPrvAgencyIDCode
        {
            get
            {
                return _HCPrvAgencyIDCode;
            }
            set
            {
                OnHCPrvAgencyIDCodeChanging(value);
                ReportPropertyChanging("HCPrvAgencyIDCode");
                _HCPrvAgencyIDCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCPrvAgencyIDCode");
                OnHCPrvAgencyIDCodeChanged();
            }
        }
        private global::System.String _HCPrvAgencyIDCode;
        partial void OnHCPrvAgencyIDCodeChanging(global::System.String value);
        partial void OnHCPrvAgencyIDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBuiltIn
        {
            get
            {
                return _IsBuiltIn;
            }
            set
            {
                OnIsBuiltInChanging(value);
                ReportPropertyChanging("IsBuiltIn");
                _IsBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBuiltIn");
                OnIsBuiltInChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBuiltIn;
        partial void OnIsBuiltInChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBuiltInChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTemp_HCProvider", "AdmNoTemp")]
        public EntityCollection<AdmNoTemp> AdmNoTemp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmNoTemp>("SureHisModel.FK_AdmNoTemp_HCProvider", "AdmNoTemp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmNoTemp>("SureHisModel.FK_AdmNoTemp_HCProvider", "AdmNoTemp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_HCEnterprise", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SureHisModel.FK_Employee_HCEnterprise", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SureHisModel.FK_Employee_HCEnterprise", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_HCProvider", "HCProvider1")]
        public EntityCollection<HCProvider> HCProvider1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_HCProvider", "HCProvider")]
        public HCProvider HCProvider2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProvider2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCProvider_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCProvider_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCProvider_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SureHisModel.FK_HCProvider_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_refProviderType", "refProviderType")]
        public refProviderType refProviderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProviderType>("SureHisModel.FK_HCProvider_refProviderType", "refProviderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProviderType>("SureHisModel.FK_HCProvider_refProviderType", "refProviderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refProviderType> refProviderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProviderType>("SureHisModel.FK_HCProvider_refProviderType", "refProviderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refProviderType>("SureHisModel.FK_HCProvider_refProviderType", "refProviderType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_refProvince", "refCityProvince")]
        public refCityProvince refCityProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_HCProvider_refProvince", "refCityProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_HCProvider_refProvince", "refCityProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCityProvince> refCityProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_HCProvider_refProvince", "refCityProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCityProvince>("SureHisModel.FK_HCProvider_refProvince", "refCityProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_SatOfHosID", "HCProvider1")]
        public EntityCollection<HCProvider> HCProvider11
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_SatOfHosID", "HCProvider")]
        public HCProvider HCProvider3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProvider3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HCProvider_SatOfHosID", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthInsurance_HCProvider", "HealthInsurance")]
        public EntityCollection<HealthInsurance> HealthInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HealthInsurance>("SureHisModel.FK_HealthInsurance_HCProvider", "HealthInsurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HealthInsurance>("SureHisModel.FK_HealthInsurance_HCProvider", "HealthInsurance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_HCProvider", "HospitalizationHistory")]
        public EntityCollection<HospitalizationHistory> HospitalizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HospitalizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HospitalizationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalSpecialist_HCProvider", "HospitalSpecialist")]
        public EntityCollection<HospitalSpecialist> HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalSpecialist>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalSpecialist>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HosRanking_HCProvider", "HosRanking")]
        public EntityCollection<HosRanking> HosRanking
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HosRanking>("SureHisModel.FK_HosRanking_HCProvider", "HosRanking");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HosRanking>("SureHisModel.FK_HosRanking_HCProvider", "HosRanking", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_HCProvider", "WorkingSchedule")]
        public EntityCollection<WorkingSchedule> WorkingSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_HCProvider", "WorkingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_HCProvider", "WorkingSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HCRoomBlock")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCRoomBlock : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCRoomBlock object.
        /// </summary>
        /// <param name="hCRmBlockID">Initial value of the HCRmBlockID property.</param>
        /// <param name="hCRmBlockName">Initial value of the HCRmBlockName property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        public static HCRoomBlock CreateHCRoomBlock(global::System.Int64 hCRmBlockID, global::System.String hCRmBlockName, global::System.DateTime modifiedDate, global::System.Int64 estEmpID)
        {
            HCRoomBlock hCRoomBlock = new HCRoomBlock();
            hCRoomBlock.HCRmBlockID = hCRmBlockID;
            hCRoomBlock.HCRmBlockName = hCRmBlockName;
            hCRoomBlock.ModifiedDate = modifiedDate;
            hCRoomBlock.EstEmpID = estEmpID;
            return hCRoomBlock;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCRmBlockID
        {
            get
            {
                return _HCRmBlockID;
            }
            set
            {
                if (_HCRmBlockID != value)
                {
                    OnHCRmBlockIDChanging(value);
                    ReportPropertyChanging("HCRmBlockID");
                    _HCRmBlockID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCRmBlockID");
                    OnHCRmBlockIDChanged();
                }
            }
        }
        private global::System.Int64 _HCRmBlockID;
        partial void OnHCRmBlockIDChanging(global::System.Int64 value);
        partial void OnHCRmBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCRmBlockName
        {
            get
            {
                return _HCRmBlockName;
            }
            set
            {
                OnHCRmBlockNameChanging(value);
                ReportPropertyChanging("HCRmBlockName");
                _HCRmBlockName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCRmBlockName");
                OnHCRmBlockNameChanged();
            }
        }
        private global::System.String _HCRmBlockName;
        partial void OnHCRmBlockNameChanging(global::System.String value);
        partial void OnHCRmBlockNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCRmBlockDesc
        {
            get
            {
                return _HCRmBlockDesc;
            }
            set
            {
                OnHCRmBlockDescChanging(value);
                ReportPropertyChanging("HCRmBlockDesc");
                _HCRmBlockDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCRmBlockDesc");
                OnHCRmBlockDescChanged();
            }
        }
        private global::System.String _HCRmBlockDesc;
        partial void OnHCRmBlockDescChanging(global::System.String value);
        partial void OnHCRmBlockDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DHCRoomBlock_HCRoomBlock", "DHCRoomBlock")]
        public EntityCollection<DHCRoomBlock> DHCRoomBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DHCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "DHCRoomBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DHCRoomBlock>("SureHisModel.FK_DHCRoomBlock_HCRoomBlock", "DHCRoomBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_HCRoomBlock", "RescrUsedInOperation")]
        public EntityCollection<RescrUsedInOperation> RescrUsedInOperation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "RescrUsedInOperation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "RescrUsedInOperation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HCStakeholder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HCStakeholder : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HCStakeholder object.
        /// </summary>
        /// <param name="hCStakeholderID">Initial value of the HCStakeholderID property.</param>
        /// <param name="oUID">Initial value of the OUID property.</param>
        public static HCStakeholder CreateHCStakeholder(global::System.Int64 hCStakeholderID, global::System.Int64 oUID)
        {
            HCStakeholder hCStakeholder = new HCStakeholder();
            hCStakeholder.HCStakeholderID = hCStakeholderID;
            hCStakeholder.OUID = oUID;
            return hCStakeholder;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCStakeholderID
        {
            get
            {
                return _HCStakeholderID;
            }
            set
            {
                if (_HCStakeholderID != value)
                {
                    OnHCStakeholderIDChanging(value);
                    ReportPropertyChanging("HCStakeholderID");
                    _HCStakeholderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCStakeholderID");
                    OnHCStakeholderIDChanged();
                }
            }
        }
        private global::System.Int64 _HCStakeholderID;
        partial void OnHCStakeholderIDChanging(global::System.Int64 value);
        partial void OnHCStakeholderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OUID
        {
            get
            {
                return _OUID;
            }
            set
            {
                OnOUIDChanging(value);
                ReportPropertyChanging("OUID");
                _OUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OUID");
                OnOUIDChanged();
            }
        }
        private global::System.Int64 _OUID;
        partial void OnOUIDChanging(global::System.Int64 value);
        partial void OnOUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PersonID;
        partial void OnPersonIDChanging(Nullable<global::System.Int64> value);
        partial void OnPersonIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCStakeholder_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCStakeholder_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCStakeholder_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_HCStakeholder_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SureHisModel.FK_HCStakeholder_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCStakeholder_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_HCStakeholder_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_HCStakeholder_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_HCStakeholder_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_HCStakeholder_Person", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HealthCareQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HealthCareQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HealthCareQueue object.
        /// </summary>
        /// <param name="hCQueueID">Initial value of the HCQueueID property.</param>
        /// <param name="hQQueueUpDate">Initial value of the HQQueueUpDate property.</param>
        /// <param name="hQSequenceNo">Initial value of the HQSequenceNo property.</param>
        /// <param name="numOfRep">Initial value of the NumOfRep property.</param>
        public static HealthCareQueue CreateHealthCareQueue(global::System.Int64 hCQueueID, global::System.DateTime hQQueueUpDate, global::System.Int64 hQSequenceNo, global::System.Byte numOfRep)
        {
            HealthCareQueue healthCareQueue = new HealthCareQueue();
            healthCareQueue.HCQueueID = hCQueueID;
            healthCareQueue.HQQueueUpDate = hQQueueUpDate;
            healthCareQueue.HQSequenceNo = hQSequenceNo;
            healthCareQueue.NumOfRep = numOfRep;
            return healthCareQueue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCQueueID
        {
            get
            {
                return _HCQueueID;
            }
            set
            {
                if (_HCQueueID != value)
                {
                    OnHCQueueIDChanging(value);
                    ReportPropertyChanging("HCQueueID");
                    _HCQueueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCQueueID");
                    OnHCQueueIDChanged();
                }
            }
        }
        private global::System.Int64 _HCQueueID;
        partial void OnHCQueueIDChanging(global::System.Int64 value);
        partial void OnHCQueueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RescrID
        {
            get
            {
                return _RescrID;
            }
            set
            {
                OnRescrIDChanging(value);
                ReportPropertyChanging("RescrID");
                _RescrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RescrID");
                OnRescrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RescrID;
        partial void OnRescrIDChanging(Nullable<global::System.Int64> value);
        partial void OnRescrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HQQueueUpDate
        {
            get
            {
                return _HQQueueUpDate;
            }
            set
            {
                OnHQQueueUpDateChanging(value);
                ReportPropertyChanging("HQQueueUpDate");
                _HQQueueUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HQQueueUpDate");
                OnHQQueueUpDateChanged();
            }
        }
        private global::System.DateTime _HQQueueUpDate;
        partial void OnHQQueueUpDateChanging(global::System.DateTime value);
        partial void OnHQQueueUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SID;
        partial void OnSIDChanging(Nullable<global::System.Int64> value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HQSequenceNo
        {
            get
            {
                return _HQSequenceNo;
            }
            set
            {
                OnHQSequenceNoChanging(value);
                ReportPropertyChanging("HQSequenceNo");
                _HQSequenceNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HQSequenceNo");
                OnHQSequenceNoChanged();
            }
        }
        private global::System.Int64 _HQSequenceNo;
        partial void OnHQSequenceNoChanging(global::System.Int64 value);
        partial void OnHQSequenceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AdmID;
        partial void OnAdmIDChanging(Nullable<global::System.Int64> value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_ConsultStatus
        {
            get
            {
                return _V_ConsultStatus;
            }
            set
            {
                OnV_ConsultStatusChanging(value);
                ReportPropertyChanging("V_ConsultStatus");
                _V_ConsultStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ConsultStatus");
                OnV_ConsultStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_ConsultStatus;
        partial void OnV_ConsultStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_ConsultStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GroupHCNo
        {
            get
            {
                return _GroupHCNo;
            }
            set
            {
                OnGroupHCNoChanging(value);
                ReportPropertyChanging("GroupHCNo");
                _GroupHCNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupHCNo");
                OnGroupHCNoChanged();
            }
        }
        private Nullable<global::System.Int64> _GroupHCNo;
        partial void OnGroupHCNoChanging(Nullable<global::System.Int64> value);
        partial void OnGroupHCNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NumOfRep
        {
            get
            {
                return _NumOfRep;
            }
            set
            {
                OnNumOfRepChanging(value);
                ReportPropertyChanging("NumOfRep");
                _NumOfRep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumOfRep");
                OnNumOfRepChanged();
            }
        }
        private global::System.Byte _NumOfRep;
        partial void OnNumOfRepChanging(global::System.Byte value);
        partial void OnNumOfRepChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthCareQueue_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation")]
        public RescrUsedInOperation RescrUsedInOperation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RescrUsedInOperation>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RescrUsedInOperation>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RescrUsedInOperation> RescrUsedInOperationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RescrUsedInOperation>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RescrUsedInOperation>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "RescrUsedInOperation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HealthInsurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HealthInsurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HealthInsurance object.
        /// </summary>
        /// <param name="hICardID">Initial value of the HICardID property.</param>
        /// <param name="hICardNo">Initial value of the HICardNo property.</param>
        /// <param name="registrationLocID">Initial value of the RegistrationLocID property.</param>
        /// <param name="validDateFrom">Initial value of the ValidDateFrom property.</param>
        /// <param name="validDateTo">Initial value of the ValidDateTo property.</param>
        public static HealthInsurance CreateHealthInsurance(global::System.Int64 hICardID, global::System.String hICardNo, global::System.Int64 registrationLocID, global::System.DateTime validDateFrom, global::System.DateTime validDateTo)
        {
            HealthInsurance healthInsurance = new HealthInsurance();
            healthInsurance.HICardID = hICardID;
            healthInsurance.HICardNo = hICardNo;
            healthInsurance.RegistrationLocID = registrationLocID;
            healthInsurance.ValidDateFrom = validDateFrom;
            healthInsurance.ValidDateTo = validDateTo;
            return healthInsurance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HICardID
        {
            get
            {
                return _HICardID;
            }
            set
            {
                if (_HICardID != value)
                {
                    OnHICardIDChanging(value);
                    ReportPropertyChanging("HICardID");
                    _HICardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HICardID");
                    OnHICardIDChanged();
                }
            }
        }
        private global::System.Int64 _HICardID;
        partial void OnHICardIDChanging(global::System.Int64 value);
        partial void OnHICardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtID;
        partial void OnPtIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HICardNo
        {
            get
            {
                return _HICardNo;
            }
            set
            {
                OnHICardNoChanging(value);
                ReportPropertyChanging("HICardNo");
                _HICardNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HICardNo");
                OnHICardNoChanged();
            }
        }
        private global::System.String _HICardNo;
        partial void OnHICardNoChanging(global::System.String value);
        partial void OnHICardNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RegistrationLocation
        {
            get
            {
                return _RegistrationLocation;
            }
            set
            {
                OnRegistrationLocationChanging(value);
                ReportPropertyChanging("RegistrationLocation");
                _RegistrationLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RegistrationLocation");
                OnRegistrationLocationChanged();
            }
        }
        private global::System.String _RegistrationLocation;
        partial void OnRegistrationLocationChanging(global::System.String value);
        partial void OnRegistrationLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactPerson
        {
            get
            {
                return _ContactPerson;
            }
            set
            {
                OnContactPersonChanging(value);
                ReportPropertyChanging("ContactPerson");
                _ContactPerson = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactPerson");
                OnContactPersonChanged();
            }
        }
        private global::System.String _ContactPerson;
        partial void OnContactPersonChanging(global::System.String value);
        partial void OnContactPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegistrationLocID
        {
            get
            {
                return _RegistrationLocID;
            }
            set
            {
                OnRegistrationLocIDChanging(value);
                ReportPropertyChanging("RegistrationLocID");
                _RegistrationLocID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegistrationLocID");
                OnRegistrationLocIDChanged();
            }
        }
        private global::System.Int64 _RegistrationLocID;
        partial void OnRegistrationLocIDChanging(global::System.Int64 value);
        partial void OnRegistrationLocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidDateFrom
        {
            get
            {
                return _ValidDateFrom;
            }
            set
            {
                OnValidDateFromChanging(value);
                ReportPropertyChanging("ValidDateFrom");
                _ValidDateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateFrom");
                OnValidDateFromChanged();
            }
        }
        private global::System.DateTime _ValidDateFrom;
        partial void OnValidDateFromChanging(global::System.DateTime value);
        partial void OnValidDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidDateTo
        {
            get
            {
                return _ValidDateTo;
            }
            set
            {
                OnValidDateToChanging(value);
                ReportPropertyChanging("ValidDateTo");
                _ValidDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateTo");
                OnValidDateToChanged();
            }
        }
        private global::System.DateTime _ValidDateTo;
        partial void OnValidDateToChanging(global::System.DateTime value);
        partial void OnValidDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HIOverFiveYears
        {
            get
            {
                return _HIOverFiveYears;
            }
            set
            {
                OnHIOverFiveYearsChanging(value);
                ReportPropertyChanging("HIOverFiveYears");
                _HIOverFiveYears = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIOverFiveYears");
                OnHIOverFiveYearsChanged();
            }
        }
        private Nullable<global::System.DateTime> _HIOverFiveYears;
        partial void OnHIOverFiveYearsChanging(Nullable<global::System.DateTime> value);
        partial void OnHIOverFiveYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOverFiveYears
        {
            get
            {
                return _IsOverFiveYears;
            }
            set
            {
                OnIsOverFiveYearsChanging(value);
                ReportPropertyChanging("IsOverFiveYears");
                _IsOverFiveYears = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOverFiveYears");
                OnIsOverFiveYearsChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOverFiveYears;
        partial void OnIsOverFiveYearsChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOverFiveYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> HIAreaCode
        {
            get
            {
                return _HIAreaCode;
            }
            set
            {
                OnHIAreaCodeChanging(value);
                ReportPropertyChanging("HIAreaCode");
                _HIAreaCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIAreaCode");
                OnHIAreaCodeChanged();
            }
        }
        private Nullable<global::System.Int32> _HIAreaCode;
        partial void OnHIAreaCodeChanging(Nullable<global::System.Int32> value);
        partial void OnHIAreaCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InsCoID
        {
            get
            {
                return _InsCoID;
            }
            set
            {
                OnInsCoIDChanging(value);
                ReportPropertyChanging("InsCoID");
                _InsCoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsCoID");
                OnInsCoIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InsCoID;
        partial void OnInsCoIDChanging(Nullable<global::System.Int64> value);
        partial void OnInsCoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IBID
        {
            get
            {
                return _IBID;
            }
            set
            {
                OnIBIDChanging(value);
                ReportPropertyChanging("IBID");
                _IBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IBID");
                OnIBIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IBID;
        partial void OnIBIDChanging(Nullable<global::System.Int32> value);
        partial void OnIBIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthInsurance_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HealthInsurance_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HealthInsurance_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HealthInsurance_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HealthInsurance_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIAdmission_HealthInsurance", "HIAdmission")]
        public EntityCollection<HIAdmission> HIAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HIAdmission>("SureHisModel.FK_HIAdmission_HealthInsurance", "HIAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HIAdmission>("SureHisModel.FK_HIAdmission_HealthInsurance", "HIAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HIAdmission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HIAdmission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HIAdmission object.
        /// </summary>
        /// <param name="hIAdmID">Initial value of the HIAdmID property.</param>
        /// <param name="admID">Initial value of the AdmID property.</param>
        /// <param name="hICardID">Initial value of the HICardID property.</param>
        /// <param name="rebatePercentage">Initial value of the RebatePercentage property.</param>
        public static HIAdmission CreateHIAdmission(global::System.Int64 hIAdmID, global::System.Int64 admID, global::System.Int64 hICardID, global::System.Double rebatePercentage)
        {
            HIAdmission hIAdmission = new HIAdmission();
            hIAdmission.HIAdmID = hIAdmID;
            hIAdmission.AdmID = admID;
            hIAdmission.HICardID = hICardID;
            hIAdmission.RebatePercentage = rebatePercentage;
            return hIAdmission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HIAdmID
        {
            get
            {
                return _HIAdmID;
            }
            set
            {
                if (_HIAdmID != value)
                {
                    OnHIAdmIDChanging(value);
                    ReportPropertyChanging("HIAdmID");
                    _HIAdmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HIAdmID");
                    OnHIAdmIDChanged();
                }
            }
        }
        private global::System.Int64 _HIAdmID;
        partial void OnHIAdmIDChanging(global::System.Int64 value);
        partial void OnHIAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private global::System.Int64 _AdmID;
        partial void OnAdmIDChanging(global::System.Int64 value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HICardID
        {
            get
            {
                return _HICardID;
            }
            set
            {
                OnHICardIDChanging(value);
                ReportPropertyChanging("HICardID");
                _HICardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HICardID");
                OnHICardIDChanged();
            }
        }
        private global::System.Int64 _HICardID;
        partial void OnHICardIDChanging(global::System.Int64 value);
        partial void OnHICardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double RebatePercentage
        {
            get
            {
                return _RebatePercentage;
            }
            set
            {
                OnRebatePercentageChanging(value);
                ReportPropertyChanging("RebatePercentage");
                _RebatePercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RebatePercentage");
                OnRebatePercentageChanged();
            }
        }
        private global::System.Double _RebatePercentage;
        partial void OnRebatePercentageChanging(global::System.Double value);
        partial void OnRebatePercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_NHIAdmCases
        {
            get
            {
                return _V_NHIAdmCases;
            }
            set
            {
                OnV_NHIAdmCasesChanging(value);
                ReportPropertyChanging("V_NHIAdmCases");
                _V_NHIAdmCases = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_NHIAdmCases");
                OnV_NHIAdmCasesChanged();
            }
        }
        private Nullable<global::System.Int64> _V_NHIAdmCases;
        partial void OnV_NHIAdmCasesChanging(Nullable<global::System.Int64> value);
        partial void OnV_NHIAdmCasesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_NHITransCases
        {
            get
            {
                return _V_NHITransCases;
            }
            set
            {
                OnV_NHITransCasesChanging(value);
                ReportPropertyChanging("V_NHITransCases");
                _V_NHITransCases = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_NHITransCases");
                OnV_NHITransCasesChanged();
            }
        }
        private Nullable<global::System.Int64> _V_NHITransCases;
        partial void OnV_NHITransCasesChanging(Nullable<global::System.Int64> value);
        partial void OnV_NHITransCasesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIAdmission_HealthInsurance", "HealthInsurance")]
        public HealthInsurance HealthInsurance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealthInsurance>("SureHisModel.FK_HIAdmission_HealthInsurance", "HealthInsurance").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealthInsurance>("SureHisModel.FK_HIAdmission_HealthInsurance", "HealthInsurance").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HealthInsurance> HealthInsuranceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HealthInsurance>("SureHisModel.FK_HIAdmission_HealthInsurance", "HealthInsurance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HealthInsurance>("SureHisModel.FK_HIAdmission_HealthInsurance", "HealthInsurance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIAdmission_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HIServiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HIServiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HIServiceItem object.
        /// </summary>
        /// <param name="hISerItemID">Initial value of the HISerItemID property.</param>
        /// <param name="hISerItemCode">Initial value of the HISerItemCode property.</param>
        /// <param name="hISerItemName">Initial value of the HISerItemName property.</param>
        /// <param name="hISerItemUOM">Initial value of the HISerItemUOM property.</param>
        /// <param name="medSerTypeID">Initial value of the MedSerTypeID property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        public static HIServiceItem CreateHIServiceItem(global::System.Int64 hISerItemID, global::System.String hISerItemCode, global::System.String hISerItemName, global::System.String hISerItemUOM, global::System.Int64 medSerTypeID, global::System.Boolean stop)
        {
            HIServiceItem hIServiceItem = new HIServiceItem();
            hIServiceItem.HISerItemID = hISerItemID;
            hIServiceItem.HISerItemCode = hISerItemCode;
            hIServiceItem.HISerItemName = hISerItemName;
            hIServiceItem.HISerItemUOM = hISerItemUOM;
            hIServiceItem.MedSerTypeID = medSerTypeID;
            hIServiceItem.Stop = stop;
            return hIServiceItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HISerItemID
        {
            get
            {
                return _HISerItemID;
            }
            set
            {
                if (_HISerItemID != value)
                {
                    OnHISerItemIDChanging(value);
                    ReportPropertyChanging("HISerItemID");
                    _HISerItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HISerItemID");
                    OnHISerItemIDChanged();
                }
            }
        }
        private global::System.Int64 _HISerItemID;
        partial void OnHISerItemIDChanging(global::System.Int64 value);
        partial void OnHISerItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HISerItemCode
        {
            get
            {
                return _HISerItemCode;
            }
            set
            {
                OnHISerItemCodeChanging(value);
                ReportPropertyChanging("HISerItemCode");
                _HISerItemCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HISerItemCode");
                OnHISerItemCodeChanged();
            }
        }
        private global::System.String _HISerItemCode;
        partial void OnHISerItemCodeChanging(global::System.String value);
        partial void OnHISerItemCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HISerItemName
        {
            get
            {
                return _HISerItemName;
            }
            set
            {
                OnHISerItemNameChanging(value);
                ReportPropertyChanging("HISerItemName");
                _HISerItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HISerItemName");
                OnHISerItemNameChanged();
            }
        }
        private global::System.String _HISerItemName;
        partial void OnHISerItemNameChanging(global::System.String value);
        partial void OnHISerItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HISerItemDesc
        {
            get
            {
                return _HISerItemDesc;
            }
            set
            {
                OnHISerItemDescChanging(value);
                ReportPropertyChanging("HISerItemDesc");
                _HISerItemDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HISerItemDesc");
                OnHISerItemDescChanged();
            }
        }
        private global::System.String _HISerItemDesc;
        partial void OnHISerItemDescChanging(global::System.String value);
        partial void OnHISerItemDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HISerItemUOM
        {
            get
            {
                return _HISerItemUOM;
            }
            set
            {
                OnHISerItemUOMChanging(value);
                ReportPropertyChanging("HISerItemUOM");
                _HISerItemUOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HISerItemUOM");
                OnHISerItemUOMChanged();
            }
        }
        private global::System.String _HISerItemUOM;
        partial void OnHISerItemUOMChanging(global::System.String value);
        partial void OnHISerItemUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HISerItem
        {
            get
            {
                return _V_HISerItem;
            }
            set
            {
                OnV_HISerItemChanging(value);
                ReportPropertyChanging("V_HISerItem");
                _V_HISerItem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HISerItem");
                OnV_HISerItemChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HISerItem;
        partial void OnV_HISerItemChanging(Nullable<global::System.Int64> value);
        partial void OnV_HISerItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerTypeID
        {
            get
            {
                return _MedSerTypeID;
            }
            set
            {
                OnMedSerTypeIDChanging(value);
                ReportPropertyChanging("MedSerTypeID");
                _MedSerTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerTypeID");
                OnMedSerTypeIDChanged();
            }
        }
        private global::System.Int64 _MedSerTypeID;
        partial void OnMedSerTypeIDChanging(global::System.Int64 value);
        partial void OnMedSerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquivMedService_HIServiceItem", "EquivMedService")]
        public EntityCollection<EquivMedService> EquivMedService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquivMedService>("SureHisModel.FK_EquivMedService_HIServiceItem", "EquivMedService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquivMedService>("SureHisModel.FK_EquivMedService_HIServiceItem", "EquivMedService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType")]
        public refMedicalServiceType refMedicalServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedicalServiceType> refMedicalServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedicalServiceType>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "refMedicalServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItems_HIServiceItem", "HIServiceItems")]
        public EntityCollection<HIServiceItems> HIServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HIServiceItems>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HIServiceItems>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HIServiceItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HIServiceItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HIServiceItems object.
        /// </summary>
        /// <param name="hISID">Initial value of the HISID property.</param>
        /// <param name="quotationID">Initial value of the QuotationID property.</param>
        /// <param name="hISerItemID">Initial value of the HISerItemID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="hIPaymentRate">Initial value of the HIPaymentRate property.</param>
        /// <param name="validDateFrom">Initial value of the ValidDateFrom property.</param>
        /// <param name="hISerItemUOM">Initial value of the HISerItemUOM property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static HIServiceItems CreateHIServiceItems(global::System.Int64 hISID, global::System.Int64 quotationID, global::System.Int64 hISerItemID, global::System.Double unitPrice, global::System.Double hIPaymentRate, global::System.DateTime validDateFrom, global::System.String hISerItemUOM, global::System.DateTime createdDate)
        {
            HIServiceItems hIServiceItems = new HIServiceItems();
            hIServiceItems.HISID = hISID;
            hIServiceItems.QuotationID = quotationID;
            hIServiceItems.HISerItemID = hISerItemID;
            hIServiceItems.UnitPrice = unitPrice;
            hIServiceItems.HIPaymentRate = hIPaymentRate;
            hIServiceItems.ValidDateFrom = validDateFrom;
            hIServiceItems.HISerItemUOM = hISerItemUOM;
            hIServiceItems.CreatedDate = createdDate;
            return hIServiceItems;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HISID
        {
            get
            {
                return _HISID;
            }
            set
            {
                if (_HISID != value)
                {
                    OnHISIDChanging(value);
                    ReportPropertyChanging("HISID");
                    _HISID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HISID");
                    OnHISIDChanged();
                }
            }
        }
        private global::System.Int64 _HISID;
        partial void OnHISIDChanging(global::System.Int64 value);
        partial void OnHISIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QuotationID
        {
            get
            {
                return _QuotationID;
            }
            set
            {
                OnQuotationIDChanging(value);
                ReportPropertyChanging("QuotationID");
                _QuotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuotationID");
                OnQuotationIDChanged();
            }
        }
        private global::System.Int64 _QuotationID;
        partial void OnQuotationIDChanging(global::System.Int64 value);
        partial void OnQuotationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HISerItemID
        {
            get
            {
                return _HISerItemID;
            }
            set
            {
                OnHISerItemIDChanging(value);
                ReportPropertyChanging("HISerItemID");
                _HISerItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HISerItemID");
                OnHISerItemIDChanged();
            }
        }
        private global::System.Int64 _HISerItemID;
        partial void OnHISerItemIDChanging(global::System.Int64 value);
        partial void OnHISerItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double HIPaymentRate
        {
            get
            {
                return _HIPaymentRate;
            }
            set
            {
                OnHIPaymentRateChanging(value);
                ReportPropertyChanging("HIPaymentRate");
                _HIPaymentRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIPaymentRate");
                OnHIPaymentRateChanged();
            }
        }
        private global::System.Double _HIPaymentRate;
        partial void OnHIPaymentRateChanging(global::System.Double value);
        partial void OnHIPaymentRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidDateFrom
        {
            get
            {
                return _ValidDateFrom;
            }
            set
            {
                OnValidDateFromChanging(value);
                ReportPropertyChanging("ValidDateFrom");
                _ValidDateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateFrom");
                OnValidDateFromChanged();
            }
        }
        private global::System.DateTime _ValidDateFrom;
        partial void OnValidDateFromChanging(global::System.DateTime value);
        partial void OnValidDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidDateTo
        {
            get
            {
                return _ValidDateTo;
            }
            set
            {
                OnValidDateToChanging(value);
                ReportPropertyChanging("ValidDateTo");
                _ValidDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateTo");
                OnValidDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidDateTo;
        partial void OnValidDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnValidDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HISerItemUOM
        {
            get
            {
                return _HISerItemUOM;
            }
            set
            {
                OnHISerItemUOMChanging(value);
                ReportPropertyChanging("HISerItemUOM");
                _HISerItemUOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HISerItemUOM");
                OnHISerItemUOMChanged();
            }
        }
        private global::System.String _HISerItemUOM;
        partial void OnHISerItemUOMChanging(global::System.String value);
        partial void OnHISerItemUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HISNotes
        {
            get
            {
                return _HISNotes;
            }
            set
            {
                OnHISNotesChanging(value);
                ReportPropertyChanging("HISNotes");
                _HISNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HISNotes");
                OnHISNotesChanged();
            }
        }
        private global::System.String _HISNotes;
        partial void OnHISNotesChanging(global::System.String value);
        partial void OnHISNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int64> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private Nullable<global::System.Int64> _LastUpdBy;
        partial void OnLastUpdByChanging(Nullable<global::System.Int64> value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItems_HIServiceItem", "HIServiceItem")]
        public HIServiceItem HIServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HIServiceItem> HIServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HIServiceItem>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HIServiceItem>("SureHisModel.FK_HIServiceItems_HIServiceItem", "HIServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItems_Quotation", "Quotation")]
        public Quotation Quotation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_HIServiceItems_Quotation", "Quotation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_HIServiceItems_Quotation", "Quotation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quotation> QuotationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_HIServiceItems_Quotation", "Quotation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quotation>("SureHisModel.FK_HIServiceItems_Quotation", "Quotation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HistoricalAuditData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HistoricalAuditData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HistoricalAuditData object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="keepTrackDtm">Initial value of the KeepTrackDtm property.</param>
        /// <param name="auditTblName">Initial value of the AuditTblName property.</param>
        /// <param name="auditRowNo">Initial value of the AuditRowNo property.</param>
        /// <param name="auditType">Initial value of the AuditType property.</param>
        public static HistoricalAuditData CreateHistoricalAuditData(global::System.Int64 id, global::System.DateTime keepTrackDtm, global::System.String auditTblName, global::System.Int64 auditRowNo, global::System.String auditType)
        {
            HistoricalAuditData historicalAuditData = new HistoricalAuditData();
            historicalAuditData.ID = id;
            historicalAuditData.KeepTrackDtm = keepTrackDtm;
            historicalAuditData.AuditTblName = auditTblName;
            historicalAuditData.AuditRowNo = auditRowNo;
            historicalAuditData.AuditType = auditType;
            return historicalAuditData;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int64 _ID;
        partial void OnIDChanging(global::System.Int64 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KeepTrackDtm
        {
            get
            {
                return _KeepTrackDtm;
            }
            set
            {
                OnKeepTrackDtmChanging(value);
                ReportPropertyChanging("KeepTrackDtm");
                _KeepTrackDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeepTrackDtm");
                OnKeepTrackDtmChanged();
            }
        }
        private global::System.DateTime _KeepTrackDtm;
        partial void OnKeepTrackDtmChanging(global::System.DateTime value);
        partial void OnKeepTrackDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DBUsr
        {
            get
            {
                return _DBUsr;
            }
            set
            {
                OnDBUsrChanging(value);
                ReportPropertyChanging("DBUsr");
                _DBUsr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DBUsr");
                OnDBUsrChanged();
            }
        }
        private global::System.String _DBUsr;
        partial void OnDBUsrChanging(global::System.String value);
        partial void OnDBUsrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AppUsr
        {
            get
            {
                return _AppUsr;
            }
            set
            {
                OnAppUsrChanging(value);
                ReportPropertyChanging("AppUsr");
                _AppUsr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AppUsr");
                OnAppUsrChanged();
            }
        }
        private global::System.String _AppUsr;
        partial void OnAppUsrChanging(global::System.String value);
        partial void OnAppUsrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HostName
        {
            get
            {
                return _HostName;
            }
            set
            {
                OnHostNameChanging(value);
                ReportPropertyChanging("HostName");
                _HostName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HostName");
                OnHostNameChanged();
            }
        }
        private global::System.String _HostName;
        partial void OnHostNameChanging(global::System.String value);
        partial void OnHostNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditTblName
        {
            get
            {
                return _AuditTblName;
            }
            set
            {
                OnAuditTblNameChanging(value);
                ReportPropertyChanging("AuditTblName");
                _AuditTblName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuditTblName");
                OnAuditTblNameChanged();
            }
        }
        private global::System.String _AuditTblName;
        partial void OnAuditTblNameChanging(global::System.String value);
        partial void OnAuditTblNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AuditRowNo
        {
            get
            {
                return _AuditRowNo;
            }
            set
            {
                OnAuditRowNoChanging(value);
                ReportPropertyChanging("AuditRowNo");
                _AuditRowNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AuditRowNo");
                OnAuditRowNoChanged();
            }
        }
        private global::System.Int64 _AuditRowNo;
        partial void OnAuditRowNoChanging(global::System.Int64 value);
        partial void OnAuditRowNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditType
        {
            get
            {
                return _AuditType;
            }
            set
            {
                OnAuditTypeChanging(value);
                ReportPropertyChanging("AuditType");
                _AuditType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AuditType");
                OnAuditTypeChanged();
            }
        }
        private global::System.String _AuditType;
        partial void OnAuditTypeChanging(global::System.String value);
        partial void OnAuditTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditDesc
        {
            get
            {
                return _AuditDesc;
            }
            set
            {
                OnAuditDescChanging(value);
                ReportPropertyChanging("AuditDesc");
                _AuditDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuditDesc");
                OnAuditDescChanged();
            }
        }
        private global::System.String _AuditDesc;
        partial void OnAuditDescChanging(global::System.String value);
        partial void OnAuditDescChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HosFeeTransDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HosFeeTransDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HosFeeTransDetails object.
        /// </summary>
        /// <param name="hosFeeTransDtlID">Initial value of the HosFeeTransDtlID property.</param>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        /// <param name="uOMID">Initial value of the UOMID property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="curCode">Initial value of the CurCode property.</param>
        /// <param name="exchangeRate">Initial value of the ExchangeRate property.</param>
        /// <param name="convertedAmount">Initial value of the ConvertedAmount property.</param>
        public static HosFeeTransDetails CreateHosFeeTransDetails(global::System.Int64 hosFeeTransDtlID, global::System.Int64 medSerID, global::System.String uOMID, global::System.Byte qty, global::System.Double unitPrice, global::System.Double amount, global::System.String curCode, global::System.Double exchangeRate, global::System.Double convertedAmount)
        {
            HosFeeTransDetails hosFeeTransDetails = new HosFeeTransDetails();
            hosFeeTransDetails.HosFeeTransDtlID = hosFeeTransDtlID;
            hosFeeTransDetails.MedSerID = medSerID;
            hosFeeTransDetails.UOMID = uOMID;
            hosFeeTransDetails.Qty = qty;
            hosFeeTransDetails.UnitPrice = unitPrice;
            hosFeeTransDetails.Amount = amount;
            hosFeeTransDetails.CurCode = curCode;
            hosFeeTransDetails.ExchangeRate = exchangeRate;
            hosFeeTransDetails.ConvertedAmount = convertedAmount;
            return hosFeeTransDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosFeeTransDtlID
        {
            get
            {
                return _HosFeeTransDtlID;
            }
            set
            {
                if (_HosFeeTransDtlID != value)
                {
                    OnHosFeeTransDtlIDChanging(value);
                    ReportPropertyChanging("HosFeeTransDtlID");
                    _HosFeeTransDtlID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosFeeTransDtlID");
                    OnHosFeeTransDtlIDChanged();
                }
            }
        }
        private global::System.Int64 _HosFeeTransDtlID;
        partial void OnHosFeeTransDtlIDChanging(global::System.Int64 value);
        partial void OnHosFeeTransDtlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosFeeTransID
        {
            get
            {
                return _HosFeeTransID;
            }
            set
            {
                OnHosFeeTransIDChanging(value);
                ReportPropertyChanging("HosFeeTransID");
                _HosFeeTransID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosFeeTransID");
                OnHosFeeTransIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosFeeTransID;
        partial void OnHosFeeTransIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosFeeTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UOMID
        {
            get
            {
                return _UOMID;
            }
            set
            {
                OnUOMIDChanging(value);
                ReportPropertyChanging("UOMID");
                _UOMID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UOMID");
                OnUOMIDChanged();
            }
        }
        private global::System.String _UOMID;
        partial void OnUOMIDChanging(global::System.String value);
        partial void OnUOMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Byte _Qty;
        partial void OnQtyChanging(global::System.Byte value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HIUnitPrice
        {
            get
            {
                return _HIUnitPrice;
            }
            set
            {
                OnHIUnitPriceChanging(value);
                ReportPropertyChanging("HIUnitPrice");
                _HIUnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIUnitPrice");
                OnHIUnitPriceChanged();
            }
        }
        private Nullable<global::System.Double> _HIUnitPrice;
        partial void OnHIUnitPriceChanging(Nullable<global::System.Double> value);
        partial void OnHIUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Double _Amount;
        partial void OnAmountChanging(global::System.Double value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCode
        {
            get
            {
                return _CurCode;
            }
            set
            {
                OnCurCodeChanging(value);
                ReportPropertyChanging("CurCode");
                _CurCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurCode");
                OnCurCodeChanged();
            }
        }
        private global::System.String _CurCode;
        partial void OnCurCodeChanging(global::System.String value);
        partial void OnCurCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ExchangeRate
        {
            get
            {
                return _ExchangeRate;
            }
            set
            {
                OnExchangeRateChanging(value);
                ReportPropertyChanging("ExchangeRate");
                _ExchangeRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExchangeRate");
                OnExchangeRateChanged();
            }
        }
        private global::System.Double _ExchangeRate;
        partial void OnExchangeRateChanging(global::System.Double value);
        partial void OnExchangeRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ConvertedAmount
        {
            get
            {
                return _ConvertedAmount;
            }
            set
            {
                OnConvertedAmountChanging(value);
                ReportPropertyChanging("ConvertedAmount");
                _ConvertedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConvertedAmount");
                OnConvertedAmountChanged();
            }
        }
        private global::System.Double _ConvertedAmount;
        partial void OnConvertedAmountChanging(global::System.Double value);
        partial void OnConvertedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HIAmount
        {
            get
            {
                return _HIAmount;
            }
            set
            {
                OnHIAmountChanging(value);
                ReportPropertyChanging("HIAmount");
                _HIAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIAmount");
                OnHIAmountChanged();
            }
        }
        private Nullable<global::System.Double> _HIAmount;
        partial void OnHIAmountChanging(Nullable<global::System.Double> value);
        partial void OnHIAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PtPriceDifference
        {
            get
            {
                return _PtPriceDifference;
            }
            set
            {
                OnPtPriceDifferenceChanging(value);
                ReportPropertyChanging("PtPriceDifference");
                _PtPriceDifference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtPriceDifference");
                OnPtPriceDifferenceChanged();
            }
        }
        private Nullable<global::System.Double> _PtPriceDifference;
        partial void OnPtPriceDifferenceChanging(Nullable<global::System.Double> value);
        partial void OnPtPriceDifferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HIPaymentRate
        {
            get
            {
                return _HIPaymentRate;
            }
            set
            {
                OnHIPaymentRateChanging(value);
                ReportPropertyChanging("HIPaymentRate");
                _HIPaymentRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIPaymentRate");
                OnHIPaymentRateChanged();
            }
        }
        private Nullable<global::System.Double> _HIPaymentRate;
        partial void OnHIPaymentRateChanging(Nullable<global::System.Double> value);
        partial void OnHIPaymentRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> HIRebateAmount
        {
            get
            {
                return _HIRebateAmount;
            }
            set
            {
                OnHIRebateAmountChanging(value);
                ReportPropertyChanging("HIRebateAmount");
                _HIRebateAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HIRebateAmount");
                OnHIRebateAmountChanged();
            }
        }
        private Nullable<global::System.Double> _HIRebateAmount;
        partial void OnHIRebateAmountChanging(Nullable<global::System.Double> value);
        partial void OnHIRebateAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PtAmountCopay
        {
            get
            {
                return _PtAmountCopay;
            }
            set
            {
                OnPtAmountCopayChanging(value);
                ReportPropertyChanging("PtAmountCopay");
                _PtAmountCopay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtAmountCopay");
                OnPtAmountCopayChanged();
            }
        }
        private Nullable<global::System.Double> _PtAmountCopay;
        partial void OnPtAmountCopayChanging(Nullable<global::System.Double> value);
        partial void OnPtAmountCopayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PtAmountPayRate
        {
            get
            {
                return _PtAmountPayRate;
            }
            set
            {
                OnPtAmountPayRateChanging(value);
                ReportPropertyChanging("PtAmountPayRate");
                _PtAmountPayRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtAmountPayRate");
                OnPtAmountPayRateChanged();
            }
        }
        private Nullable<global::System.Double> _PtAmountPayRate;
        partial void OnPtAmountPayRateChanging(Nullable<global::System.Double> value);
        partial void OnPtAmountPayRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Surcharge
        {
            get
            {
                return _Surcharge;
            }
            set
            {
                OnSurchargeChanging(value);
                ReportPropertyChanging("Surcharge");
                _Surcharge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Surcharge");
                OnSurchargeChanged();
            }
        }
        private Nullable<global::System.Double> _Surcharge;
        partial void OnSurchargeChanging(Nullable<global::System.Double> value);
        partial void OnSurchargeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AmountOther
        {
            get
            {
                return _AmountOther;
            }
            set
            {
                OnAmountOtherChanging(value);
                ReportPropertyChanging("AmountOther");
                _AmountOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountOther");
                OnAmountOtherChanged();
            }
        }
        private Nullable<global::System.Double> _AmountOther;
        partial void OnAmountOtherChanging(Nullable<global::System.Double> value);
        partial void OnAmountOtherChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Double> value);
        partial void OnDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AmountDiscount
        {
            get
            {
                return _AmountDiscount;
            }
            set
            {
                OnAmountDiscountChanging(value);
                ReportPropertyChanging("AmountDiscount");
                _AmountDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AmountDiscount");
                OnAmountDiscountChanged();
            }
        }
        private Nullable<global::System.Double> _AmountDiscount;
        partial void OnAmountDiscountChanging(Nullable<global::System.Double> value);
        partial void OnAmountDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PtSumAmount
        {
            get
            {
                return _PtSumAmount;
            }
            set
            {
                OnPtSumAmountChanging(value);
                ReportPropertyChanging("PtSumAmount");
                _PtSumAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtSumAmount");
                OnPtSumAmountChanged();
            }
        }
        private Nullable<global::System.Double> _PtSumAmount;
        partial void OnPtSumAmountChanging(Nullable<global::System.Double> value);
        partial void OnPtSumAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosFeeTransDtlRemarks
        {
            get
            {
                return _HosFeeTransDtlRemarks;
            }
            set
            {
                OnHosFeeTransDtlRemarksChanging(value);
                ReportPropertyChanging("HosFeeTransDtlRemarks");
                _HosFeeTransDtlRemarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosFeeTransDtlRemarks");
                OnHosFeeTransDtlRemarksChanged();
            }
        }
        private global::System.String _HosFeeTransDtlRemarks;
        partial void OnHosFeeTransDtlRemarksChanging(global::System.String value);
        partial void OnHosFeeTransDtlRemarksChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HospitalFeeTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospitalFeeTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospitalFeeTransaction object.
        /// </summary>
        /// <param name="hosFeeTransID">Initial value of the HosFeeTransID property.</param>
        /// <param name="transID">Initial value of the TransID property.</param>
        /// <param name="receiptNo">Initial value of the ReceiptNo property.</param>
        /// <param name="v_PmtMethod">Initial value of the V_PmtMethod property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static HospitalFeeTransaction CreateHospitalFeeTransaction(global::System.Int64 hosFeeTransID, global::System.Int64 transID, global::System.String receiptNo, global::System.Int64 v_PmtMethod, global::System.Int64 estEmpID, global::System.DateTime modifiedDate)
        {
            HospitalFeeTransaction hospitalFeeTransaction = new HospitalFeeTransaction();
            hospitalFeeTransaction.HosFeeTransID = hosFeeTransID;
            hospitalFeeTransaction.TransID = transID;
            hospitalFeeTransaction.ReceiptNo = receiptNo;
            hospitalFeeTransaction.V_PmtMethod = v_PmtMethod;
            hospitalFeeTransaction.EstEmpID = estEmpID;
            hospitalFeeTransaction.ModifiedDate = modifiedDate;
            return hospitalFeeTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosFeeTransID
        {
            get
            {
                return _HosFeeTransID;
            }
            set
            {
                if (_HosFeeTransID != value)
                {
                    OnHosFeeTransIDChanging(value);
                    ReportPropertyChanging("HosFeeTransID");
                    _HosFeeTransID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosFeeTransID");
                    OnHosFeeTransIDChanged();
                }
            }
        }
        private global::System.Int64 _HosFeeTransID;
        partial void OnHosFeeTransIDChanging(global::System.Int64 value);
        partial void OnHosFeeTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransID
        {
            get
            {
                return _TransID;
            }
            set
            {
                OnTransIDChanging(value);
                ReportPropertyChanging("TransID");
                _TransID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransID");
                OnTransIDChanged();
            }
        }
        private global::System.Int64 _TransID;
        partial void OnTransIDChanging(global::System.Int64 value);
        partial void OnTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IntRcptTypeID
        {
            get
            {
                return _IntRcptTypeID;
            }
            set
            {
                OnIntRcptTypeIDChanging(value);
                ReportPropertyChanging("IntRcptTypeID");
                _IntRcptTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntRcptTypeID");
                OnIntRcptTypeIDChanged();
            }
        }
        private Nullable<global::System.Byte> _IntRcptTypeID;
        partial void OnIntRcptTypeIDChanging(Nullable<global::System.Byte> value);
        partial void OnIntRcptTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReceiptNo
        {
            get
            {
                return _ReceiptNo;
            }
            set
            {
                OnReceiptNoChanging(value);
                ReportPropertyChanging("ReceiptNo");
                _ReceiptNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReceiptNo");
                OnReceiptNoChanged();
            }
        }
        private global::System.String _ReceiptNo;
        partial void OnReceiptNoChanging(global::System.String value);
        partial void OnReceiptNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManualReceiptNo
        {
            get
            {
                return _ManualReceiptNo;
            }
            set
            {
                OnManualReceiptNoChanging(value);
                ReportPropertyChanging("ManualReceiptNo");
                _ManualReceiptNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManualReceiptNo");
                OnManualReceiptNoChanged();
            }
        }
        private global::System.String _ManualReceiptNo;
        partial void OnManualReceiptNoChanging(global::System.String value);
        partial void OnManualReceiptNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransItemRemarkd
        {
            get
            {
                return _TransItemRemarkd;
            }
            set
            {
                OnTransItemRemarkdChanging(value);
                ReportPropertyChanging("TransItemRemarkd");
                _TransItemRemarkd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransItemRemarkd");
                OnTransItemRemarkdChanged();
            }
        }
        private global::System.String _TransItemRemarkd;
        partial void OnTransItemRemarkdChanging(global::System.String value);
        partial void OnTransItemRemarkdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                OnInvoiceIDChanging(value);
                ReportPropertyChanging("InvoiceID");
                _InvoiceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoiceID");
                OnInvoiceIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InvoiceID;
        partial void OnInvoiceIDChanging(Nullable<global::System.Int64> value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DocType
        {
            get
            {
                return _V_DocType;
            }
            set
            {
                OnV_DocTypeChanging(value);
                ReportPropertyChanging("V_DocType");
                _V_DocType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DocType");
                OnV_DocTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DocType;
        partial void OnV_DocTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_DocTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_PmtMethod
        {
            get
            {
                return _V_PmtMethod;
            }
            set
            {
                OnV_PmtMethodChanging(value);
                ReportPropertyChanging("V_PmtMethod");
                _V_PmtMethod = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PmtMethod");
                OnV_PmtMethodChanged();
            }
        }
        private global::System.Int64 _V_PmtMethod;
        partial void OnV_PmtMethodChanging(global::System.Int64 value);
        partial void OnV_PmtMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurCode
        {
            get
            {
                return _CurCode;
            }
            set
            {
                OnCurCodeChanging(value);
                ReportPropertyChanging("CurCode");
                _CurCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurCode");
                OnCurCodeChanged();
            }
        }
        private global::System.String _CurCode;
        partial void OnCurCodeChanging(global::System.String value);
        partial void OnCurCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransSummary
        {
            get
            {
                return _TransSummary;
            }
            set
            {
                OnTransSummaryChanging(value);
                ReportPropertyChanging("TransSummary");
                _TransSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransSummary");
                OnTransSummaryChanged();
            }
        }
        private global::System.String _TransSummary;
        partial void OnTransSummaryChanging(global::System.String value);
        partial void OnTransSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices")]
        public PatientInvoices PatientInvoices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientInvoices>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientInvoices>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientInvoices> PatientInvoicesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientInvoices>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientInvoices>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "PatientInvoices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalClaimService_HospitalFeeTransaction", "MedicalClaimService")]
        public EntityCollection<MedicalClaimService> MedicalClaimService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "MedicalClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "MedicalClaimService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HospitalizationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospitalizationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospitalizationHistory object.
        /// </summary>
        /// <param name="hosHisID">Initial value of the HosHisID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="hosID">Initial value of the HosID property.</param>
        /// <param name="hCFERecAdmissionTypeID">Initial value of the HCFERecAdmissionTypeID property.</param>
        /// <param name="iAdmDiagnosisCode">Initial value of the IAdmDiagnosisCode property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static HospitalizationHistory CreateHospitalizationHistory(global::System.Int64 hosHisID, global::System.Int64 ptComMedRecID, global::System.Int64 hosID, global::System.Int64 hCFERecAdmissionTypeID, global::System.String iAdmDiagnosisCode, global::System.DateTime modifiedDate)
        {
            HospitalizationHistory hospitalizationHistory = new HospitalizationHistory();
            hospitalizationHistory.HosHisID = hosHisID;
            hospitalizationHistory.PtComMedRecID = ptComMedRecID;
            hospitalizationHistory.HosID = hosID;
            hospitalizationHistory.HCFERecAdmissionTypeID = hCFERecAdmissionTypeID;
            hospitalizationHistory.IAdmDiagnosisCode = iAdmDiagnosisCode;
            hospitalizationHistory.ModifiedDate = modifiedDate;
            return hospitalizationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosHisID
        {
            get
            {
                return _HosHisID;
            }
            set
            {
                if (_HosHisID != value)
                {
                    OnHosHisIDChanging(value);
                    ReportPropertyChanging("HosHisID");
                    _HosHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosHisID");
                    OnHosHisIDChanged();
                }
            }
        }
        private global::System.Int64 _HosHisID;
        partial void OnHosHisIDChanging(global::System.Int64 value);
        partial void OnHosHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private global::System.Int64 _HosID;
        partial void OnHosIDChanging(global::System.Int64 value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCFERecAdmissionTypeID
        {
            get
            {
                return _HCFERecAdmissionTypeID;
            }
            set
            {
                OnHCFERecAdmissionTypeIDChanging(value);
                ReportPropertyChanging("HCFERecAdmissionTypeID");
                _HCFERecAdmissionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFERecAdmissionTypeID");
                OnHCFERecAdmissionTypeIDChanged();
            }
        }
        private global::System.Int64 _HCFERecAdmissionTypeID;
        partial void OnHCFERecAdmissionTypeIDChanging(global::System.Int64 value);
        partial void OnHCFERecAdmissionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdmissionReason
        {
            get
            {
                return _AdmissionReason;
            }
            set
            {
                OnAdmissionReasonChanging(value);
                ReportPropertyChanging("AdmissionReason");
                _AdmissionReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdmissionReason");
                OnAdmissionReasonChanged();
            }
        }
        private global::System.String _AdmissionReason;
        partial void OnAdmissionReasonChanging(global::System.String value);
        partial void OnAdmissionReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IAdmReferralTypeCode
        {
            get
            {
                return _IAdmReferralTypeCode;
            }
            set
            {
                OnIAdmReferralTypeCodeChanging(value);
                ReportPropertyChanging("IAdmReferralTypeCode");
                _IAdmReferralTypeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IAdmReferralTypeCode");
                OnIAdmReferralTypeCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _IAdmReferralTypeCode;
        partial void OnIAdmReferralTypeCodeChanging(Nullable<global::System.Int64> value);
        partial void OnIAdmReferralTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IAdmDiagnosisCode
        {
            get
            {
                return _IAdmDiagnosisCode;
            }
            set
            {
                OnIAdmDiagnosisCodeChanging(value);
                ReportPropertyChanging("IAdmDiagnosisCode");
                _IAdmDiagnosisCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IAdmDiagnosisCode");
                OnIAdmDiagnosisCodeChanged();
            }
        }
        private global::System.String _IAdmDiagnosisCode;
        partial void OnIAdmDiagnosisCodeChanging(global::System.String value);
        partial void OnIAdmDiagnosisCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreatmentResult
        {
            get
            {
                return _TreatmentResult;
            }
            set
            {
                OnTreatmentResultChanging(value);
                ReportPropertyChanging("TreatmentResult");
                _TreatmentResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TreatmentResult");
                OnTreatmentResultChanged();
            }
        }
        private global::System.String _TreatmentResult;
        partial void OnTreatmentResultChanging(global::System.String value);
        partial void OnTreatmentResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DischanrgeReason
        {
            get
            {
                return _DischanrgeReason;
            }
            set
            {
                OnDischanrgeReasonChanging(value);
                ReportPropertyChanging("DischanrgeReason");
                _DischanrgeReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DischanrgeReason");
                OnDischanrgeReasonChanged();
            }
        }
        private global::System.String _DischanrgeReason;
        partial void OnDischanrgeReasonChanging(global::System.String value);
        partial void OnDischanrgeReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HHNotes
        {
            get
            {
                return _HHNotes;
            }
            set
            {
                OnHHNotesChanging(value);
                ReportPropertyChanging("HHNotes");
                _HHNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HHNotes");
                OnHHNotesChanged();
            }
        }
        private global::System.String _HHNotes;
        partial void OnHHNotesChanging(global::System.String value);
        partial void OnHHNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HospitalizationHistory_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmissionType", "refAdmissionType")]
        public refAdmissionType refAdmissionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "refAdmissionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "refAdmissionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAdmissionType> refAdmissionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "refAdmissionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAdmissionType>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "refAdmissionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType")]
        public refAdmReferralType refAdmReferralType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAdmReferralType> refAdmReferralTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAdmReferralType>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "refAdmReferralType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistoryDetails")]
        public EntityCollection<HospitalizationHistoryDetails> HospitalizationHistoryDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalizationHistoryDetails>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistoryDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalizationHistoryDetails>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistoryDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HospitalizationHistoryDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospitalizationHistoryDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospitalizationHistoryDetails object.
        /// </summary>
        /// <param name="hosHisDetailID">Initial value of the HosHisDetailID property.</param>
        /// <param name="hosHisID">Initial value of the HosHisID property.</param>
        /// <param name="dateTimeTransfer">Initial value of the DateTimeTransfer property.</param>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        public static HospitalizationHistoryDetails CreateHospitalizationHistoryDetails(global::System.Int64 hosHisDetailID, global::System.Int64 hosHisID, global::System.DateTime dateTimeTransfer, global::System.Int64 deptID)
        {
            HospitalizationHistoryDetails hospitalizationHistoryDetails = new HospitalizationHistoryDetails();
            hospitalizationHistoryDetails.HosHisDetailID = hosHisDetailID;
            hospitalizationHistoryDetails.HosHisID = hosHisID;
            hospitalizationHistoryDetails.DateTimeTransfer = dateTimeTransfer;
            hospitalizationHistoryDetails.DeptID = deptID;
            return hospitalizationHistoryDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosHisDetailID
        {
            get
            {
                return _HosHisDetailID;
            }
            set
            {
                if (_HosHisDetailID != value)
                {
                    OnHosHisDetailIDChanging(value);
                    ReportPropertyChanging("HosHisDetailID");
                    _HosHisDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosHisDetailID");
                    OnHosHisDetailIDChanged();
                }
            }
        }
        private global::System.Int64 _HosHisDetailID;
        partial void OnHosHisDetailIDChanging(global::System.Int64 value);
        partial void OnHosHisDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosHisID
        {
            get
            {
                return _HosHisID;
            }
            set
            {
                OnHosHisIDChanging(value);
                ReportPropertyChanging("HosHisID");
                _HosHisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosHisID");
                OnHosHisIDChanged();
            }
        }
        private global::System.Int64 _HosHisID;
        partial void OnHosHisIDChanging(global::System.Int64 value);
        partial void OnHosHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTimeTransfer
        {
            get
            {
                return _DateTimeTransfer;
            }
            set
            {
                OnDateTimeTransferChanging(value);
                ReportPropertyChanging("DateTimeTransfer");
                _DateTimeTransfer = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTimeTransfer");
                OnDateTimeTransferChanged();
            }
        }
        private global::System.DateTime _DateTimeTransfer;
        partial void OnDateTimeTransferChanging(global::System.DateTime value);
        partial void OnDateTimeTransferChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HosHisDetailNotes
        {
            get
            {
                return _HosHisDetailNotes;
            }
            set
            {
                OnHosHisDetailNotesChanging(value);
                ReportPropertyChanging("HosHisDetailNotes");
                _HosHisDetailNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HosHisDetailNotes");
                OnHosHisDetailNotesChanged();
            }
        }
        private global::System.String _HosHisDetailNotes;
        partial void OnHosHisDetailNotesChanging(global::System.String value);
        partial void OnHosHisDetailNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private global::System.Int64 _DeptID;
        partial void OnDeptIDChanging(global::System.Int64 value);
        partial void OnDeptIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory")]
        public HospitalizationHistory HospitalizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalizationHistory> HospitalizationHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistoryDetails_HospitalizationHistory", "HospitalizationHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HospitalSpecialist")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HospitalSpecialist : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HospitalSpecialist object.
        /// </summary>
        /// <param name="hosDeptID">Initial value of the HosDeptID property.</param>
        /// <param name="hosID">Initial value of the HosID property.</param>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        public static HospitalSpecialist CreateHospitalSpecialist(global::System.Int64 hosDeptID, global::System.Int64 hosID, global::System.Int64 deptID)
        {
            HospitalSpecialist hospitalSpecialist = new HospitalSpecialist();
            hospitalSpecialist.HosDeptID = hosDeptID;
            hospitalSpecialist.HosID = hosID;
            hospitalSpecialist.DeptID = deptID;
            return hospitalSpecialist;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                if (_HosDeptID != value)
                {
                    OnHosDeptIDChanging(value);
                    ReportPropertyChanging("HosDeptID");
                    _HosDeptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosDeptID");
                    OnHosDeptIDChanged();
                }
            }
        }
        private global::System.Int64 _HosDeptID;
        partial void OnHosDeptIDChanging(global::System.Int64 value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private global::System.Int64 _HosID;
        partial void OnHosIDChanging(global::System.Int64 value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private global::System.Int64 _DeptID;
        partial void OnDeptIDChanging(global::System.Int64 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ClinicalTrial_HospitalSpecialist", "ClinicalTrial")]
        public EntityCollection<ClinicalTrial> ClinicalTrial
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClinicalTrial>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "ClinicalTrial");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClinicalTrial>("SureHisModel.FK_ClinicalTrial_HospitalSpecialist", "ClinicalTrial", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_HospitalSpecialist", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SureHisModel.FK_Employee_HospitalSpecialist", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SureHisModel.FK_Employee_HospitalSpecialist", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalSpecialist_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HospitalSpecialist_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalEncounter_HospitalSpecialist", "MedicalEncounter")]
        public EntityCollection<MedicalEncounter> MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalEncounter>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalEncounter>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedSerInDept_HospitalSpecialist", "MedSerInDept")]
        public EntityCollection<MedSerInDept> MedSerInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedSerInDept>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "MedSerInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedSerInDept>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "MedSerInDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WardInDept_HospitalSpecialist", "WardInDept")]
        public EntityCollection<WardInDept> WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WardInDept>("SureHisModel.FK_WardInDept_HospitalSpecialist", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WardInDept>("SureHisModel.FK_WardInDept_HospitalSpecialist", "WardInDept", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_HospitalSpecialist", "WorkingSchedule")]
        public EntityCollection<WorkingSchedule> WorkingSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "WorkingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "WorkingSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="HosRanking")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HosRanking : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HosRanking object.
        /// </summary>
        /// <param name="hosRankID">Initial value of the HosRankID property.</param>
        /// <param name="hosID">Initial value of the HosID property.</param>
        /// <param name="v_HospitalType">Initial value of the V_HospitalType property.</param>
        public static HosRanking CreateHosRanking(global::System.Int64 hosRankID, global::System.Int64 hosID, global::System.Int64 v_HospitalType)
        {
            HosRanking hosRanking = new HosRanking();
            hosRanking.HosRankID = hosRankID;
            hosRanking.HosID = hosID;
            hosRanking.V_HospitalType = v_HospitalType;
            return hosRanking;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosRankID
        {
            get
            {
                return _HosRankID;
            }
            set
            {
                if (_HosRankID != value)
                {
                    OnHosRankIDChanging(value);
                    ReportPropertyChanging("HosRankID");
                    _HosRankID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HosRankID");
                    OnHosRankIDChanged();
                }
            }
        }
        private global::System.Int64 _HosRankID;
        partial void OnHosRankIDChanging(global::System.Int64 value);
        partial void OnHosRankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private global::System.Int64 _HosID;
        partial void OnHosIDChanging(global::System.Int64 value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfRecog
        {
            get
            {
                return _DateOfRecog;
            }
            set
            {
                OnDateOfRecogChanging(value);
                ReportPropertyChanging("DateOfRecog");
                _DateOfRecog = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRecog");
                OnDateOfRecogChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfRecog;
        partial void OnDateOfRecogChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfRecogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_HospitalType
        {
            get
            {
                return _V_HospitalType;
            }
            set
            {
                OnV_HospitalTypeChanging(value);
                ReportPropertyChanging("V_HospitalType");
                _V_HospitalType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HospitalType");
                OnV_HospitalTypeChanged();
            }
        }
        private global::System.Int64 _V_HospitalType;
        partial void OnV_HospitalTypeChanging(global::System.Int64 value);
        partial void OnV_HospitalTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HosRanking_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HosRanking_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HosRanking_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_HosRanking_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_HosRanking_HCProvider", "HCProvider", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ICD10")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ICD10 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ICD10 object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="iCDID">Initial value of the ICDID property.</param>
        /// <param name="iCDCode">Initial value of the ICDCode property.</param>
        /// <param name="diseaseName">Initial value of the DiseaseName property.</param>
        /// <param name="diseaseNameVNese">Initial value of the DiseaseNameVNese property.</param>
        public static ICD10 CreateICD10(global::System.Int64 groupID, global::System.Int64 iCDID, global::System.String iCDCode, global::System.String diseaseName, global::System.String diseaseNameVNese)
        {
            ICD10 iCD10 = new ICD10();
            iCD10.GroupID = groupID;
            iCD10.ICDID = iCDID;
            iCD10.ICDCode = iCDCode;
            iCD10.DiseaseName = diseaseName;
            iCD10.DiseaseNameVNese = diseaseNameVNese;
            return iCD10;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                OnGroupIDChanging(value);
                ReportPropertyChanging("GroupID");
                _GroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupID");
                OnGroupIDChanged();
            }
        }
        private global::System.Int64 _GroupID;
        partial void OnGroupIDChanging(global::System.Int64 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PICDID
        {
            get
            {
                return _PICDID;
            }
            set
            {
                OnPICDIDChanging(value);
                ReportPropertyChanging("PICDID");
                _PICDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PICDID");
                OnPICDIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PICDID;
        partial void OnPICDIDChanging(Nullable<global::System.Int64> value);
        partial void OnPICDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ICDID
        {
            get
            {
                return _ICDID;
            }
            set
            {
                if (_ICDID != value)
                {
                    OnICDIDChanging(value);
                    ReportPropertyChanging("ICDID");
                    _ICDID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ICDID");
                    OnICDIDChanged();
                }
            }
        }
        private global::System.Int64 _ICDID;
        partial void OnICDIDChanging(global::System.Int64 value);
        partial void OnICDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ICDCode
        {
            get
            {
                return _ICDCode;
            }
            set
            {
                OnICDCodeChanging(value);
                ReportPropertyChanging("ICDCode");
                _ICDCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ICDCode");
                OnICDCodeChanged();
            }
        }
        private global::System.String _ICDCode;
        partial void OnICDCodeChanging(global::System.String value);
        partial void OnICDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiseaseName
        {
            get
            {
                return _DiseaseName;
            }
            set
            {
                OnDiseaseNameChanging(value);
                ReportPropertyChanging("DiseaseName");
                _DiseaseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiseaseName");
                OnDiseaseNameChanged();
            }
        }
        private global::System.String _DiseaseName;
        partial void OnDiseaseNameChanging(global::System.String value);
        partial void OnDiseaseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiseaseNameVNese
        {
            get
            {
                return _DiseaseNameVNese;
            }
            set
            {
                OnDiseaseNameVNeseChanging(value);
                ReportPropertyChanging("DiseaseNameVNese");
                _DiseaseNameVNese = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiseaseNameVNese");
                OnDiseaseNameVNeseChanged();
            }
        }
        private global::System.String _DiseaseNameVNese;
        partial void OnDiseaseNameVNeseChanging(global::System.String value);
        partial void OnDiseaseNameVNeseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiseaseNameVNs
        {
            get
            {
                return _DiseaseNameVNs;
            }
            set
            {
                OnDiseaseNameVNsChanging(value);
                ReportPropertyChanging("DiseaseNameVNs");
                _DiseaseNameVNs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiseaseNameVNs");
                OnDiseaseNameVNsChanged();
            }
        }
        private global::System.String _DiseaseNameVNs;
        partial void OnDiseaseNameVNsChanging(global::System.String value);
        partial void OnDiseaseNameVNsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MOHICDCode
        {
            get
            {
                return _MOHICDCode;
            }
            set
            {
                OnMOHICDCodeChanging(value);
                ReportPropertyChanging("MOHICDCode");
                _MOHICDCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MOHICDCode");
                OnMOHICDCodeChanged();
            }
        }
        private global::System.String _MOHICDCode;
        partial void OnMOHICDCodeChanging(global::System.String value);
        partial void OnMOHICDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MOHICDCodeAdd
        {
            get
            {
                return _MOHICDCodeAdd;
            }
            set
            {
                OnMOHICDCodeAddChanging(value);
                ReportPropertyChanging("MOHICDCodeAdd");
                _MOHICDCodeAdd = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MOHICDCodeAdd");
                OnMOHICDCodeAddChanged();
            }
        }
        private global::System.String _MOHICDCodeAdd;
        partial void OnMOHICDCodeAddChanging(global::System.String value);
        partial void OnMOHICDCodeAddChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmp_ICD10", "DrPrescriptionTmp")]
        public EntityCollection<DrPrescriptionTmp> DrPrescriptionTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "DrPrescriptionTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmp>("SureHisModel.FK_DrPrescriptionTmp_ICD10", "DrPrescriptionTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICD10_ICD10", "ICD101")]
        public EntityCollection<ICD10> ICD101
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD101");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD101", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICD10_ICD10", "ICD10")]
        public ICD10 ICD102
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD102Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_ICD10_ICD10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICD10_ICDGroup", "ICDGroup")]
        public ICDGroup ICDGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDGroup>("SureHisModel.FK_ICD10_ICDGroup", "ICDGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDGroup>("SureHisModel.FK_ICD10_ICDGroup", "ICDGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICDGroup> ICDGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDGroup>("SureHisModel.FK_ICD10_ICDGroup", "ICDGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICDGroup>("SureHisModel.FK_ICD10_ICDGroup", "ICDGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedEnctrDiagnosis_IDC10", "MedEnctrDiagnosis")]
        public EntityCollection<MedEnctrDiagnosis> MedEnctrDiagnosis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedEnctrDiagnosis>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "MedEnctrDiagnosis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedEnctrDiagnosis>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "MedEnctrDiagnosis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_ICD10", "Prescription")]
        public EntityCollection<Prescription> Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("SureHisModel.FK_Prescription_ICD10", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("SureHisModel.FK_Prescription_ICD10", "Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecifiedParaclinical_ICD10", "SpecifiedParaclinical")]
        public EntityCollection<SpecifiedParaclinical> SpecifiedParaclinical
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecifiedParaclinical>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "SpecifiedParaclinical");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecifiedParaclinical>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "SpecifiedParaclinical", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SymptomIndicator_IDC10", "SymptomIndicator")]
        public EntityCollection<SymptomIndicator> SymptomIndicator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SymptomIndicator>("SureHisModel.FK_SymptomIndicator_IDC10", "SymptomIndicator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SymptomIndicator>("SureHisModel.FK_SymptomIndicator_IDC10", "SymptomIndicator", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ICDChapter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ICDChapter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ICDChapter object.
        /// </summary>
        /// <param name="chapterID">Initial value of the ChapterID property.</param>
        /// <param name="chapterNo">Initial value of the ChapterNo property.</param>
        /// <param name="chapterCode">Initial value of the ChapterCode property.</param>
        /// <param name="chapterName">Initial value of the ChapterName property.</param>
        /// <param name="chapterNameVNese">Initial value of the ChapterNameVNese property.</param>
        public static ICDChapter CreateICDChapter(global::System.Byte chapterID, global::System.String chapterNo, global::System.String chapterCode, global::System.String chapterName, global::System.String chapterNameVNese)
        {
            ICDChapter iCDChapter = new ICDChapter();
            iCDChapter.ChapterID = chapterID;
            iCDChapter.ChapterNo = chapterNo;
            iCDChapter.ChapterCode = chapterCode;
            iCDChapter.ChapterName = chapterName;
            iCDChapter.ChapterNameVNese = chapterNameVNese;
            return iCDChapter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                if (_ChapterID != value)
                {
                    OnChapterIDChanging(value);
                    ReportPropertyChanging("ChapterID");
                    _ChapterID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChapterID");
                    OnChapterIDChanged();
                }
            }
        }
        private global::System.Byte _ChapterID;
        partial void OnChapterIDChanging(global::System.Byte value);
        partial void OnChapterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChapterNo
        {
            get
            {
                return _ChapterNo;
            }
            set
            {
                OnChapterNoChanging(value);
                ReportPropertyChanging("ChapterNo");
                _ChapterNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChapterNo");
                OnChapterNoChanged();
            }
        }
        private global::System.String _ChapterNo;
        partial void OnChapterNoChanging(global::System.String value);
        partial void OnChapterNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChapterCode
        {
            get
            {
                return _ChapterCode;
            }
            set
            {
                OnChapterCodeChanging(value);
                ReportPropertyChanging("ChapterCode");
                _ChapterCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChapterCode");
                OnChapterCodeChanged();
            }
        }
        private global::System.String _ChapterCode;
        partial void OnChapterCodeChanging(global::System.String value);
        partial void OnChapterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChapterName
        {
            get
            {
                return _ChapterName;
            }
            set
            {
                OnChapterNameChanging(value);
                ReportPropertyChanging("ChapterName");
                _ChapterName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChapterName");
                OnChapterNameChanged();
            }
        }
        private global::System.String _ChapterName;
        partial void OnChapterNameChanging(global::System.String value);
        partial void OnChapterNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChapterNameVNese
        {
            get
            {
                return _ChapterNameVNese;
            }
            set
            {
                OnChapterNameVNeseChanging(value);
                ReportPropertyChanging("ChapterNameVNese");
                _ChapterNameVNese = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChapterNameVNese");
                OnChapterNameVNeseChanged();
            }
        }
        private global::System.String _ChapterNameVNese;
        partial void OnChapterNameVNeseChanging(global::System.String value);
        partial void OnChapterNameVNeseChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICDGroup_ICDChapter", "ICDGroup")]
        public EntityCollection<ICDGroup> ICDGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ICDGroup>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ICDGroup>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ICDGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ICDGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ICDGroup object.
        /// </summary>
        /// <param name="groupID">Initial value of the GroupID property.</param>
        /// <param name="groupCode">Initial value of the GroupCode property.</param>
        /// <param name="groupName">Initial value of the GroupName property.</param>
        /// <param name="groupNameVNese">Initial value of the GroupNameVNese property.</param>
        public static ICDGroup CreateICDGroup(global::System.Int64 groupID, global::System.String groupCode, global::System.String groupName, global::System.String groupNameVNese)
        {
            ICDGroup iCDGroup = new ICDGroup();
            iCDGroup.GroupID = groupID;
            iCDGroup.GroupCode = groupCode;
            iCDGroup.GroupName = groupName;
            iCDGroup.GroupNameVNese = groupNameVNese;
            return iCDGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ChapterID
        {
            get
            {
                return _ChapterID;
            }
            set
            {
                OnChapterIDChanging(value);
                ReportPropertyChanging("ChapterID");
                _ChapterID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChapterID");
                OnChapterIDChanged();
            }
        }
        private Nullable<global::System.Byte> _ChapterID;
        partial void OnChapterIDChanging(Nullable<global::System.Byte> value);
        partial void OnChapterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 GroupID
        {
            get
            {
                return _GroupID;
            }
            set
            {
                if (_GroupID != value)
                {
                    OnGroupIDChanging(value);
                    ReportPropertyChanging("GroupID");
                    _GroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GroupID");
                    OnGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _GroupID;
        partial void OnGroupIDChanging(global::System.Int64 value);
        partial void OnGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupCode
        {
            get
            {
                return _GroupCode;
            }
            set
            {
                OnGroupCodeChanging(value);
                ReportPropertyChanging("GroupCode");
                _GroupCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupCode");
                OnGroupCodeChanged();
            }
        }
        private global::System.String _GroupCode;
        partial void OnGroupCodeChanging(global::System.String value);
        partial void OnGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupName
        {
            get
            {
                return _GroupName;
            }
            set
            {
                OnGroupNameChanging(value);
                ReportPropertyChanging("GroupName");
                _GroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupName");
                OnGroupNameChanged();
            }
        }
        private global::System.String _GroupName;
        partial void OnGroupNameChanging(global::System.String value);
        partial void OnGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GroupNameVNese
        {
            get
            {
                return _GroupNameVNese;
            }
            set
            {
                OnGroupNameVNeseChanging(value);
                ReportPropertyChanging("GroupNameVNese");
                _GroupNameVNese = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("GroupNameVNese");
                OnGroupNameVNeseChanged();
            }
        }
        private global::System.String _GroupNameVNese;
        partial void OnGroupNameVNeseChanging(global::System.String value);
        partial void OnGroupNameVNeseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupCodeI
        {
            get
            {
                return _SubGroupCodeI;
            }
            set
            {
                OnSubGroupCodeIChanging(value);
                ReportPropertyChanging("SubGroupCodeI");
                _SubGroupCodeI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupCodeI");
                OnSubGroupCodeIChanged();
            }
        }
        private global::System.String _SubGroupCodeI;
        partial void OnSubGroupCodeIChanging(global::System.String value);
        partial void OnSubGroupCodeIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupNameI
        {
            get
            {
                return _SubGroupNameI;
            }
            set
            {
                OnSubGroupNameIChanging(value);
                ReportPropertyChanging("SubGroupNameI");
                _SubGroupNameI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupNameI");
                OnSubGroupNameIChanged();
            }
        }
        private global::System.String _SubGroupNameI;
        partial void OnSubGroupNameIChanging(global::System.String value);
        partial void OnSubGroupNameIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupnameVNeseI
        {
            get
            {
                return _SubGroupnameVNeseI;
            }
            set
            {
                OnSubGroupnameVNeseIChanging(value);
                ReportPropertyChanging("SubGroupnameVNeseI");
                _SubGroupnameVNeseI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupnameVNeseI");
                OnSubGroupnameVNeseIChanged();
            }
        }
        private global::System.String _SubGroupnameVNeseI;
        partial void OnSubGroupnameVNeseIChanging(global::System.String value);
        partial void OnSubGroupnameVNeseIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupCodeII
        {
            get
            {
                return _SubGroupCodeII;
            }
            set
            {
                OnSubGroupCodeIIChanging(value);
                ReportPropertyChanging("SubGroupCodeII");
                _SubGroupCodeII = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupCodeII");
                OnSubGroupCodeIIChanged();
            }
        }
        private global::System.String _SubGroupCodeII;
        partial void OnSubGroupCodeIIChanging(global::System.String value);
        partial void OnSubGroupCodeIIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupNameII
        {
            get
            {
                return _SubGroupNameII;
            }
            set
            {
                OnSubGroupNameIIChanging(value);
                ReportPropertyChanging("SubGroupNameII");
                _SubGroupNameII = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupNameII");
                OnSubGroupNameIIChanged();
            }
        }
        private global::System.String _SubGroupNameII;
        partial void OnSubGroupNameIIChanging(global::System.String value);
        partial void OnSubGroupNameIIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SubGroupNameVNeseII
        {
            get
            {
                return _SubGroupNameVNeseII;
            }
            set
            {
                OnSubGroupNameVNeseIIChanging(value);
                ReportPropertyChanging("SubGroupNameVNeseII");
                _SubGroupNameVNeseII = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SubGroupNameVNeseII");
                OnSubGroupNameVNeseIIChanged();
            }
        }
        private global::System.String _SubGroupNameVNeseII;
        partial void OnSubGroupNameVNeseIIChanging(global::System.String value);
        partial void OnSubGroupNameVNeseIIChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICD10_ICDGroup", "ICD10")]
        public EntityCollection<ICD10> ICD10
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ICD10>("SureHisModel.FK_ICD10_ICDGroup", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ICD10>("SureHisModel.FK_ICD10_ICDGroup", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ICDGroup_ICDChapter", "ICDChapter")]
        public ICDChapter ICDChapter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDChapter>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDChapter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDChapter>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDChapter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICDChapter> ICDChapterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICDChapter>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDChapter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICDChapter>("SureHisModel.FK_ICDGroup_ICDChapter", "ICDChapter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ImmunizationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImmunizationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImmunizationHistory object.
        /// </summary>
        /// <param name="immHisID">Initial value of the ImmHisID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="isUnknow">Initial value of the IsUnknow property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static ImmunizationHistory CreateImmunizationHistory(global::System.Int64 immHisID, global::System.Int64 ptComMedRecID, global::System.Boolean isUnknow, global::System.DateTime modifiedDate)
        {
            ImmunizationHistory immunizationHistory = new ImmunizationHistory();
            immunizationHistory.ImmHisID = immHisID;
            immunizationHistory.PtComMedRecID = ptComMedRecID;
            immunizationHistory.IsUnknow = isUnknow;
            immunizationHistory.ModifiedDate = modifiedDate;
            return immunizationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ImmHisID
        {
            get
            {
                return _ImmHisID;
            }
            set
            {
                if (_ImmHisID != value)
                {
                    OnImmHisIDChanging(value);
                    ReportPropertyChanging("ImmHisID");
                    _ImmHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImmHisID");
                    OnImmHisIDChanged();
                }
            }
        }
        private global::System.Int64 _ImmHisID;
        partial void OnImmHisIDChanging(global::System.Int64 value);
        partial void OnImmHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ImmID
        {
            get
            {
                return _ImmID;
            }
            set
            {
                OnImmIDChanging(value);
                ReportPropertyChanging("ImmID");
                _ImmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImmID");
                OnImmIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ImmID;
        partial void OnImmIDChanging(Nullable<global::System.Int64> value);
        partial void OnImmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ImmDtm
        {
            get
            {
                return _ImmDtm;
            }
            set
            {
                OnImmDtmChanging(value);
                ReportPropertyChanging("ImmDtm");
                _ImmDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImmDtm");
                OnImmDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ImmDtm;
        partial void OnImmDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnImmDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsUnknow
        {
            get
            {
                return _IsUnknow;
            }
            set
            {
                OnIsUnknowChanging(value);
                ReportPropertyChanging("IsUnknow");
                _IsUnknow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUnknow");
                OnIsUnknowChanged();
            }
        }
        private global::System.Boolean _IsUnknow;
        partial void OnIsUnknowChanging(global::System.Boolean value);
        partial void OnIsUnknowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ImmRemarksText
        {
            get
            {
                return _ImmRemarksText;
            }
            set
            {
                OnImmRemarksTextChanging(value);
                ReportPropertyChanging("ImmRemarksText");
                _ImmRemarksText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ImmRemarksText");
                OnImmRemarksTextChanged();
            }
        }
        private global::System.String _ImmRemarksText;
        partial void OnImmRemarksTextChanging(global::System.String value);
        partial void OnImmRemarksTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ImmunizationHistory_refImmunization", "refImmunization")]
        public refImmunization refImmunization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refImmunization>("SureHisModel.FK_ImmunizationHistory_refImmunization", "refImmunization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refImmunization>("SureHisModel.FK_ImmunizationHistory_refImmunization", "refImmunization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refImmunization> refImmunizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refImmunization>("SureHisModel.FK_ImmunizationHistory_refImmunization", "refImmunization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refImmunization>("SureHisModel.FK_ImmunizationHistory_refImmunization", "refImmunization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InOutType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InOutType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InOutType object.
        /// </summary>
        /// <param name="iOTypeID">Initial value of the IOTypeID property.</param>
        /// <param name="iOTypeName">Initial value of the IOTypeName property.</param>
        /// <param name="iOType">Initial value of the IOType property.</param>
        public static InOutType CreateInOutType(global::System.Int64 iOTypeID, global::System.String iOTypeName, global::System.Boolean iOType)
        {
            InOutType inOutType = new InOutType();
            inOutType.IOTypeID = iOTypeID;
            inOutType.IOTypeName = iOTypeName;
            inOutType.IOType = iOType;
            return inOutType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IOTypeID
        {
            get
            {
                return _IOTypeID;
            }
            set
            {
                if (_IOTypeID != value)
                {
                    OnIOTypeIDChanging(value);
                    ReportPropertyChanging("IOTypeID");
                    _IOTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IOTypeID");
                    OnIOTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _IOTypeID;
        partial void OnIOTypeIDChanging(global::System.Int64 value);
        partial void OnIOTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IOTypeName
        {
            get
            {
                return _IOTypeName;
            }
            set
            {
                OnIOTypeNameChanging(value);
                ReportPropertyChanging("IOTypeName");
                _IOTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IOTypeName");
                OnIOTypeNameChanged();
            }
        }
        private global::System.String _IOTypeName;
        partial void OnIOTypeNameChanging(global::System.String value);
        partial void OnIOTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IOType
        {
            get
            {
                return _IOType;
            }
            set
            {
                OnIOTypeChanging(value);
                ReportPropertyChanging("IOType");
                _IOType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IOType");
                OnIOTypeChanged();
            }
        }
        private global::System.Boolean _IOType;
        partial void OnIOTypeChanging(global::System.Boolean value);
        partial void OnIOTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_InOutType", "InOutwardDrug")]
        public EntityCollection<InOutwardDrug> InOutwardDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutwardDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutwardDrug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InOutwardDrug")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InOutwardDrug : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InOutwardDrug object.
        /// </summary>
        /// <param name="inOutID">Initial value of the InOutID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="sysDate">Initial value of the SysDate property.</param>
        public static InOutwardDrug CreateInOutwardDrug(global::System.Int64 inOutID, global::System.Double quantity, global::System.Decimal amount, global::System.DateTime sysDate)
        {
            InOutwardDrug inOutwardDrug = new InOutwardDrug();
            inOutwardDrug.InOutID = inOutID;
            inOutwardDrug.Quantity = quantity;
            inOutwardDrug.Amount = amount;
            inOutwardDrug.SysDate = sysDate;
            return inOutwardDrug;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InOutID
        {
            get
            {
                return _InOutID;
            }
            set
            {
                if (_InOutID != value)
                {
                    OnInOutIDChanging(value);
                    ReportPropertyChanging("InOutID");
                    _InOutID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InOutID");
                    OnInOutIDChanged();
                }
            }
        }
        private global::System.Int64 _InOutID;
        partial void OnInOutIDChanging(global::System.Int64 value);
        partial void OnInOutIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DrugID;
        partial void OnDrugIDChanging(Nullable<global::System.Int64> value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StoreHouseID
        {
            get
            {
                return _StoreHouseID;
            }
            set
            {
                OnStoreHouseIDChanging(value);
                ReportPropertyChanging("StoreHouseID");
                _StoreHouseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StoreHouseID");
                OnStoreHouseIDChanged();
            }
        }
        private Nullable<global::System.Int64> _StoreHouseID;
        partial void OnStoreHouseIDChanging(Nullable<global::System.Int64> value);
        partial void OnStoreHouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SdlID
        {
            get
            {
                return _SdlID;
            }
            set
            {
                OnSdlIDChanging(value);
                ReportPropertyChanging("SdlID");
                _SdlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SdlID");
                OnSdlIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SdlID;
        partial void OnSdlIDChanging(Nullable<global::System.Int64> value);
        partial void OnSdlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LotID
        {
            get
            {
                return _LotID;
            }
            set
            {
                OnLotIDChanging(value);
                ReportPropertyChanging("LotID");
                _LotID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LotID");
                OnLotIDChanged();
            }
        }
        private Nullable<global::System.Int64> _LotID;
        partial void OnLotIDChanging(Nullable<global::System.Int64> value);
        partial void OnLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> StaffID
        {
            get
            {
                return _StaffID;
            }
            set
            {
                OnStaffIDChanging(value);
                ReportPropertyChanging("StaffID");
                _StaffID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StaffID");
                OnStaffIDChanged();
            }
        }
        private Nullable<global::System.Int64> _StaffID;
        partial void OnStaffIDChanging(Nullable<global::System.Int64> value);
        partial void OnStaffIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IOTypeID
        {
            get
            {
                return _IOTypeID;
            }
            set
            {
                OnIOTypeIDChanging(value);
                ReportPropertyChanging("IOTypeID");
                _IOTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IOTypeID");
                OnIOTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _IOTypeID;
        partial void OnIOTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnIOTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DocumentID
        {
            get
            {
                return _DocumentID;
            }
            set
            {
                OnDocumentIDChanging(value);
                ReportPropertyChanging("DocumentID");
                _DocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentID");
                OnDocumentIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DocumentID;
        partial void OnDocumentIDChanging(Nullable<global::System.Int64> value);
        partial void OnDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvNo
        {
            get
            {
                return _InvNo;
            }
            set
            {
                OnInvNoChanging(value);
                ReportPropertyChanging("InvNo");
                _InvNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvNo");
                OnInvNoChanged();
            }
        }
        private global::System.String _InvNo;
        partial void OnInvNoChanging(global::System.String value);
        partial void OnInvNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvDate
        {
            get
            {
                return _InvDate;
            }
            set
            {
                OnInvDateChanging(value);
                ReportPropertyChanging("InvDate");
                _InvDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvDate");
                OnInvDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvDate;
        partial void OnInvDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Double _Quantity;
        partial void OnQuantityChanging(global::System.Double value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SysDate
        {
            get
            {
                return _SysDate;
            }
            set
            {
                OnSysDateChanging(value);
                ReportPropertyChanging("SysDate");
                _SysDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SysDate");
                OnSysDateChanged();
            }
        }
        private global::System.DateTime _SysDate;
        partial void OnSysDateChanging(global::System.DateTime value);
        partial void OnSysDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_InOutwardDrug_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_InOutwardDrug_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_InOutwardDrug_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_InOutwardDrug_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_InOutType", "InOutType")]
        public InOutType InOutType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOutType>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOutType>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InOutType> InOutTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InOutType>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InOutType>("SureHisModel.FK_InOutwardDrug_InOutType", "InOutType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_LotNumber", "LotNumber")]
        public LotNumber LotNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LotNumber>("SureHisModel.FK_InOutwardDrug_LotNumber", "LotNumber").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LotNumber>("SureHisModel.FK_InOutwardDrug_LotNumber", "LotNumber").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LotNumber> LotNumberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LotNumber>("SureHisModel.FK_InOutwardDrug_LotNumber", "LotNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LotNumber>("SureHisModel.FK_InOutwardDrug_LotNumber", "LotNumber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation")]
        public refShelfDrugLocation refShelfDrugLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShelfDrugLocation>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShelfDrugLocation>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refShelfDrugLocation> refShelfDrugLocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShelfDrugLocation>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refShelfDrugLocation>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "refShelfDrugLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_refStoreHouse", "refStoreHouse")]
        public refStoreHouse refStoreHouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refStoreHouse>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "refStoreHouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refStoreHouse>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "refStoreHouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refStoreHouse> refStoreHouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refStoreHouse>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "refStoreHouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refStoreHouse>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "refStoreHouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InputMaskSetting")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InputMaskSetting : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InputMaskSetting object.
        /// </summary>
        /// <param name="inputMaskID">Initial value of the InputMaskID property.</param>
        /// <param name="inputMaskName">Initial value of the InputMaskName property.</param>
        /// <param name="inpuMask">Initial value of the InpuMask property.</param>
        public static InputMaskSetting CreateInputMaskSetting(global::System.Int32 inputMaskID, global::System.String inputMaskName, global::System.String inpuMask)
        {
            InputMaskSetting inputMaskSetting = new InputMaskSetting();
            inputMaskSetting.InputMaskID = inputMaskID;
            inputMaskSetting.InputMaskName = inputMaskName;
            inputMaskSetting.InpuMask = inpuMask;
            return inputMaskSetting;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InputMaskID
        {
            get
            {
                return _InputMaskID;
            }
            set
            {
                if (_InputMaskID != value)
                {
                    OnInputMaskIDChanging(value);
                    ReportPropertyChanging("InputMaskID");
                    _InputMaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InputMaskID");
                    OnInputMaskIDChanged();
                }
            }
        }
        private global::System.Int32 _InputMaskID;
        partial void OnInputMaskIDChanging(global::System.Int32 value);
        partial void OnInputMaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InputMaskName
        {
            get
            {
                return _InputMaskName;
            }
            set
            {
                OnInputMaskNameChanging(value);
                ReportPropertyChanging("InputMaskName");
                _InputMaskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InputMaskName");
                OnInputMaskNameChanged();
            }
        }
        private global::System.String _InputMaskName;
        partial void OnInputMaskNameChanging(global::System.String value);
        partial void OnInputMaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InpuMask
        {
            get
            {
                return _InpuMask;
            }
            set
            {
                OnInpuMaskChanging(value);
                ReportPropertyChanging("InpuMask");
                _InpuMask = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InpuMask");
                OnInpuMaskChanged();
            }
        }
        private global::System.String _InpuMask;
        partial void OnInpuMaskChanging(global::System.String value);
        partial void OnInpuMaskChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InputMaskDesc
        {
            get
            {
                return _InputMaskDesc;
            }
            set
            {
                OnInputMaskDescChanging(value);
                ReportPropertyChanging("InputMaskDesc");
                _InputMaskDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InputMaskDesc");
                OnInputMaskDescChanged();
            }
        }
        private global::System.String _InputMaskDesc;
        partial void OnInputMaskDescChanging(global::System.String value);
        partial void OnInputMaskDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlaceholderFmt
        {
            get
            {
                return _PlaceholderFmt;
            }
            set
            {
                OnPlaceholderFmtChanging(value);
                ReportPropertyChanging("PlaceholderFmt");
                _PlaceholderFmt = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlaceholderFmt");
                OnPlaceholderFmtChanged();
            }
        }
        private global::System.String _PlaceholderFmt;
        partial void OnPlaceholderFmtChanging(global::System.String value);
        partial void OnPlaceholderFmtChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InsuranceBeneficiary")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceBeneficiary : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceBeneficiary object.
        /// </summary>
        /// <param name="iBID">Initial value of the IBID property.</param>
        /// <param name="iBCode">Initial value of the IBCode property.</param>
        /// <param name="iBDesc">Initial value of the IBDesc property.</param>
        public static InsuranceBeneficiary CreateInsuranceBeneficiary(global::System.Int32 iBID, global::System.String iBCode, global::System.String iBDesc)
        {
            InsuranceBeneficiary insuranceBeneficiary = new InsuranceBeneficiary();
            insuranceBeneficiary.IBID = iBID;
            insuranceBeneficiary.IBCode = iBCode;
            insuranceBeneficiary.IBDesc = iBDesc;
            return insuranceBeneficiary;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IBID
        {
            get
            {
                return _IBID;
            }
            set
            {
                if (_IBID != value)
                {
                    OnIBIDChanging(value);
                    ReportPropertyChanging("IBID");
                    _IBID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IBID");
                    OnIBIDChanged();
                }
            }
        }
        private global::System.Int32 _IBID;
        partial void OnIBIDChanging(global::System.Int32 value);
        partial void OnIBIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IBCode
        {
            get
            {
                return _IBCode;
            }
            set
            {
                OnIBCodeChanging(value);
                ReportPropertyChanging("IBCode");
                _IBCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IBCode");
                OnIBCodeChanged();
            }
        }
        private global::System.String _IBCode;
        partial void OnIBCodeChanging(global::System.String value);
        partial void OnIBCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IBDesc
        {
            get
            {
                return _IBDesc;
            }
            set
            {
                OnIBDescChanging(value);
                ReportPropertyChanging("IBDesc");
                _IBDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IBDesc");
                OnIBDescChanged();
            }
        }
        private global::System.String _IBDesc;
        partial void OnIBDescChanging(global::System.String value);
        partial void OnIBDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherPolicyDetails
        {
            get
            {
                return _OtherPolicyDetails;
            }
            set
            {
                OnOtherPolicyDetailsChanging(value);
                ReportPropertyChanging("OtherPolicyDetails");
                _OtherPolicyDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherPolicyDetails");
                OnOtherPolicyDetailsChanged();
            }
        }
        private global::System.String _OtherPolicyDetails;
        partial void OnOtherPolicyDetailsChanging(global::System.String value);
        partial void OnOtherPolicyDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InsCoID
        {
            get
            {
                return _InsCoID;
            }
            set
            {
                OnInsCoIDChanging(value);
                ReportPropertyChanging("InsCoID");
                _InsCoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsCoID");
                OnInsCoIDChanged();
            }
        }
        private Nullable<global::System.Int64> _InsCoID;
        partial void OnInsCoIDChanging(Nullable<global::System.Int64> value);
        partial void OnInsCoIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany")]
        public InsuranceCompany InsuranceCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InsuranceCompany> InsuranceCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InsuranceCompany>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InsuranceCompany>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InsuranceCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceCompany object.
        /// </summary>
        /// <param name="insCoID">Initial value of the InsCoID property.</param>
        /// <param name="insCoName">Initial value of the InsCoName property.</param>
        public static InsuranceCompany CreateInsuranceCompany(global::System.Int64 insCoID, global::System.String insCoName)
        {
            InsuranceCompany insuranceCompany = new InsuranceCompany();
            insuranceCompany.InsCoID = insCoID;
            insuranceCompany.InsCoName = insCoName;
            return insuranceCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InsCoID
        {
            get
            {
                return _InsCoID;
            }
            set
            {
                if (_InsCoID != value)
                {
                    OnInsCoIDChanging(value);
                    ReportPropertyChanging("InsCoID");
                    _InsCoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsCoID");
                    OnInsCoIDChanged();
                }
            }
        }
        private global::System.Int64 _InsCoID;
        partial void OnInsCoIDChanging(global::System.Int64 value);
        partial void OnInsCoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InsCoName
        {
            get
            {
                return _InsCoName;
            }
            set
            {
                OnInsCoNameChanging(value);
                ReportPropertyChanging("InsCoName");
                _InsCoName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsCoName");
                OnInsCoNameChanged();
            }
        }
        private global::System.String _InsCoName;
        partial void OnInsCoNameChanging(global::System.String value);
        partial void OnInsCoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsCoShortName
        {
            get
            {
                return _InsCoShortName;
            }
            set
            {
                OnInsCoShortNameChanging(value);
                ReportPropertyChanging("InsCoShortName");
                _InsCoShortName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsCoShortName");
                OnInsCoShortNameChanged();
            }
        }
        private global::System.String _InsCoShortName;
        partial void OnInsCoShortNameChanging(global::System.String value);
        partial void OnInsCoShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsCoDesc
        {
            get
            {
                return _InsCoDesc;
            }
            set
            {
                OnInsCoDescChanging(value);
                ReportPropertyChanging("InsCoDesc");
                _InsCoDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsCoDesc");
                OnInsCoDescChanged();
            }
        }
        private global::System.String _InsCoDesc;
        partial void OnInsCoDescChanging(global::System.String value);
        partial void OnInsCoDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsCoAddress
        {
            get
            {
                return _InsCoAddress;
            }
            set
            {
                OnInsCoAddressChanging(value);
                ReportPropertyChanging("InsCoAddress");
                _InsCoAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsCoAddress");
                OnInsCoAddressChanged();
            }
        }
        private global::System.String _InsCoAddress;
        partial void OnInsCoAddressChanging(global::System.String value);
        partial void OnInsCoAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNHI
        {
            get
            {
                return _IsNHI;
            }
            set
            {
                OnIsNHIChanging(value);
                ReportPropertyChanging("IsNHI");
                _IsNHI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNHI");
                OnIsNHIChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNHI;
        partial void OnIsNHIChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNHIChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceBeneficiary")]
        public EntityCollection<InsuranceBeneficiary> InsuranceBeneficiary
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsuranceBeneficiary>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceBeneficiary");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsuranceBeneficiary>("SureHisModel.FK_InsuranceBeneficiary_InsuranceCompany", "InsuranceBeneficiary", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InsuranceInterests")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceInterests : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceInterests object.
        /// </summary>
        /// <param name="iIID">Initial value of the IIID property.</param>
        public static InsuranceInterests CreateInsuranceInterests(global::System.Int64 iIID)
        {
            InsuranceInterests insuranceInterests = new InsuranceInterests();
            insuranceInterests.IIID = iIID;
            return insuranceInterests;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IIID
        {
            get
            {
                return _IIID;
            }
            set
            {
                if (_IIID != value)
                {
                    OnIIIDChanging(value);
                    ReportPropertyChanging("IIID");
                    _IIID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IIID");
                    OnIIIDChanged();
                }
            }
        }
        private global::System.Int64 _IIID;
        partial void OnIIIDChanging(global::System.Int64 value);
        partial void OnIIIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IBID
        {
            get
            {
                return _IBID;
            }
            set
            {
                OnIBIDChanging(value);
                ReportPropertyChanging("IBID");
                _IBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IBID");
                OnIBIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IBID;
        partial void OnIBIDChanging(Nullable<global::System.Int32> value);
        partial void OnIBIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsInterestsCode
        {
            get
            {
                return _InsInterestsCode;
            }
            set
            {
                OnInsInterestsCodeChanging(value);
                ReportPropertyChanging("InsInterestsCode");
                _InsInterestsCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsInterestsCode");
                OnInsInterestsCodeChanged();
            }
        }
        private global::System.String _InsInterestsCode;
        partial void OnInsInterestsCodeChanging(global::System.String value);
        partial void OnInsInterestsCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InsInterestsName
        {
            get
            {
                return _InsInterestsName;
            }
            set
            {
                OnInsInterestsNameChanging(value);
                ReportPropertyChanging("InsInterestsName");
                _InsInterestsName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InsInterestsName");
                OnInsInterestsNameChanged();
            }
        }
        private global::System.String _InsInterestsName;
        partial void OnInsInterestsNameChanging(global::System.String value);
        partial void OnInsInterestsNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RebatePercentage
        {
            get
            {
                return _RebatePercentage;
            }
            set
            {
                OnRebatePercentageChanging(value);
                ReportPropertyChanging("RebatePercentage");
                _RebatePercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RebatePercentage");
                OnRebatePercentageChanged();
            }
        }
        private Nullable<global::System.Double> _RebatePercentage;
        partial void OnRebatePercentageChanging(Nullable<global::System.Double> value);
        partial void OnRebatePercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MaxPayable
        {
            get
            {
                return _MaxPayable;
            }
            set
            {
                OnMaxPayableChanging(value);
                ReportPropertyChanging("MaxPayable");
                _MaxPayable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxPayable");
                OnMaxPayableChanged();
            }
        }
        private Nullable<global::System.Double> _MaxPayable;
        partial void OnMaxPayableChanging(Nullable<global::System.Double> value);
        partial void OnMaxPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MaxPayableRemark
        {
            get
            {
                return _MaxPayableRemark;
            }
            set
            {
                OnMaxPayableRemarkChanging(value);
                ReportPropertyChanging("MaxPayableRemark");
                _MaxPayableRemark = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxPayableRemark");
                OnMaxPayableRemarkChanged();
            }
        }
        private Nullable<global::System.Double> _MaxPayableRemark;
        partial void OnMaxPayableRemarkChanging(Nullable<global::System.Double> value);
        partial void OnMaxPayableRemarkChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PercentageOnMaxPayable
        {
            get
            {
                return _PercentageOnMaxPayable;
            }
            set
            {
                OnPercentageOnMaxPayableChanging(value);
                ReportPropertyChanging("PercentageOnMaxPayable");
                _PercentageOnMaxPayable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentageOnMaxPayable");
                OnPercentageOnMaxPayableChanged();
            }
        }
        private Nullable<global::System.Double> _PercentageOnMaxPayable;
        partial void OnPercentageOnMaxPayableChanging(Nullable<global::System.Double> value);
        partial void OnPercentageOnMaxPayableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="InsuranceRegQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InsuranceRegQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InsuranceRegQueue object.
        /// </summary>
        /// <param name="insRegQueueID">Initial value of the InsRegQueueID property.</param>
        /// <param name="insQueueUpDate">Initial value of the InsQueueUpDate property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        /// <param name="numOfRep">Initial value of the NumOfRep property.</param>
        public static InsuranceRegQueue CreateInsuranceRegQueue(global::System.Int64 insRegQueueID, global::System.DateTime insQueueUpDate, global::System.Int64 sID, global::System.Byte numOfRep)
        {
            InsuranceRegQueue insuranceRegQueue = new InsuranceRegQueue();
            insuranceRegQueue.InsRegQueueID = insRegQueueID;
            insuranceRegQueue.InsQueueUpDate = insQueueUpDate;
            insuranceRegQueue.SID = sID;
            insuranceRegQueue.NumOfRep = numOfRep;
            return insuranceRegQueue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InsRegQueueID
        {
            get
            {
                return _InsRegQueueID;
            }
            set
            {
                if (_InsRegQueueID != value)
                {
                    OnInsRegQueueIDChanging(value);
                    ReportPropertyChanging("InsRegQueueID");
                    _InsRegQueueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InsRegQueueID");
                    OnInsRegQueueIDChanged();
                }
            }
        }
        private global::System.Int64 _InsRegQueueID;
        partial void OnInsRegQueueIDChanging(global::System.Int64 value);
        partial void OnInsRegQueueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> InsSequenceNo
        {
            get
            {
                return _InsSequenceNo;
            }
            set
            {
                OnInsSequenceNoChanging(value);
                ReportPropertyChanging("InsSequenceNo");
                _InsSequenceNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsSequenceNo");
                OnInsSequenceNoChanged();
            }
        }
        private Nullable<global::System.Int64> _InsSequenceNo;
        partial void OnInsSequenceNoChanging(Nullable<global::System.Int64> value);
        partial void OnInsSequenceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PatientCode
        {
            get
            {
                return _PatientCode;
            }
            set
            {
                OnPatientCodeChanging(value);
                ReportPropertyChanging("PatientCode");
                _PatientCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PatientCode");
                OnPatientCodeChanged();
            }
        }
        private global::System.String _PatientCode;
        partial void OnPatientCodeChanging(global::System.String value);
        partial void OnPatientCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HealthInsNo
        {
            get
            {
                return _HealthInsNo;
            }
            set
            {
                OnHealthInsNoChanging(value);
                ReportPropertyChanging("HealthInsNo");
                _HealthInsNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HealthInsNo");
                OnHealthInsNoChanged();
            }
        }
        private global::System.String _HealthInsNo;
        partial void OnHealthInsNoChanging(global::System.String value);
        partial void OnHealthInsNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime InsQueueUpDate
        {
            get
            {
                return _InsQueueUpDate;
            }
            set
            {
                OnInsQueueUpDateChanging(value);
                ReportPropertyChanging("InsQueueUpDate");
                _InsQueueUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InsQueueUpDate");
                OnInsQueueUpDateChanged();
            }
        }
        private global::System.DateTime _InsQueueUpDate;
        partial void OnInsQueueUpDateChanging(global::System.DateTime value);
        partial void OnInsQueueUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsWaiting
        {
            get
            {
                return _IsWaiting;
            }
            set
            {
                OnIsWaitingChanging(value);
                ReportPropertyChanging("IsWaiting");
                _IsWaiting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWaiting");
                OnIsWaitingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsWaiting;
        partial void OnIsWaitingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsWaitingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GroupHCNo
        {
            get
            {
                return _GroupHCNo;
            }
            set
            {
                OnGroupHCNoChanging(value);
                ReportPropertyChanging("GroupHCNo");
                _GroupHCNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupHCNo");
                OnGroupHCNoChanged();
            }
        }
        private Nullable<global::System.Int64> _GroupHCNo;
        partial void OnGroupHCNoChanging(Nullable<global::System.Int64> value);
        partial void OnGroupHCNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RCEmpID
        {
            get
            {
                return _RCEmpID;
            }
            set
            {
                OnRCEmpIDChanging(value);
                ReportPropertyChanging("RCEmpID");
                _RCEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RCEmpID");
                OnRCEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RCEmpID;
        partial void OnRCEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnRCEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private Nullable<global::System.Int64> _WDID;
        partial void OnWDIDChanging(Nullable<global::System.Int64> value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NumOfRep
        {
            get
            {
                return _NumOfRep;
            }
            set
            {
                OnNumOfRepChanging(value);
                ReportPropertyChanging("NumOfRep");
                _NumOfRep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumOfRep");
                OnNumOfRepChanged();
            }
        }
        private global::System.Byte _NumOfRep;
        partial void OnNumOfRepChanging(global::System.Byte value);
        partial void OnNumOfRepChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceRegQueue_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_InsuranceRegQueue_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_InsuranceRegQueue_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_InsuranceRegQueue_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_InsuranceRegQueue_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceRegQueue_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="JobHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobHistory object.
        /// </summary>
        /// <param name="jHID">Initial value of the JHID property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static JobHistory CreateJobHistory(global::System.Int64 jHID, global::System.Int64 empID)
        {
            JobHistory jobHistory = new JobHistory();
            jobHistory.JHID = jHID;
            jobHistory.EmpID = empID;
            return jobHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JHID
        {
            get
            {
                return _JHID;
            }
            set
            {
                if (_JHID != value)
                {
                    OnJHIDChanging(value);
                    ReportPropertyChanging("JHID");
                    _JHID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JHID");
                    OnJHIDChanged();
                }
            }
        }
        private global::System.Int64 _JHID;
        partial void OnJHIDChanging(global::System.Int64 value);
        partial void OnJHIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JMID
        {
            get
            {
                return _JMID;
            }
            set
            {
                OnJMIDChanging(value);
                ReportPropertyChanging("JMID");
                _JMID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JMID");
                OnJMIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JMID;
        partial void OnJMIDChanging(Nullable<global::System.Int64> value);
        partial void OnJMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAssignedFrom
        {
            get
            {
                return _DateAssignedFrom;
            }
            set
            {
                OnDateAssignedFromChanging(value);
                ReportPropertyChanging("DateAssignedFrom");
                _DateAssignedFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAssignedFrom");
                OnDateAssignedFromChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAssignedFrom;
        partial void OnDateAssignedFromChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAssignedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateAssignedTo
        {
            get
            {
                return _DateAssignedTo;
            }
            set
            {
                OnDateAssignedToChanging(value);
                ReportPropertyChanging("DateAssignedTo");
                _DateAssignedTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateAssignedTo");
                OnDateAssignedToChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateAssignedTo;
        partial void OnDateAssignedToChanging(Nullable<global::System.DateTime> value);
        partial void OnDateAssignedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrimaryJobRole
        {
            get
            {
                return _IsPrimaryJobRole;
            }
            set
            {
                OnIsPrimaryJobRoleChanging(value);
                ReportPropertyChanging("IsPrimaryJobRole");
                _IsPrimaryJobRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryJobRole");
                OnIsPrimaryJobRoleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrimaryJobRole;
        partial void OnIsPrimaryJobRoleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrimaryJobRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NotAssigned
        {
            get
            {
                return _NotAssigned;
            }
            set
            {
                OnNotAssignedChanging(value);
                ReportPropertyChanging("NotAssigned");
                _NotAssigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NotAssigned");
                OnNotAssignedChanged();
            }
        }
        private Nullable<global::System.Boolean> _NotAssigned;
        partial void OnNotAssignedChanging(Nullable<global::System.Boolean> value);
        partial void OnNotAssignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JHDesc
        {
            get
            {
                return _JHDesc;
            }
            set
            {
                OnJHDescChanging(value);
                ReportPropertyChanging("JHDesc");
                _JHDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JHDesc");
                OnJHDescChanged();
            }
        }
        private global::System.String _JHDesc;
        partial void OnJHDescChanging(global::System.String value);
        partial void OnJHDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobHistory_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_JobHistory_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_JobHistory_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_JobHistory_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_JobHistory_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobHistory_JobModel", "JobModel")]
        public JobModel JobModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobModel>("SureHisModel.FK_JobHistory_JobModel", "JobModel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobModel>("SureHisModel.FK_JobHistory_JobModel", "JobModel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobModel> JobModelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobModel>("SureHisModel.FK_JobHistory_JobModel", "JobModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobModel>("SureHisModel.FK_JobHistory_JobModel", "JobModel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="JobModel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobModel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobModel object.
        /// </summary>
        /// <param name="jMID">Initial value of the JMID property.</param>
        /// <param name="jTID">Initial value of the JTID property.</param>
        public static JobModel CreateJobModel(global::System.Int64 jMID, global::System.Int64 jTID)
        {
            JobModel jobModel = new JobModel();
            jobModel.JMID = jMID;
            jobModel.JTID = jTID;
            return jobModel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JMID
        {
            get
            {
                return _JMID;
            }
            set
            {
                if (_JMID != value)
                {
                    OnJMIDChanging(value);
                    ReportPropertyChanging("JMID");
                    _JMID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JMID");
                    OnJMIDChanged();
                }
            }
        }
        private global::System.Int64 _JMID;
        partial void OnJMIDChanging(global::System.Int64 value);
        partial void OnJMIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JTID
        {
            get
            {
                return _JTID;
            }
            set
            {
                OnJTIDChanging(value);
                ReportPropertyChanging("JTID");
                _JTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JTID");
                OnJTIDChanged();
            }
        }
        private global::System.Int64 _JTID;
        partial void OnJTIDChanging(global::System.Int64 value);
        partial void OnJTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> JTGrades
        {
            get
            {
                return _JTGrades;
            }
            set
            {
                OnJTGradesChanging(value);
                ReportPropertyChanging("JTGrades");
                _JTGrades = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JTGrades");
                OnJTGradesChanged();
            }
        }
        private Nullable<global::System.Int16> _JTGrades;
        partial void OnJTGradesChanging(Nullable<global::System.Int16> value);
        partial void OnJTGradesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobHistory_JobModel", "JobHistory")]
        public EntityCollection<JobHistory> JobHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobHistory>("SureHisModel.FK_JobHistory_JobModel", "JobHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobHistory>("SureHisModel.FK_JobHistory_JobModel", "JobHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobModel_refJobTitle", "refJobTitle")]
        public refJobTitle refJobTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_JobModel_refJobTitle", "refJobTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_JobModel_refJobTitle", "refJobTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refJobTitle> refJobTitleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_JobModel_refJobTitle", "refJobTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refJobTitle>("SureHisModel.FK_JobModel_refJobTitle", "refJobTitle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="LanguageLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LanguageLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LanguageLevel object.
        /// </summary>
        /// <param name="langLevelID">Initial value of the LangLevelID property.</param>
        /// <param name="hLID">Initial value of the HLID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static LanguageLevel CreateLanguageLevel(global::System.Int64 langLevelID, global::System.Int64 hLID, global::System.Int64 personID)
        {
            LanguageLevel languageLevel = new LanguageLevel();
            languageLevel.LangLevelID = langLevelID;
            languageLevel.HLID = hLID;
            languageLevel.PersonID = personID;
            return languageLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LangLevelID
        {
            get
            {
                return _LangLevelID;
            }
            set
            {
                if (_LangLevelID != value)
                {
                    OnLangLevelIDChanging(value);
                    ReportPropertyChanging("LangLevelID");
                    _LangLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LangLevelID");
                    OnLangLevelIDChanged();
                }
            }
        }
        private global::System.Int64 _LangLevelID;
        partial void OnLangLevelIDChanging(global::System.Int64 value);
        partial void OnLangLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HLID
        {
            get
            {
                return _HLID;
            }
            set
            {
                OnHLIDChanging(value);
                ReportPropertyChanging("HLID");
                _HLID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HLID");
                OnHLIDChanged();
            }
        }
        private global::System.Int64 _HLID;
        partial void OnHLIDChanging(global::System.Int64 value);
        partial void OnHLIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int64 _PersonID;
        partial void OnPersonIDChanging(global::System.Int64 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNativeLang
        {
            get
            {
                return _IsNativeLang;
            }
            set
            {
                OnIsNativeLangChanging(value);
                ReportPropertyChanging("IsNativeLang");
                _IsNativeLang = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNativeLang");
                OnIsNativeLangChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNativeLang;
        partial void OnIsNativeLangChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNativeLangChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LanguageLevel_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_LanguageLevel_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_LanguageLevel_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_LanguageLevel_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_LanguageLevel_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LanguageLevel_refHumanLanguage", "refHumanLanguage")]
        public refHumanLanguage refHumanLanguage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refHumanLanguage>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "refHumanLanguage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refHumanLanguage>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "refHumanLanguage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refHumanLanguage> refHumanLanguageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refHumanLanguage>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "refHumanLanguage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refHumanLanguage>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "refHumanLanguage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="LotNumber")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LotNumber : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LotNumber object.
        /// </summary>
        /// <param name="lotID">Initial value of the LotID property.</param>
        /// <param name="lotNoItem">Initial value of the LotNoItem property.</param>
        /// <param name="lotNo">Initial value of the LotNo property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static LotNumber CreateLotNumber(global::System.Int64 lotID, global::System.String lotNoItem, global::System.String lotNo, global::System.Int64 drugID, global::System.Boolean stop, global::System.DateTime createdDate)
        {
            LotNumber lotNumber = new LotNumber();
            lotNumber.LotID = lotID;
            lotNumber.LotNoItem = lotNoItem;
            lotNumber.LotNo = lotNo;
            lotNumber.DrugID = drugID;
            lotNumber.Stop = stop;
            lotNumber.CreatedDate = createdDate;
            return lotNumber;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LotID
        {
            get
            {
                return _LotID;
            }
            set
            {
                if (_LotID != value)
                {
                    OnLotIDChanging(value);
                    ReportPropertyChanging("LotID");
                    _LotID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LotID");
                    OnLotIDChanged();
                }
            }
        }
        private global::System.Int64 _LotID;
        partial void OnLotIDChanging(global::System.Int64 value);
        partial void OnLotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotNoItem
        {
            get
            {
                return _LotNoItem;
            }
            set
            {
                OnLotNoItemChanging(value);
                ReportPropertyChanging("LotNoItem");
                _LotNoItem = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LotNoItem");
                OnLotNoItemChanged();
            }
        }
        private global::System.String _LotNoItem;
        partial void OnLotNoItemChanging(global::System.String value);
        partial void OnLotNoItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LotNo
        {
            get
            {
                return _LotNo;
            }
            set
            {
                OnLotNoChanging(value);
                ReportPropertyChanging("LotNo");
                _LotNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LotNo");
                OnLotNoChanged();
            }
        }
        private global::System.String _LotNo;
        partial void OnLotNoChanging(global::System.String value);
        partial void OnLotNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecvDate
        {
            get
            {
                return _RecvDate;
            }
            set
            {
                OnRecvDateChanging(value);
                ReportPropertyChanging("RecvDate");
                _RecvDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecvDate");
                OnRecvDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecvDate;
        partial void OnRecvDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecvDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProductionDate
        {
            get
            {
                return _ProductionDate;
            }
            set
            {
                OnProductionDateChanging(value);
                ReportPropertyChanging("ProductionDate");
                _ProductionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductionDate");
                OnProductionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProductionDate;
        partial void OnProductionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProductionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PackingDate
        {
            get
            {
                return _PackingDate;
            }
            set
            {
                OnPackingDateChanging(value);
                ReportPropertyChanging("PackingDate");
                _PackingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PackingDate");
                OnPackingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PackingDate;
        partial void OnPackingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPackingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiredDate
        {
            get
            {
                return _ExpiredDate;
            }
            set
            {
                OnExpiredDateChanging(value);
                ReportPropertyChanging("ExpiredDate");
                _ExpiredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiredDate");
                OnExpiredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiredDate;
        partial void OnExpiredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiredDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CertificateNo
        {
            get
            {
                return _CertificateNo;
            }
            set
            {
                OnCertificateNoChanging(value);
                ReportPropertyChanging("CertificateNo");
                _CertificateNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CertificateNo");
                OnCertificateNoChanged();
            }
        }
        private global::System.String _CertificateNo;
        partial void OnCertificateNoChanging(global::System.String value);
        partial void OnCertificateNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CertificateDate
        {
            get
            {
                return _CertificateDate;
            }
            set
            {
                OnCertificateDateChanging(value);
                ReportPropertyChanging("CertificateDate");
                _CertificateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CertificateDate");
                OnCertificateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CertificateDate;
        partial void OnCertificateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCertificateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> BestUseBefDate
        {
            get
            {
                return _BestUseBefDate;
            }
            set
            {
                OnBestUseBefDateChanging(value);
                ReportPropertyChanging("BestUseBefDate");
                _BestUseBefDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BestUseBefDate");
                OnBestUseBefDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _BestUseBefDate;
        partial void OnBestUseBefDateChanging(Nullable<global::System.DateTime> value);
        partial void OnBestUseBefDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProducerID
        {
            get
            {
                return _ProducerID;
            }
            set
            {
                OnProducerIDChanging(value);
                ReportPropertyChanging("ProducerID");
                _ProducerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProducerID");
                OnProducerIDChanged();
            }
        }
        private global::System.String _ProducerID;
        partial void OnProducerIDChanging(global::System.String value);
        partial void OnProducerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VendorID
        {
            get
            {
                return _VendorID;
            }
            set
            {
                OnVendorIDChanging(value);
                ReportPropertyChanging("VendorID");
                _VendorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendorID");
                OnVendorIDChanged();
            }
        }
        private Nullable<global::System.Int64> _VendorID;
        partial void OnVendorIDChanging(Nullable<global::System.Int64> value);
        partial void OnVendorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> VendExpWarDate
        {
            get
            {
                return _VendExpWarDate;
            }
            set
            {
                OnVendExpWarDateChanging(value);
                ReportPropertyChanging("VendExpWarDate");
                _VendExpWarDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VendExpWarDate");
                OnVendExpWarDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _VendExpWarDate;
        partial void OnVendExpWarDateChanging(Nullable<global::System.DateTime> value);
        partial void OnVendExpWarDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpMaintDate
        {
            get
            {
                return _ExpMaintDate;
            }
            set
            {
                OnExpMaintDateChanging(value);
                ReportPropertyChanging("ExpMaintDate");
                _ExpMaintDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpMaintDate");
                OnExpMaintDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpMaintDate;
        partial void OnExpMaintDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpMaintDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private global::System.String _Status;
        partial void OnStatusChanging(global::System.String value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private global::System.String _LastUpdBy;
        partial void OnLastUpdByChanging(global::System.String value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_LotNumber", "InOutwardDrug")]
        public EntityCollection<InOutwardDrug> InOutwardDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_LotNumber", "InOutwardDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_LotNumber", "InOutwardDrug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany")]
        public PharmaceuticalCompany PharmaceuticalCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PharmaceuticalCompany> PharmaceuticalCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "PharmaceuticalCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LotNumber_refCountry", "refCountry")]
        public refCountry refCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_LotNumber_refCountry", "refCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_LotNumber_refCountry", "refCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCountry> refCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_LotNumber_refCountry", "refCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCountry>("SureHisModel.FK_LotNumber_refCountry", "refCountry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedEnctrDiagnosis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedEnctrDiagnosis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedEnctrDiagnosis object.
        /// </summary>
        /// <param name="medEnctrDiagID">Initial value of the MedEnctrDiagID property.</param>
        /// <param name="medEncnID">Initial value of the MedEncnID property.</param>
        /// <param name="diagDesc">Initial value of the DiagDesc property.</param>
        public static MedEnctrDiagnosis CreateMedEnctrDiagnosis(global::System.Int64 medEnctrDiagID, global::System.Int64 medEncnID, global::System.String diagDesc)
        {
            MedEnctrDiagnosis medEnctrDiagnosis = new MedEnctrDiagnosis();
            medEnctrDiagnosis.MedEnctrDiagID = medEnctrDiagID;
            medEnctrDiagnosis.MedEncnID = medEncnID;
            medEnctrDiagnosis.DiagDesc = diagDesc;
            return medEnctrDiagnosis;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedEnctrDiagID
        {
            get
            {
                return _MedEnctrDiagID;
            }
            set
            {
                if (_MedEnctrDiagID != value)
                {
                    OnMedEnctrDiagIDChanging(value);
                    ReportPropertyChanging("MedEnctrDiagID");
                    _MedEnctrDiagID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedEnctrDiagID");
                    OnMedEnctrDiagIDChanged();
                }
            }
        }
        private global::System.Int64 _MedEnctrDiagID;
        partial void OnMedEnctrDiagIDChanging(global::System.Int64 value);
        partial void OnMedEnctrDiagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private global::System.Int64 _MedEncnID;
        partial void OnMedEncnIDChanging(global::System.Int64 value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ICDID
        {
            get
            {
                return _ICDID;
            }
            set
            {
                OnICDIDChanging(value);
                ReportPropertyChanging("ICDID");
                _ICDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICDID");
                OnICDIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ICDID;
        partial void OnICDIDChanging(Nullable<global::System.Int64> value);
        partial void OnICDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DiagDesc
        {
            get
            {
                return _DiagDesc;
            }
            set
            {
                OnDiagDescChanging(value);
                ReportPropertyChanging("DiagDesc");
                _DiagDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DiagDesc");
                OnDiagDescChanged();
            }
        }
        private global::System.String _DiagDesc;
        partial void OnDiagDescChanging(global::System.String value);
        partial void OnDiagDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DiagType
        {
            get
            {
                return _V_DiagType;
            }
            set
            {
                OnV_DiagTypeChanging(value);
                ReportPropertyChanging("V_DiagType");
                _V_DiagType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DiagType");
                OnV_DiagTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DiagType;
        partial void OnV_DiagTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_DiagTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedEnctrDiagnosis_IDC10", "ICD10")]
        public ICD10 ICD10
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD10Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_MedEnctrDiagnosis_IDC10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalBill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalBill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalBill object.
        /// </summary>
        /// <param name="medBillID">Initial value of the MedBillID property.</param>
        /// <param name="presID">Initial value of the PresID property.</param>
        public static MedicalBill CreateMedicalBill(global::System.Int64 medBillID, global::System.Int64 presID)
        {
            MedicalBill medicalBill = new MedicalBill();
            medicalBill.MedBillID = medBillID;
            medicalBill.PresID = presID;
            return medicalBill;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedBillID
        {
            get
            {
                return _MedBillID;
            }
            set
            {
                if (_MedBillID != value)
                {
                    OnMedBillIDChanging(value);
                    ReportPropertyChanging("MedBillID");
                    _MedBillID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedBillID");
                    OnMedBillIDChanged();
                }
            }
        }
        private global::System.Int64 _MedBillID;
        partial void OnMedBillIDChanging(global::System.Int64 value);
        partial void OnMedBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresID
        {
            get
            {
                return _PresID;
            }
            set
            {
                OnPresIDChanging(value);
                ReportPropertyChanging("PresID");
                _PresID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresID");
                OnPresIDChanged();
            }
        }
        private global::System.Int64 _PresID;
        partial void OnPresIDChanging(global::System.Int64 value);
        partial void OnPresIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosFeeTransDtlID
        {
            get
            {
                return _HosFeeTransDtlID;
            }
            set
            {
                OnHosFeeTransDtlIDChanging(value);
                ReportPropertyChanging("HosFeeTransDtlID");
                _HosFeeTransDtlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosFeeTransDtlID");
                OnHosFeeTransDtlIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosFeeTransDtlID;
        partial void OnHosFeeTransDtlIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosFeeTransDtlIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalBill_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_MedicalBill_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_MedicalBill_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_MedicalBill_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("SureHisModel.FK_MedicalBill_Prescription", "Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalBills_MedicalBill", "MedicalBills")]
        public EntityCollection<MedicalBills> MedicalBills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalBills>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBills");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalBills>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBills", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalBills")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalBills : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalBills object.
        /// </summary>
        /// <param name="medBillsID">Initial value of the MedBillsID property.</param>
        /// <param name="medBillID">Initial value of the MedBillID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="drugNameOrAcPrincipleName">Initial value of the DrugNameOrAcPrincipleName property.</param>
        /// <param name="qty">Initial value of the Qty property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        public static MedicalBills CreateMedicalBills(global::System.Int64 medBillsID, global::System.Int64 medBillID, global::System.Int64 drugID, global::System.String drugNameOrAcPrincipleName, global::System.Double qty, global::System.Double unitPrice)
        {
            MedicalBills medicalBills = new MedicalBills();
            medicalBills.MedBillsID = medBillsID;
            medicalBills.MedBillID = medBillID;
            medicalBills.DrugID = drugID;
            medicalBills.DrugNameOrAcPrincipleName = drugNameOrAcPrincipleName;
            medicalBills.Qty = qty;
            medicalBills.UnitPrice = unitPrice;
            return medicalBills;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedBillsID
        {
            get
            {
                return _MedBillsID;
            }
            set
            {
                if (_MedBillsID != value)
                {
                    OnMedBillsIDChanging(value);
                    ReportPropertyChanging("MedBillsID");
                    _MedBillsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedBillsID");
                    OnMedBillsIDChanged();
                }
            }
        }
        private global::System.Int64 _MedBillsID;
        partial void OnMedBillsIDChanging(global::System.Int64 value);
        partial void OnMedBillsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedBillID
        {
            get
            {
                return _MedBillID;
            }
            set
            {
                OnMedBillIDChanging(value);
                ReportPropertyChanging("MedBillID");
                _MedBillID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedBillID");
                OnMedBillIDChanged();
            }
        }
        private global::System.Int64 _MedBillID;
        partial void OnMedBillIDChanging(global::System.Int64 value);
        partial void OnMedBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugNameOrAcPrincipleName
        {
            get
            {
                return _DrugNameOrAcPrincipleName;
            }
            set
            {
                OnDrugNameOrAcPrincipleNameChanging(value);
                ReportPropertyChanging("DrugNameOrAcPrincipleName");
                _DrugNameOrAcPrincipleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DrugNameOrAcPrincipleName");
                OnDrugNameOrAcPrincipleNameChanged();
            }
        }
        private global::System.String _DrugNameOrAcPrincipleName;
        partial void OnDrugNameOrAcPrincipleNameChanging(global::System.String value);
        partial void OnDrugNameOrAcPrincipleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnDoseUnitCode
        {
            get
            {
                return _MedcnDoseUnitCode;
            }
            set
            {
                OnMedcnDoseUnitCodeChanging(value);
                ReportPropertyChanging("MedcnDoseUnitCode");
                _MedcnDoseUnitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnDoseUnitCode");
                OnMedcnDoseUnitCodeChanged();
            }
        }
        private global::System.String _MedcnDoseUnitCode;
        partial void OnMedcnDoseUnitCodeChanging(global::System.String value);
        partial void OnMedcnDoseUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Qty
        {
            get
            {
                return _Qty;
            }
            set
            {
                OnQtyChanging(value);
                ReportPropertyChanging("Qty");
                _Qty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Qty");
                OnQtyChanged();
            }
        }
        private global::System.Double _Qty;
        partial void OnQtyChanging(global::System.Double value);
        partial void OnQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalBills_MedicalBill", "MedicalBill")]
        public MedicalBill MedicalBill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalBill>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalBill>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalBill> MedicalBillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalBill>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalBill>("SureHisModel.FK_MedicalBills_MedicalBill", "MedicalBill", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalClaimService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalClaimService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalClaimService object.
        /// </summary>
        /// <param name="medClaimSerID">Initial value of the MedClaimSerID property.</param>
        /// <param name="admID">Initial value of the AdmID property.</param>
        public static MedicalClaimService CreateMedicalClaimService(global::System.Int64 medClaimSerID, global::System.Int64 admID)
        {
            MedicalClaimService medicalClaimService = new MedicalClaimService();
            medicalClaimService.MedClaimSerID = medClaimSerID;
            medicalClaimService.AdmID = admID;
            return medicalClaimService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedClaimSerID
        {
            get
            {
                return _MedClaimSerID;
            }
            set
            {
                if (_MedClaimSerID != value)
                {
                    OnMedClaimSerIDChanging(value);
                    ReportPropertyChanging("MedClaimSerID");
                    _MedClaimSerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedClaimSerID");
                    OnMedClaimSerIDChanged();
                }
            }
        }
        private global::System.Int64 _MedClaimSerID;
        partial void OnMedClaimSerIDChanging(global::System.Int64 value);
        partial void OnMedClaimSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private global::System.Int64 _AdmID;
        partial void OnAdmIDChanging(global::System.Int64 value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerID;
        partial void OnMedSerIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosFeeTransID
        {
            get
            {
                return _HosFeeTransID;
            }
            set
            {
                OnHosFeeTransIDChanging(value);
                ReportPropertyChanging("HosFeeTransID");
                _HosFeeTransID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosFeeTransID");
                OnHosFeeTransIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosFeeTransID;
        partial void OnHosFeeTransIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosFeeTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_PmtStatus
        {
            get
            {
                return _V_PmtStatus;
            }
            set
            {
                OnV_PmtStatusChanging(value);
                ReportPropertyChanging("V_PmtStatus");
                _V_PmtStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PmtStatus");
                OnV_PmtStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_PmtStatus;
        partial void OnV_PmtStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_PmtStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction")]
        public HospitalFeeTransaction HospitalFeeTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalFeeTransaction>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalFeeTransaction>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalFeeTransaction> HospitalFeeTransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalFeeTransaction>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalFeeTransaction>("SureHisModel.FK_MedicalClaimService_HospitalFeeTransaction", "HospitalFeeTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedClaimService_MedServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalClaimService_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalConditionRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalConditionRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalConditionRecord object.
        /// </summary>
        /// <param name="mCRecID">Initial value of the MCRecID property.</param>
        /// <param name="mCID">Initial value of the MCID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="mCYesNo">Initial value of the MCYesNo property.</param>
        public static MedicalConditionRecord CreateMedicalConditionRecord(global::System.Int64 mCRecID, global::System.Int64 mCID, global::System.Int64 ptComMedRecID, global::System.Boolean mCYesNo)
        {
            MedicalConditionRecord medicalConditionRecord = new MedicalConditionRecord();
            medicalConditionRecord.MCRecID = mCRecID;
            medicalConditionRecord.MCID = mCID;
            medicalConditionRecord.PtComMedRecID = ptComMedRecID;
            medicalConditionRecord.MCYesNo = mCYesNo;
            return medicalConditionRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MCRecID
        {
            get
            {
                return _MCRecID;
            }
            set
            {
                if (_MCRecID != value)
                {
                    OnMCRecIDChanging(value);
                    ReportPropertyChanging("MCRecID");
                    _MCRecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MCRecID");
                    OnMCRecIDChanged();
                }
            }
        }
        private global::System.Int64 _MCRecID;
        partial void OnMCRecIDChanging(global::System.Int64 value);
        partial void OnMCRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MCID
        {
            get
            {
                return _MCID;
            }
            set
            {
                OnMCIDChanging(value);
                ReportPropertyChanging("MCID");
                _MCID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MCID");
                OnMCIDChanged();
            }
        }
        private global::System.Int64 _MCID;
        partial void OnMCIDChanging(global::System.Int64 value);
        partial void OnMCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean MCYesNo
        {
            get
            {
                return _MCYesNo;
            }
            set
            {
                OnMCYesNoChanging(value);
                ReportPropertyChanging("MCYesNo");
                _MCYesNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MCYesNo");
                OnMCYesNoChanged();
            }
        }
        private global::System.Boolean _MCYesNo;
        partial void OnMCYesNoChanging(global::System.Boolean value);
        partial void OnMCYesNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MCTextValue
        {
            get
            {
                return _MCTextValue;
            }
            set
            {
                OnMCTextValueChanging(value);
                ReportPropertyChanging("MCTextValue");
                _MCTextValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MCTextValue");
                OnMCTextValueChanged();
            }
        }
        private global::System.String _MCTextValue;
        partial void OnMCTextValueChanging(global::System.String value);
        partial void OnMCTextValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MCExplainOrNotes
        {
            get
            {
                return _MCExplainOrNotes;
            }
            set
            {
                OnMCExplainOrNotesChanging(value);
                ReportPropertyChanging("MCExplainOrNotes");
                _MCExplainOrNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MCExplainOrNotes");
                OnMCExplainOrNotesChanged();
            }
        }
        private global::System.String _MCExplainOrNotes;
        partial void OnMCExplainOrNotesChanging(global::System.String value);
        partial void OnMCExplainOrNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDel
        {
            get
            {
                return _IsDel;
            }
            set
            {
                OnIsDelChanging(value);
                ReportPropertyChanging("IsDel");
                _IsDel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDel");
                OnIsDelChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDel;
        partial void OnIsDelChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition")]
        public refMedicalCondition refMedicalCondition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedicalCondition> refMedicalConditionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalCondition>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedicalCondition>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "refMedicalCondition", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalDiagnosticMethod")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalDiagnosticMethod : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalDiagnosticMethod object.
        /// </summary>
        /// <param name="medDiagMethodID">Initial value of the MedDiagMethodID property.</param>
        /// <param name="prefixCode">Initial value of the PrefixCode property.</param>
        public static MedicalDiagnosticMethod CreateMedicalDiagnosticMethod(global::System.Int64 medDiagMethodID, global::System.String prefixCode)
        {
            MedicalDiagnosticMethod medicalDiagnosticMethod = new MedicalDiagnosticMethod();
            medicalDiagnosticMethod.MedDiagMethodID = medDiagMethodID;
            medicalDiagnosticMethod.PrefixCode = prefixCode;
            return medicalDiagnosticMethod;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedDiagMethodID
        {
            get
            {
                return _MedDiagMethodID;
            }
            set
            {
                if (_MedDiagMethodID != value)
                {
                    OnMedDiagMethodIDChanging(value);
                    ReportPropertyChanging("MedDiagMethodID");
                    _MedDiagMethodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedDiagMethodID");
                    OnMedDiagMethodIDChanged();
                }
            }
        }
        private global::System.Int64 _MedDiagMethodID;
        partial void OnMedDiagMethodIDChanging(global::System.Int64 value);
        partial void OnMedDiagMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrefixCode
        {
            get
            {
                return _PrefixCode;
            }
            set
            {
                OnPrefixCodeChanging(value);
                ReportPropertyChanging("PrefixCode");
                _PrefixCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrefixCode");
                OnPrefixCodeChanged();
            }
        }
        private global::System.String _PrefixCode;
        partial void OnPrefixCodeChanging(global::System.String value);
        partial void OnPrefixCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedDiagNote
        {
            get
            {
                return _MedDiagNote;
            }
            set
            {
                OnMedDiagNoteChanging(value);
                ReportPropertyChanging("MedDiagNote");
                _MedDiagNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedDiagNote");
                OnMedDiagNoteChanged();
            }
        }
        private global::System.String _MedDiagNote;
        partial void OnMedDiagNoteChanging(global::System.String value);
        partial void OnMedDiagNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedDiagDesc
        {
            get
            {
                return _MedDiagDesc;
            }
            set
            {
                OnMedDiagDescChanging(value);
                ReportPropertyChanging("MedDiagDesc");
                _MedDiagDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedDiagDesc");
                OnMedDiagDescChanged();
            }
        }
        private global::System.String _MedDiagDesc;
        partial void OnMedDiagDescChanging(global::System.String value);
        partial void OnMedDiagDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "ParaClinicalExamGroup")]
        public EntityCollection<ParaClinicalExamGroup> ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "ParaClinicalExamGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalEncounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalEncounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalEncounter object.
        /// </summary>
        /// <param name="medEncnID">Initial value of the MedEncnID property.</param>
        /// <param name="patientRecID">Initial value of the PatientRecID property.</param>
        /// <param name="admID">Initial value of the AdmID property.</param>
        /// <param name="hosDeptID">Initial value of the HosDeptID property.</param>
        /// <param name="hCFEncTreatPracName">Initial value of the HCFEncTreatPracName property.</param>
        /// <param name="attendingDoctorID">Initial value of the AttendingDoctorID property.</param>
        /// <param name="ptClassHisID">Initial value of the PtClassHisID property.</param>
        /// <param name="hCFEDispDispDtm">Initial value of the HCFEDispDispDtm property.</param>
        /// <param name="v_ConsultStatus">Initial value of the V_ConsultStatus property.</param>
        public static MedicalEncounter CreateMedicalEncounter(global::System.Int64 medEncnID, global::System.Int64 patientRecID, global::System.Int64 admID, global::System.Int64 hosDeptID, global::System.String hCFEncTreatPracName, global::System.Int64 attendingDoctorID, global::System.Int64 ptClassHisID, global::System.DateTime hCFEDispDispDtm, global::System.Int64 v_ConsultStatus)
        {
            MedicalEncounter medicalEncounter = new MedicalEncounter();
            medicalEncounter.MedEncnID = medEncnID;
            medicalEncounter.PatientRecID = patientRecID;
            medicalEncounter.AdmID = admID;
            medicalEncounter.HosDeptID = hosDeptID;
            medicalEncounter.HCFEncTreatPracName = hCFEncTreatPracName;
            medicalEncounter.AttendingDoctorID = attendingDoctorID;
            medicalEncounter.PtClassHisID = ptClassHisID;
            medicalEncounter.HCFEDispDispDtm = hCFEDispDispDtm;
            medicalEncounter.V_ConsultStatus = v_ConsultStatus;
            return medicalEncounter;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                if (_MedEncnID != value)
                {
                    OnMedEncnIDChanging(value);
                    ReportPropertyChanging("MedEncnID");
                    _MedEncnID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedEncnID");
                    OnMedEncnIDChanged();
                }
            }
        }
        private global::System.Int64 _MedEncnID;
        partial void OnMedEncnIDChanging(global::System.Int64 value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEncEncounterCode
        {
            get
            {
                return _HCFEncEncounterCode;
            }
            set
            {
                OnHCFEncEncounterCodeChanging(value);
                ReportPropertyChanging("HCFEncEncounterCode");
                _HCFEncEncounterCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEncEncounterCode");
                OnHCFEncEncounterCodeChanged();
            }
        }
        private global::System.String _HCFEncEncounterCode;
        partial void OnHCFEncEncounterCodeChanging(global::System.String value);
        partial void OnHCFEncEncounterCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PatientRecID
        {
            get
            {
                return _PatientRecID;
            }
            set
            {
                OnPatientRecIDChanging(value);
                ReportPropertyChanging("PatientRecID");
                _PatientRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PatientRecID");
                OnPatientRecIDChanged();
            }
        }
        private global::System.Int64 _PatientRecID;
        partial void OnPatientRecIDChanging(global::System.Int64 value);
        partial void OnPatientRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private global::System.Int64 _AdmID;
        partial void OnAdmIDChanging(global::System.Int64 value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private global::System.Int64 _HosDeptID;
        partial void OnHosDeptIDChanging(global::System.Int64 value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCFEncTreatPracName
        {
            get
            {
                return _HCFEncTreatPracName;
            }
            set
            {
                OnHCFEncTreatPracNameChanging(value);
                ReportPropertyChanging("HCFEncTreatPracName");
                _HCFEncTreatPracName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCFEncTreatPracName");
                OnHCFEncTreatPracNameChanged();
            }
        }
        private global::System.String _HCFEncTreatPracName;
        partial void OnHCFEncTreatPracNameChanging(global::System.String value);
        partial void OnHCFEncTreatPracNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AttendingDoctorID
        {
            get
            {
                return _AttendingDoctorID;
            }
            set
            {
                OnAttendingDoctorIDChanging(value);
                ReportPropertyChanging("AttendingDoctorID");
                _AttendingDoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AttendingDoctorID");
                OnAttendingDoctorIDChanged();
            }
        }
        private global::System.Int64 _AttendingDoctorID;
        partial void OnAttendingDoctorIDChanging(global::System.Int64 value);
        partial void OnAttendingDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> NurseID
        {
            get
            {
                return _NurseID;
            }
            set
            {
                OnNurseIDChanging(value);
                ReportPropertyChanging("NurseID");
                _NurseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NurseID");
                OnNurseIDChanged();
            }
        }
        private Nullable<global::System.Int64> _NurseID;
        partial void OnNurseIDChanging(Nullable<global::System.Int64> value);
        partial void OnNurseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtClassHisID
        {
            get
            {
                return _PtClassHisID;
            }
            set
            {
                OnPtClassHisIDChanging(value);
                ReportPropertyChanging("PtClassHisID");
                _PtClassHisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtClassHisID");
                OnPtClassHisIDChanged();
            }
        }
        private global::System.Int64 _PtClassHisID;
        partial void OnPtClassHisIDChanging(global::System.Int64 value);
        partial void OnPtClassHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEncEncounterTypeCode
        {
            get
            {
                return _HCFEncEncounterTypeCode;
            }
            set
            {
                OnHCFEncEncounterTypeCodeChanging(value);
                ReportPropertyChanging("HCFEncEncounterTypeCode");
                _HCFEncEncounterTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEncEncounterTypeCode");
                OnHCFEncEncounterTypeCodeChanged();
            }
        }
        private global::System.String _HCFEncEncounterTypeCode;
        partial void OnHCFEncEncounterTypeCodeChanging(global::System.String value);
        partial void OnHCFEncEncounterTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreDiagnosis
        {
            get
            {
                return _PreDiagnosis;
            }
            set
            {
                OnPreDiagnosisChanging(value);
                ReportPropertyChanging("PreDiagnosis");
                _PreDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreDiagnosis");
                OnPreDiagnosisChanged();
            }
        }
        private global::System.String _PreDiagnosis;
        partial void OnPreDiagnosisChanging(global::System.String value);
        partial void OnPreDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InitialICD
        {
            get
            {
                return _InitialICD;
            }
            set
            {
                OnInitialICDChanging(value);
                ReportPropertyChanging("InitialICD");
                _InitialICD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InitialICD");
                OnInitialICDChanged();
            }
        }
        private global::System.String _InitialICD;
        partial void OnInitialICDChanging(global::System.String value);
        partial void OnInitialICDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispDiagICDCode
        {
            get
            {
                return _HCFEDispDiagICDCode;
            }
            set
            {
                OnHCFEDispDiagICDCodeChanging(value);
                ReportPropertyChanging("HCFEDispDiagICDCode");
                _HCFEDispDiagICDCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEDispDiagICDCode");
                OnHCFEDispDiagICDCodeChanged();
            }
        }
        private global::System.String _HCFEDispDiagICDCode;
        partial void OnHCFEDispDiagICDCodeChanging(global::System.String value);
        partial void OnHCFEDispDiagICDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DescICD
        {
            get
            {
                return _DescICD;
            }
            set
            {
                OnDescICDChanging(value);
                ReportPropertyChanging("DescICD");
                _DescICD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DescICD");
                OnDescICDChanged();
            }
        }
        private global::System.String _DescICD;
        partial void OnDescICDChanging(global::System.String value);
        partial void OnDescICDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExtraICD
        {
            get
            {
                return _ExtraICD;
            }
            set
            {
                OnExtraICDChanging(value);
                ReportPropertyChanging("ExtraICD");
                _ExtraICD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExtraICD");
                OnExtraICDChanged();
            }
        }
        private global::System.String _ExtraICD;
        partial void OnExtraICDChanging(global::System.String value);
        partial void OnExtraICDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HCFEDispDisposCode
        {
            get
            {
                return _HCFEDispDisposCode;
            }
            set
            {
                OnHCFEDispDisposCodeChanging(value);
                ReportPropertyChanging("HCFEDispDisposCode");
                _HCFEDispDisposCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFEDispDisposCode");
                OnHCFEDispDisposCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _HCFEDispDisposCode;
        partial void OnHCFEDispDisposCodeChanging(Nullable<global::System.Int64> value);
        partial void OnHCFEDispDisposCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HCFEDispDispDtm
        {
            get
            {
                return _HCFEDispDispDtm;
            }
            set
            {
                OnHCFEDispDispDtmChanging(value);
                ReportPropertyChanging("HCFEDispDispDtm");
                _HCFEDispDispDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFEDispDispDtm");
                OnHCFEDispDispDtmChanged();
            }
        }
        private global::System.DateTime _HCFEDispDispDtm;
        partial void OnHCFEDispDispDtmChanging(global::System.DateTime value);
        partial void OnHCFEDispDispDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispPtInstructText
        {
            get
            {
                return _HCFEDispPtInstructText;
            }
            set
            {
                OnHCFEDispPtInstructTextChanging(value);
                ReportPropertyChanging("HCFEDispPtInstructText");
                _HCFEDispPtInstructText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEDispPtInstructText");
                OnHCFEDispPtInstructTextChanged();
            }
        }
        private global::System.String _HCFEDispPtInstructText;
        partial void OnHCFEDispPtInstructTextChanging(global::System.String value);
        partial void OnHCFEDispPtInstructTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispNoteText
        {
            get
            {
                return _HCFEDispNoteText;
            }
            set
            {
                OnHCFEDispNoteTextChanging(value);
                ReportPropertyChanging("HCFEDispNoteText");
                _HCFEDispNoteText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEDispNoteText");
                OnHCFEDispNoteTextChanged();
            }
        }
        private global::System.String _HCFEDispNoteText;
        partial void OnHCFEDispNoteTextChanging(global::System.String value);
        partial void OnHCFEDispNoteTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransToDepID
        {
            get
            {
                return _TransToDepID;
            }
            set
            {
                OnTransToDepIDChanging(value);
                ReportPropertyChanging("TransToDepID");
                _TransToDepID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransToDepID");
                OnTransToDepIDChanged();
            }
        }
        private global::System.String _TransToDepID;
        partial void OnTransToDepIDChanging(global::System.String value);
        partial void OnTransToDepIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ConsultStatus
        {
            get
            {
                return _V_ConsultStatus;
            }
            set
            {
                OnV_ConsultStatusChanging(value);
                ReportPropertyChanging("V_ConsultStatus");
                _V_ConsultStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ConsultStatus");
                OnV_ConsultStatusChanged();
            }
        }
        private global::System.Int64 _V_ConsultStatus;
        partial void OnV_ConsultStatusChanging(global::System.Int64 value);
        partial void OnV_ConsultStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DeathSituationInfo_MedicalEncounter", "DeathSituationInfo")]
        public EntityCollection<DeathSituationInfo> DeathSituationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeathSituationInfo>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "DeathSituationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeathSituationInfo>("SureHisModel.FK_DeathSituationInfo_MedicalEncounter", "DeathSituationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedicalEncounter_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedEnctrDiagnosis_MedicalEncounter", "MedEnctrDiagnosis")]
        public EntityCollection<MedEnctrDiagnosis> MedEnctrDiagnosis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedEnctrDiagnosis>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedEnctrDiagnosis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedEnctrDiagnosis>("SureHisModel.FK_MedEnctrDiagnosis_MedicalEncounter", "MedEnctrDiagnosis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Encounter_PatientRecords", "PatientMedRecord")]
        public PatientMedRecord PatientMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_Encounter_PatientRecords", "PatientMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_Encounter_PatientRecords", "PatientMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientMedRecord> PatientMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_Encounter_PatientRecords", "PatientMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientMedRecord>("SureHisModel.FK_Encounter_PatientRecords", "PatientMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Encounter_refDispositionType", "refDischargeDisposition")]
        public refDischargeDisposition refDischargeDisposition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDischargeDisposition>("SureHisModel.FK_Encounter_refDispositionType", "refDischargeDisposition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDischargeDisposition>("SureHisModel.FK_Encounter_refDispositionType", "refDischargeDisposition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDischargeDisposition> refDischargeDispositionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDischargeDisposition>("SureHisModel.FK_Encounter_refDispositionType", "refDischargeDisposition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDischargeDisposition>("SureHisModel.FK_Encounter_refDispositionType", "refDischargeDisposition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalEncounter_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalEncounter", "ParaClinicalReq")]
        public EntityCollection<ParaClinicalReq> ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientProblem_MedicalEncounter", "PatientProblem")]
        public EntityCollection<PatientProblem> PatientProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientProblem>("SureHisModel.FK_PatientProblem_MedicalEncounter", "PatientProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientProblem>("SureHisModel.FK_PatientProblem_MedicalEncounter", "PatientProblem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_MedicalEncounter", "PatientVitalSign")]
        public EntityCollection<PatientVitalSign> PatientVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "PatientVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "PatientVitalSign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PhysicalExamination_MedicalEncounter", "PhysicalExamination")]
        public EntityCollection<PhysicalExamination> PhysicalExamination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalExamination>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "PhysicalExamination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalExamination>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "PhysicalExamination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_MedicalEncounter", "Prescription")]
        public EntityCollection<Prescription> Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Prescription>("SureHisModel.FK_Prescription_MedicalEncounter", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Prescription>("SureHisModel.FK_Prescription_MedicalEncounter", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalEquimentsResources")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalEquimentsResources : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalEquimentsResources object.
        /// </summary>
        /// <param name="equipMDSrcrID">Initial value of the EquipMDSrcrID property.</param>
        /// <param name="serialNumber">Initial value of the SerialNumber property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="barcode">Initial value of the Barcode property.</param>
        public static MedicalEquimentsResources CreateMedicalEquimentsResources(global::System.Int64 equipMDSrcrID, global::System.String serialNumber, global::System.String model, global::System.String barcode)
        {
            MedicalEquimentsResources medicalEquimentsResources = new MedicalEquimentsResources();
            medicalEquimentsResources.EquipMDSrcrID = equipMDSrcrID;
            medicalEquimentsResources.SerialNumber = serialNumber;
            medicalEquimentsResources.Model = model;
            medicalEquimentsResources.Barcode = barcode;
            return medicalEquimentsResources;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EquipMDSrcrID
        {
            get
            {
                return _EquipMDSrcrID;
            }
            set
            {
                if (_EquipMDSrcrID != value)
                {
                    OnEquipMDSrcrIDChanging(value);
                    ReportPropertyChanging("EquipMDSrcrID");
                    _EquipMDSrcrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquipMDSrcrID");
                    OnEquipMDSrcrIDChanged();
                }
            }
        }
        private global::System.Int64 _EquipMDSrcrID;
        partial void OnEquipMDSrcrIDChanging(global::System.Int64 value);
        partial void OnEquipMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SerialNumber
        {
            get
            {
                return _SerialNumber;
            }
            set
            {
                OnSerialNumberChanging(value);
                ReportPropertyChanging("SerialNumber");
                _SerialNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SerialNumber");
                OnSerialNumberChanged();
            }
        }
        private global::System.String _SerialNumber;
        partial void OnSerialNumberChanging(global::System.String value);
        partial void OnSerialNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Barcode
        {
            get
            {
                return _Barcode;
            }
            set
            {
                OnBarcodeChanging(value);
                ReportPropertyChanging("Barcode");
                _Barcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Barcode");
                OnBarcodeChanged();
            }
        }
        private global::System.String _Barcode;
        partial void OnBarcodeChanging(global::System.String value);
        partial void OnBarcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LatestDateExam
        {
            get
            {
                return _LatestDateExam;
            }
            set
            {
                OnLatestDateExamChanging(value);
                ReportPropertyChanging("LatestDateExam");
                _LatestDateExam = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LatestDateExam");
                OnLatestDateExamChanged();
            }
        }
        private Nullable<global::System.DateTime> _LatestDateExam;
        partial void OnLatestDateExamChanging(Nullable<global::System.DateTime> value);
        partial void OnLatestDateExamChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ExamCyle
        {
            get
            {
                return _ExamCyle;
            }
            set
            {
                OnExamCyleChanging(value);
                ReportPropertyChanging("ExamCyle");
                _ExamCyle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamCyle");
                OnExamCyleChanged();
            }
        }
        private Nullable<global::System.Byte> _ExamCyle;
        partial void OnExamCyleChanging(Nullable<global::System.Byte> value);
        partial void OnExamCyleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MaintenanceCycle
        {
            get
            {
                return _MaintenanceCycle;
            }
            set
            {
                OnMaintenanceCycleChanging(value);
                ReportPropertyChanging("MaintenanceCycle");
                _MaintenanceCycle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaintenanceCycle");
                OnMaintenanceCycleChanged();
            }
        }
        private Nullable<global::System.Byte> _MaintenanceCycle;
        partial void OnMaintenanceCycleChanging(Nullable<global::System.Byte> value);
        partial void OnMaintenanceCycleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDate
        {
            get
            {
                return _ExpiryDate;
            }
            set
            {
                OnExpiryDateChanging(value);
                ReportPropertyChanging("ExpiryDate");
                _ExpiryDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDate");
                OnExpiryDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDate;
        partial void OnExpiryDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignMedEquip_MedicalEquimentsResources", "AssignMedEquip")]
        public EntityCollection<AssignMedEquip> AssignMedEquip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignMedEquip>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "AssignMedEquip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignMedEquip>("SureHisModel.FK_AssignMedEquip_MedicalEquimentsResources", "AssignMedEquip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquipHistory_MedicalEquimentsResources", "EquipHistory")]
        public EntityCollection<EquipHistory> EquipHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquipHistory>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "EquipHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquipHistory>("SureHisModel.FK_EquipHistory_MedicalEquimentsResources", "EquipHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ExamMaintenanceHistory_MedicalEquimentsResources", "ExamMaintenanceHistory")]
        public EntityCollection<ExamMaintenanceHistory> ExamMaintenanceHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExamMaintenanceHistory>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "ExamMaintenanceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExamMaintenanceHistory>("SureHisModel.FK_ExamMaintenanceHistory_MedicalEquimentsResources", "ExamMaintenanceHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientDiagnosticImaging_MedicalEquimentsResources", "PatientDiagnosticImaging")]
        public EntityCollection<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "PatientDiagnosticImaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_MedicalEquimentsResources", "TestOnPatientSpecimen")]
        public EntityCollection<TestOnPatientSpecimen> TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalServiceItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalServiceItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalServiceItem object.
        /// </summary>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        /// <param name="medSerTypeID">Initial value of the MedSerTypeID property.</param>
        /// <param name="medSerCode">Initial value of the MedSerCode property.</param>
        /// <param name="medSerName">Initial value of the MedSerName property.</param>
        /// <param name="medSerUOM">Initial value of the MedSerUOM property.</param>
        /// <param name="isPackage">Initial value of the IsPackage property.</param>
        /// <param name="usePricePackage">Initial value of the UsePricePackage property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        public static MedicalServiceItem CreateMedicalServiceItem(global::System.Int64 medSerID, global::System.Int64 medSerTypeID, global::System.String medSerCode, global::System.String medSerName, global::System.String medSerUOM, global::System.Boolean isPackage, global::System.Boolean usePricePackage, global::System.Boolean stop)
        {
            MedicalServiceItem medicalServiceItem = new MedicalServiceItem();
            medicalServiceItem.MedSerID = medSerID;
            medicalServiceItem.MedSerTypeID = medSerTypeID;
            medicalServiceItem.MedSerCode = medSerCode;
            medicalServiceItem.MedSerName = medSerName;
            medicalServiceItem.MedSerUOM = medSerUOM;
            medicalServiceItem.IsPackage = isPackage;
            medicalServiceItem.UsePricePackage = usePricePackage;
            medicalServiceItem.Stop = stop;
            return medicalServiceItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                if (_MedSerID != value)
                {
                    OnMedSerIDChanging(value);
                    ReportPropertyChanging("MedSerID");
                    _MedSerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedSerID");
                    OnMedSerIDChanged();
                }
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerTypeID
        {
            get
            {
                return _MedSerTypeID;
            }
            set
            {
                OnMedSerTypeIDChanging(value);
                ReportPropertyChanging("MedSerTypeID");
                _MedSerTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerTypeID");
                OnMedSerTypeIDChanged();
            }
        }
        private global::System.Int64 _MedSerTypeID;
        partial void OnMedSerTypeIDChanging(global::System.Int64 value);
        partial void OnMedSerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerCode
        {
            get
            {
                return _MedSerCode;
            }
            set
            {
                OnMedSerCodeChanging(value);
                ReportPropertyChanging("MedSerCode");
                _MedSerCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerCode");
                OnMedSerCodeChanged();
            }
        }
        private global::System.String _MedSerCode;
        partial void OnMedSerCodeChanging(global::System.String value);
        partial void OnMedSerCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerName
        {
            get
            {
                return _MedSerName;
            }
            set
            {
                OnMedSerNameChanging(value);
                ReportPropertyChanging("MedSerName");
                _MedSerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerName");
                OnMedSerNameChanged();
            }
        }
        private global::System.String _MedSerName;
        partial void OnMedSerNameChanging(global::System.String value);
        partial void OnMedSerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedSerDesc
        {
            get
            {
                return _MedSerDesc;
            }
            set
            {
                OnMedSerDescChanging(value);
                ReportPropertyChanging("MedSerDesc");
                _MedSerDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedSerDesc");
                OnMedSerDescChanged();
            }
        }
        private global::System.String _MedSerDesc;
        partial void OnMedSerDescChanging(global::System.String value);
        partial void OnMedSerDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerUOM
        {
            get
            {
                return _MedSerUOM;
            }
            set
            {
                OnMedSerUOMChanging(value);
                ReportPropertyChanging("MedSerUOM");
                _MedSerUOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerUOM");
                OnMedSerUOMChanged();
            }
        }
        private global::System.String _MedSerUOM;
        partial void OnMedSerUOMChanging(global::System.String value);
        partial void OnMedSerUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> VATRate
        {
            get
            {
                return _VATRate;
            }
            set
            {
                OnVATRateChanging(value);
                ReportPropertyChanging("VATRate");
                _VATRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VATRate");
                OnVATRateChanged();
            }
        }
        private Nullable<global::System.Double> _VATRate;
        partial void OnVATRateChanging(Nullable<global::System.Double> value);
        partial void OnVATRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ServiceMainTime
        {
            get
            {
                return _ServiceMainTime;
            }
            set
            {
                OnServiceMainTimeChanging(value);
                ReportPropertyChanging("ServiceMainTime");
                _ServiceMainTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ServiceMainTime");
                OnServiceMainTimeChanged();
            }
        }
        private Nullable<global::System.Byte> _ServiceMainTime;
        partial void OnServiceMainTimeChanging(Nullable<global::System.Byte> value);
        partial void OnServiceMainTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_TimeUnit
        {
            get
            {
                return _V_TimeUnit;
            }
            set
            {
                OnV_TimeUnitChanging(value);
                ReportPropertyChanging("V_TimeUnit");
                _V_TimeUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_TimeUnit");
                OnV_TimeUnitChanged();
            }
        }
        private Nullable<global::System.Int64> _V_TimeUnit;
        partial void OnV_TimeUnitChanging(Nullable<global::System.Int64> value);
        partial void OnV_TimeUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PartnershipID
        {
            get
            {
                return _PartnershipID;
            }
            set
            {
                OnPartnershipIDChanging(value);
                ReportPropertyChanging("PartnershipID");
                _PartnershipID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnershipID");
                OnPartnershipIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PartnershipID;
        partial void OnPartnershipIDChanging(Nullable<global::System.Int64> value);
        partial void OnPartnershipIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPackage
        {
            get
            {
                return _IsPackage;
            }
            set
            {
                OnIsPackageChanging(value);
                ReportPropertyChanging("IsPackage");
                _IsPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPackage");
                OnIsPackageChanged();
            }
        }
        private global::System.Boolean _IsPackage;
        partial void OnIsPackageChanging(global::System.Boolean value);
        partial void OnIsPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UsePricePackage
        {
            get
            {
                return _UsePricePackage;
            }
            set
            {
                OnUsePricePackageChanging(value);
                ReportPropertyChanging("UsePricePackage");
                _UsePricePackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsePricePackage");
                OnUsePricePackageChanged();
            }
        }
        private global::System.Boolean _UsePricePackage;
        partial void OnUsePricePackageChanging(global::System.Boolean value);
        partial void OnUsePricePackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_MedSerCategory
        {
            get
            {
                return _V_MedSerCategory;
            }
            set
            {
                OnV_MedSerCategoryChanging(value);
                ReportPropertyChanging("V_MedSerCategory");
                _V_MedSerCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedSerCategory");
                OnV_MedSerCategoryChanged();
            }
        }
        private Nullable<global::System.Int64> _V_MedSerCategory;
        partial void OnV_MedSerCategoryChanging(Nullable<global::System.Int64> value);
        partial void OnV_MedSerCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_MedicalServiceItem", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_MedicalServiceItem", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_MedicalServiceItem", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EquivMedService_MedicalServiceItem", "EquivMedService")]
        public EntityCollection<EquivMedService> EquivMedService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquivMedService>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "EquivMedService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquivMedService>("SureHisModel.FK_EquivMedService_MedicalServiceItem", "EquivMedService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HosFeeTransDetails_MedicalServiceItem", "HosFeeTransDetails")]
        public EntityCollection<HosFeeTransDetails> HosFeeTransDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HosFeeTransDetails>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "HosFeeTransDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HosFeeTransDetails>("SureHisModel.FK_HosFeeTransDetails_MedicalServiceItem", "HosFeeTransDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedClaimService_MedServiceItem", "MedicalClaimService")]
        public EntityCollection<MedicalClaimService> MedicalClaimService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedClaimService_MedServiceItem", "MedicalClaimService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType")]
        public refMedicalServiceType refMedicalServiceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedicalServiceType> refMedicalServiceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedicalServiceType>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedicalServiceType>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "refMedicalServiceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership")]
        public ResearchPartnership ResearchPartnership
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResearchPartnership>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResearchPartnership>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ResearchPartnership> ResearchPartnershipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ResearchPartnership>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ResearchPartnership>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "ResearchPartnership", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalServiceItem", "MedImagingTestItems")]
        public EntityCollection<MedImagingTestItems> MedImagingTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedImagingTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedImagingTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedicalServiceItem", "MedLabTestItems")]
        public EntityCollection<MedLabTestItems> MedLabTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedLabTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedLabTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MOHServiceItems_MedicalServiceItem", "MOHServiceItems")]
        public EntityCollection<MOHServiceItems> MOHServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOHServiceItems>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MOHServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOHServiceItems>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MOHServiceItems", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalServicePackage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalServicePackage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalServicePackage object.
        /// </summary>
        /// <param name="medSerPkgID">Initial value of the MedSerPkgID property.</param>
        /// <param name="medSerPkgCode">Initial value of the MedSerPkgCode property.</param>
        /// <param name="medSerPkgName">Initial value of the MedSerPkgName property.</param>
        /// <param name="isDiscount">Initial value of the IsDiscount property.</param>
        public static MedicalServicePackage CreateMedicalServicePackage(global::System.Int64 medSerPkgID, global::System.String medSerPkgCode, global::System.String medSerPkgName, global::System.Boolean isDiscount)
        {
            MedicalServicePackage medicalServicePackage = new MedicalServicePackage();
            medicalServicePackage.MedSerPkgID = medSerPkgID;
            medicalServicePackage.MedSerPkgCode = medSerPkgCode;
            medicalServicePackage.MedSerPkgName = medSerPkgName;
            medicalServicePackage.IsDiscount = isDiscount;
            return medicalServicePackage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerPkgID
        {
            get
            {
                return _MedSerPkgID;
            }
            set
            {
                if (_MedSerPkgID != value)
                {
                    OnMedSerPkgIDChanging(value);
                    ReportPropertyChanging("MedSerPkgID");
                    _MedSerPkgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedSerPkgID");
                    OnMedSerPkgIDChanged();
                }
            }
        }
        private global::System.Int64 _MedSerPkgID;
        partial void OnMedSerPkgIDChanging(global::System.Int64 value);
        partial void OnMedSerPkgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerPkgCode
        {
            get
            {
                return _MedSerPkgCode;
            }
            set
            {
                OnMedSerPkgCodeChanging(value);
                ReportPropertyChanging("MedSerPkgCode");
                _MedSerPkgCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerPkgCode");
                OnMedSerPkgCodeChanged();
            }
        }
        private global::System.String _MedSerPkgCode;
        partial void OnMedSerPkgCodeChanging(global::System.String value);
        partial void OnMedSerPkgCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerPkgName
        {
            get
            {
                return _MedSerPkgName;
            }
            set
            {
                OnMedSerPkgNameChanging(value);
                ReportPropertyChanging("MedSerPkgName");
                _MedSerPkgName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerPkgName");
                OnMedSerPkgNameChanged();
            }
        }
        private global::System.String _MedSerPkgName;
        partial void OnMedSerPkgNameChanging(global::System.String value);
        partial void OnMedSerPkgNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDiscount
        {
            get
            {
                return _IsDiscount;
            }
            set
            {
                OnIsDiscountChanging(value);
                ReportPropertyChanging("IsDiscount");
                _IsDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDiscount");
                OnIsDiscountChanged();
            }
        }
        private global::System.Boolean _IsDiscount;
        partial void OnIsDiscountChanging(global::System.Boolean value);
        partial void OnIsDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OnlyAppliedToBusiness
        {
            get
            {
                return _OnlyAppliedToBusiness;
            }
            set
            {
                OnOnlyAppliedToBusinessChanging(value);
                ReportPropertyChanging("OnlyAppliedToBusiness");
                _OnlyAppliedToBusiness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnlyAppliedToBusiness");
                OnOnlyAppliedToBusinessChanged();
            }
        }
        private Nullable<global::System.Boolean> _OnlyAppliedToBusiness;
        partial void OnOnlyAppliedToBusinessChanging(Nullable<global::System.Boolean> value);
        partial void OnOnlyAppliedToBusinessChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ChainMedicalServices_MedicalServicePackage", "ChainMedicalServices")]
        public EntityCollection<ChainMedicalServices> ChainMedicalServices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ChainMedicalServices>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "ChainMedicalServices");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ChainMedicalServices>("SureHisModel.FK_ChainMedicalServices_MedicalServicePackage", "ChainMedicalServices", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PromotionService_MedicalServicePackage", "PromotionService")]
        public EntityCollection<PromotionService> PromotionService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PromotionService>("SureHisModel.FK_PromotionService_MedicalServicePackage", "PromotionService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PromotionService>("SureHisModel.FK_PromotionService_MedicalServicePackage", "PromotionService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicalTestProcedure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicalTestProcedure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicalTestProcedure object.
        /// </summary>
        /// <param name="medTestProcID">Initial value of the MedTestProcID property.</param>
        /// <param name="medTestProcCode">Initial value of the MedTestProcCode property.</param>
        /// <param name="medTestProcName">Initial value of the MedTestProcName property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        /// <param name="noEffect">Initial value of the NoEffect property.</param>
        public static MedicalTestProcedure CreateMedicalTestProcedure(global::System.Int64 medTestProcID, global::System.String medTestProcCode, global::System.String medTestProcName, global::System.Int64 estEmpID, global::System.Boolean noEffect)
        {
            MedicalTestProcedure medicalTestProcedure = new MedicalTestProcedure();
            medicalTestProcedure.MedTestProcID = medTestProcID;
            medicalTestProcedure.MedTestProcCode = medTestProcCode;
            medicalTestProcedure.MedTestProcName = medTestProcName;
            medicalTestProcedure.EstEmpID = estEmpID;
            medicalTestProcedure.NoEffect = noEffect;
            return medicalTestProcedure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedTestProcID
        {
            get
            {
                return _MedTestProcID;
            }
            set
            {
                if (_MedTestProcID != value)
                {
                    OnMedTestProcIDChanging(value);
                    ReportPropertyChanging("MedTestProcID");
                    _MedTestProcID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedTestProcID");
                    OnMedTestProcIDChanged();
                }
            }
        }
        private global::System.Int64 _MedTestProcID;
        partial void OnMedTestProcIDChanging(global::System.Int64 value);
        partial void OnMedTestProcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedTestProcCode
        {
            get
            {
                return _MedTestProcCode;
            }
            set
            {
                OnMedTestProcCodeChanging(value);
                ReportPropertyChanging("MedTestProcCode");
                _MedTestProcCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedTestProcCode");
                OnMedTestProcCodeChanged();
            }
        }
        private global::System.String _MedTestProcCode;
        partial void OnMedTestProcCodeChanging(global::System.String value);
        partial void OnMedTestProcCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedTestProcName
        {
            get
            {
                return _MedTestProcName;
            }
            set
            {
                OnMedTestProcNameChanging(value);
                ReportPropertyChanging("MedTestProcName");
                _MedTestProcName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedTestProcName");
                OnMedTestProcNameChanged();
            }
        }
        private global::System.String _MedTestProcName;
        partial void OnMedTestProcNameChanging(global::System.String value);
        partial void OnMedTestProcNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedTestProcDesc
        {
            get
            {
                return _MedTestProcDesc;
            }
            set
            {
                OnMedTestProcDescChanging(value);
                ReportPropertyChanging("MedTestProcDesc");
                _MedTestProcDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedTestProcDesc");
                OnMedTestProcDescChanged();
            }
        }
        private global::System.String _MedTestProcDesc;
        partial void OnMedTestProcDescChanging(global::System.String value);
        partial void OnMedTestProcDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SpecTypeID
        {
            get
            {
                return _SpecTypeID;
            }
            set
            {
                OnSpecTypeIDChanging(value);
                ReportPropertyChanging("SpecTypeID");
                _SpecTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecTypeID");
                OnSpecTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SpecTypeID;
        partial void OnSpecTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnSpecTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResultType
        {
            get
            {
                return _ResultType;
            }
            set
            {
                OnResultTypeChanging(value);
                ReportPropertyChanging("ResultType");
                _ResultType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResultType");
                OnResultTypeChanged();
            }
        }
        private global::System.String _ResultType;
        partial void OnResultTypeChanging(global::System.String value);
        partial void OnResultTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> TimeReturnsResult
        {
            get
            {
                return _TimeReturnsResult;
            }
            set
            {
                OnTimeReturnsResultChanging(value);
                ReportPropertyChanging("TimeReturnsResult");
                _TimeReturnsResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimeReturnsResult");
                OnTimeReturnsResultChanged();
            }
        }
        private Nullable<global::System.Byte> _TimeReturnsResult;
        partial void OnTimeReturnsResultChanging(Nullable<global::System.Byte> value);
        partial void OnTimeReturnsResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AppliedDate
        {
            get
            {
                return _AppliedDate;
            }
            set
            {
                OnAppliedDateChanging(value);
                ReportPropertyChanging("AppliedDate");
                _AppliedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliedDate");
                OnAppliedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AppliedDate;
        partial void OnAppliedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAppliedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDtm
        {
            get
            {
                return _ModifiedDtm;
            }
            set
            {
                OnModifiedDtmChanging(value);
                ReportPropertyChanging("ModifiedDtm");
                _ModifiedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDtm");
                OnModifiedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDtm;
        partial void OnModifiedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private global::System.Boolean _NoEffect;
        partial void OnNoEffectChanging(global::System.Boolean value);
        partial void OnNoEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isPackage
        {
            get
            {
                return _isPackage;
            }
            set
            {
                OnisPackageChanging(value);
                ReportPropertyChanging("isPackage");
                _isPackage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isPackage");
                OnisPackageChanged();
            }
        }
        private Nullable<global::System.Boolean> _isPackage;
        partial void OnisPackageChanging(Nullable<global::System.Boolean> value);
        partial void OnisPackageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                OnIdxChanging(value);
                ReportPropertyChanging("Idx");
                _Idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Idx");
                OnIdxChanged();
            }
        }
        private Nullable<global::System.Byte> _Idx;
        partial void OnIdxChanging(Nullable<global::System.Byte> value);
        partial void OnIdxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                OnParClinExamGroupIDChanging(value);
                ReportPropertyChanging("ParClinExamGroupID");
                _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParClinExamGroupID");
                OnParClinExamGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnParClinExamGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalTest_refSpecimenType", "refSpecimenType")]
        public refSpecimenType refSpecimenType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_MedicalTest_refSpecimenType", "refSpecimenType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_MedicalTest_refSpecimenType", "refSpecimenType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refSpecimenType> refSpecimenTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_MedicalTest_refSpecimenType", "refSpecimenType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refSpecimenType>("SureHisModel.FK_MedicalTest_refSpecimenType", "refSpecimenType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalTestProcedure", "MedImagingTestItems")]
        public EntityCollection<MedImagingTestItems> MedImagingTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedImagingTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedImagingTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedicalTestProcedure", "MedLabTestItems")]
        public EntityCollection<MedLabTestItems> MedLabTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedLabTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedLabTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalTestProcedure", "ParaClinicalReq")]
        public EntityCollection<ParaClinicalReq> ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "ParaClinicalReq", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedicationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedicationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedicationHistory object.
        /// </summary>
        /// <param name="medHisID">Initial value of the MedHisID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="v_MedHisType">Initial value of the V_MedHisType property.</param>
        /// <param name="hHistMedcnIDText">Initial value of the HHistMedcnIDText property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static MedicationHistory CreateMedicationHistory(global::System.Int64 medHisID, global::System.Int64 ptComMedRecID, global::System.Int64 v_MedHisType, global::System.String hHistMedcnIDText, global::System.DateTime modifiedDate)
        {
            MedicationHistory medicationHistory = new MedicationHistory();
            medicationHistory.MedHisID = medHisID;
            medicationHistory.PtComMedRecID = ptComMedRecID;
            medicationHistory.V_MedHisType = v_MedHisType;
            medicationHistory.HHistMedcnIDText = hHistMedcnIDText;
            medicationHistory.ModifiedDate = modifiedDate;
            return medicationHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedHisID
        {
            get
            {
                return _MedHisID;
            }
            set
            {
                if (_MedHisID != value)
                {
                    OnMedHisIDChanging(value);
                    ReportPropertyChanging("MedHisID");
                    _MedHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedHisID");
                    OnMedHisIDChanged();
                }
            }
        }
        private global::System.Int64 _MedHisID;
        partial void OnMedHisIDChanging(global::System.Int64 value);
        partial void OnMedHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_MedHisType
        {
            get
            {
                return _V_MedHisType;
            }
            set
            {
                OnV_MedHisTypeChanging(value);
                ReportPropertyChanging("V_MedHisType");
                _V_MedHisType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedHisType");
                OnV_MedHisTypeChanged();
            }
        }
        private global::System.Int64 _V_MedHisType;
        partial void OnV_MedHisTypeChanging(global::System.Int64 value);
        partial void OnV_MedHisTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HHistMedcnIDText
        {
            get
            {
                return _HHistMedcnIDText;
            }
            set
            {
                OnHHistMedcnIDTextChanging(value);
                ReportPropertyChanging("HHistMedcnIDText");
                _HHistMedcnIDText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HHistMedcnIDText");
                OnHHistMedcnIDTextChanged();
            }
        }
        private global::System.String _HHistMedcnIDText;
        partial void OnHHistMedcnIDTextChanging(global::System.String value);
        partial void OnHHistMedcnIDTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedImagingRepository")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedImagingRepository : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedImagingRepository object.
        /// </summary>
        /// <param name="pAItemID">Initial value of the PAItemID property.</param>
        /// <param name="serialNum">Initial value of the SerialNum property.</param>
        /// <param name="pAItemName">Initial value of the PAItemName property.</param>
        /// <param name="v_MedImageReference">Initial value of the V_MedImageReference property.</param>
        /// <param name="filePathName">Initial value of the FilePathName property.</param>
        /// <param name="ptDiagImgID">Initial value of the PtDiagImgID property.</param>
        public static MedImagingRepository CreateMedImagingRepository(global::System.Int64 pAItemID, global::System.Byte serialNum, global::System.String pAItemName, global::System.Int64 v_MedImageReference, global::System.String filePathName, global::System.Int64 ptDiagImgID)
        {
            MedImagingRepository medImagingRepository = new MedImagingRepository();
            medImagingRepository.PAItemID = pAItemID;
            medImagingRepository.SerialNum = serialNum;
            medImagingRepository.PAItemName = pAItemName;
            medImagingRepository.V_MedImageReference = v_MedImageReference;
            medImagingRepository.FilePathName = filePathName;
            medImagingRepository.PtDiagImgID = ptDiagImgID;
            return medImagingRepository;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PAItemID
        {
            get
            {
                return _PAItemID;
            }
            set
            {
                if (_PAItemID != value)
                {
                    OnPAItemIDChanging(value);
                    ReportPropertyChanging("PAItemID");
                    _PAItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PAItemID");
                    OnPAItemIDChanged();
                }
            }
        }
        private global::System.Int64 _PAItemID;
        partial void OnPAItemIDChanging(global::System.Int64 value);
        partial void OnPAItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte SerialNum
        {
            get
            {
                return _SerialNum;
            }
            set
            {
                OnSerialNumChanging(value);
                ReportPropertyChanging("SerialNum");
                _SerialNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SerialNum");
                OnSerialNumChanged();
            }
        }
        private global::System.Byte _SerialNum;
        partial void OnSerialNumChanging(global::System.Byte value);
        partial void OnSerialNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PAItemName
        {
            get
            {
                return _PAItemName;
            }
            set
            {
                OnPAItemNameChanging(value);
                ReportPropertyChanging("PAItemName");
                _PAItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PAItemName");
                OnPAItemNameChanged();
            }
        }
        private global::System.String _PAItemName;
        partial void OnPAItemNameChanging(global::System.String value);
        partial void OnPAItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_MedImageReference
        {
            get
            {
                return _V_MedImageReference;
            }
            set
            {
                OnV_MedImageReferenceChanging(value);
                ReportPropertyChanging("V_MedImageReference");
                _V_MedImageReference = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedImageReference");
                OnV_MedImageReferenceChanged();
            }
        }
        private global::System.Int64 _V_MedImageReference;
        partial void OnV_MedImageReferenceChanging(global::System.Int64 value);
        partial void OnV_MedImageReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePathName
        {
            get
            {
                return _FilePathName;
            }
            set
            {
                OnFilePathNameChanging(value);
                ReportPropertyChanging("FilePathName");
                _FilePathName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePathName");
                OnFilePathNameChanged();
            }
        }
        private global::System.String _FilePathName;
        partial void OnFilePathNameChanging(global::System.String value);
        partial void OnFilePathNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtDiagImgID
        {
            get
            {
                return _PtDiagImgID;
            }
            set
            {
                OnPtDiagImgIDChanging(value);
                ReportPropertyChanging("PtDiagImgID");
                _PtDiagImgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtDiagImgID");
                OnPtDiagImgIDChanged();
            }
        }
        private global::System.Int64 _PtDiagImgID;
        partial void OnPtDiagImgIDChanging(global::System.Int64 value);
        partial void OnPtDiagImgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DocSource
        {
            get
            {
                return _V_DocSource;
            }
            set
            {
                OnV_DocSourceChanging(value);
                ReportPropertyChanging("V_DocSource");
                _V_DocSource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DocSource");
                OnV_DocSourceChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DocSource;
        partial void OnV_DocSourceChanging(Nullable<global::System.Int64> value);
        partial void OnV_DocSourceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging")]
        public PatientDiagnosticImaging PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientDiagnosticImaging>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientDiagnosticImaging>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientDiagnosticImaging> PatientDiagnosticImagingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientDiagnosticImaging>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientDiagnosticImaging>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "PatientDiagnosticImaging", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedImagingTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedImagingTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedImagingTest object.
        /// </summary>
        /// <param name="parClinExamGroupID">Initial value of the ParClinExamGroupID property.</param>
        /// <param name="medImgTestID">Initial value of the MedImgTestID property.</param>
        /// <param name="medImgTestCode">Initial value of the MedImgTestCode property.</param>
        /// <param name="medImgTestName">Initial value of the MedImgTestName property.</param>
        public static MedImagingTest CreateMedImagingTest(global::System.Int64 parClinExamGroupID, global::System.Int64 medImgTestID, global::System.String medImgTestCode, global::System.String medImgTestName)
        {
            MedImagingTest medImagingTest = new MedImagingTest();
            medImagingTest.ParClinExamGroupID = parClinExamGroupID;
            medImagingTest.MedImgTestID = medImgTestID;
            medImagingTest.MedImgTestCode = medImgTestCode;
            medImagingTest.MedImgTestName = medImgTestName;
            return medImagingTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                OnParClinExamGroupIDChanging(value);
                ReportPropertyChanging("ParClinExamGroupID");
                _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParClinExamGroupID");
                OnParClinExamGroupIDChanged();
            }
        }
        private global::System.Int64 _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(global::System.Int64 value);
        partial void OnParClinExamGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedImgTestID
        {
            get
            {
                return _MedImgTestID;
            }
            set
            {
                if (_MedImgTestID != value)
                {
                    OnMedImgTestIDChanging(value);
                    ReportPropertyChanging("MedImgTestID");
                    _MedImgTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedImgTestID");
                    OnMedImgTestIDChanged();
                }
            }
        }
        private global::System.Int64 _MedImgTestID;
        partial void OnMedImgTestIDChanging(global::System.Int64 value);
        partial void OnMedImgTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedImgTestCode
        {
            get
            {
                return _MedImgTestCode;
            }
            set
            {
                OnMedImgTestCodeChanging(value);
                ReportPropertyChanging("MedImgTestCode");
                _MedImgTestCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedImgTestCode");
                OnMedImgTestCodeChanged();
            }
        }
        private global::System.String _MedImgTestCode;
        partial void OnMedImgTestCodeChanging(global::System.String value);
        partial void OnMedImgTestCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedImgTestName
        {
            get
            {
                return _MedImgTestName;
            }
            set
            {
                OnMedImgTestNameChanging(value);
                ReportPropertyChanging("MedImgTestName");
                _MedImgTestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedImgTestName");
                OnMedImgTestNameChanged();
            }
        }
        private global::System.String _MedImgTestName;
        partial void OnMedImgTestNameChanging(global::System.String value);
        partial void OnMedImgTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedImgTestDesc
        {
            get
            {
                return _MedImgTestDesc;
            }
            set
            {
                OnMedImgTestDescChanging(value);
                ReportPropertyChanging("MedImgTestDesc");
                _MedImgTestDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedImgTestDesc");
                OnMedImgTestDescChanged();
            }
        }
        private global::System.String _MedImgTestDesc;
        partial void OnMedImgTestDescChanging(global::System.String value);
        partial void OnMedImgTestDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItem_MedImagingTest", "MedImagingTestItems")]
        public EntityCollection<MedImagingTestItems> MedImagingTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedImagingTestItems>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_MedImagingTest", "PatientDiagnosticImaging")]
        public EntityCollection<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_MedImagingTest", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_MedImagingTest", "PatientDiagnosticImaging", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedImagingTestItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedImagingTestItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedImagingTestItems object.
        /// </summary>
        /// <param name="medImgTestItemID">Initial value of the MedImgTestItemID property.</param>
        public static MedImagingTestItems CreateMedImagingTestItems(global::System.Int64 medImgTestItemID)
        {
            MedImagingTestItems medImagingTestItems = new MedImagingTestItems();
            medImagingTestItems.MedImgTestItemID = medImgTestItemID;
            return medImagingTestItems;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedImgTestItemID
        {
            get
            {
                return _MedImgTestItemID;
            }
            set
            {
                if (_MedImgTestItemID != value)
                {
                    OnMedImgTestItemIDChanging(value);
                    ReportPropertyChanging("MedImgTestItemID");
                    _MedImgTestItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedImgTestItemID");
                    OnMedImgTestItemIDChanged();
                }
            }
        }
        private global::System.Int64 _MedImgTestItemID;
        partial void OnMedImgTestItemIDChanging(global::System.Int64 value);
        partial void OnMedImgTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedTestProcID
        {
            get
            {
                return _MedTestProcID;
            }
            set
            {
                OnMedTestProcIDChanging(value);
                ReportPropertyChanging("MedTestProcID");
                _MedTestProcID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedTestProcID");
                OnMedTestProcIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedTestProcID;
        partial void OnMedTestProcIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedTestProcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedImgTestID
        {
            get
            {
                return _MedImgTestID;
            }
            set
            {
                OnMedImgTestIDChanging(value);
                ReportPropertyChanging("MedImgTestID");
                _MedImgTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedImgTestID");
                OnMedImgTestIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedImgTestID;
        partial void OnMedImgTestIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedImgTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerID;
        partial void OnMedSerIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReq
        {
            get
            {
                return _IsReq;
            }
            set
            {
                OnIsReqChanging(value);
                ReportPropertyChanging("IsReq");
                _IsReq = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReq");
                OnIsReqChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReq;
        partial void OnIsReqChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_MedImagingTestItems", "BodyRegion")]
        public EntityCollection<BodyRegion> BodyRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "BodyRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_MedImagingTestItems", "BodyRegion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedImagingTestItems_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure")]
        public MedicalTestProcedure MedicalTestProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalTestProcedure> MedicalTestProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedImagingTestItems_MedicalTestProcedure", "MedicalTestProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTestItem_MedImagingTest", "MedImagingTest")]
        public MedImagingTest MedImagingTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedImagingTest> MedImagingTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedImagingTest>("SureHisModel.FK_MedImagingTestItem_MedImagingTest", "MedImagingTest", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedLabRepository")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedLabRepository : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedLabRepository object.
        /// </summary>
        /// <param name="labItemID">Initial value of the LabItemID property.</param>
        /// <param name="labItemName">Initial value of the LabItemName property.</param>
        /// <param name="v_DocType">Initial value of the V_DocType property.</param>
        /// <param name="v_FormatType">Initial value of the V_FormatType property.</param>
        /// <param name="filePathName">Initial value of the FilePathName property.</param>
        /// <param name="ptSpecTestID">Initial value of the PtSpecTestID property.</param>
        public static MedLabRepository CreateMedLabRepository(global::System.Int64 labItemID, global::System.String labItemName, global::System.Int64 v_DocType, global::System.Int64 v_FormatType, global::System.String filePathName, global::System.Int64 ptSpecTestID)
        {
            MedLabRepository medLabRepository = new MedLabRepository();
            medLabRepository.LabItemID = labItemID;
            medLabRepository.LabItemName = labItemName;
            medLabRepository.V_DocType = v_DocType;
            medLabRepository.V_FormatType = v_FormatType;
            medLabRepository.FilePathName = filePathName;
            medLabRepository.PtSpecTestID = ptSpecTestID;
            return medLabRepository;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LabItemID
        {
            get
            {
                return _LabItemID;
            }
            set
            {
                if (_LabItemID != value)
                {
                    OnLabItemIDChanging(value);
                    ReportPropertyChanging("LabItemID");
                    _LabItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LabItemID");
                    OnLabItemIDChanged();
                }
            }
        }
        private global::System.Int64 _LabItemID;
        partial void OnLabItemIDChanging(global::System.Int64 value);
        partial void OnLabItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LabItemName
        {
            get
            {
                return _LabItemName;
            }
            set
            {
                OnLabItemNameChanging(value);
                ReportPropertyChanging("LabItemName");
                _LabItemName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LabItemName");
                OnLabItemNameChanged();
            }
        }
        private global::System.String _LabItemName;
        partial void OnLabItemNameChanging(global::System.String value);
        partial void OnLabItemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_DocType
        {
            get
            {
                return _V_DocType;
            }
            set
            {
                OnV_DocTypeChanging(value);
                ReportPropertyChanging("V_DocType");
                _V_DocType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DocType");
                OnV_DocTypeChanged();
            }
        }
        private global::System.Int64 _V_DocType;
        partial void OnV_DocTypeChanging(global::System.Int64 value);
        partial void OnV_DocTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_FormatType
        {
            get
            {
                return _V_FormatType;
            }
            set
            {
                OnV_FormatTypeChanging(value);
                ReportPropertyChanging("V_FormatType");
                _V_FormatType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_FormatType");
                OnV_FormatTypeChanged();
            }
        }
        private global::System.Int64 _V_FormatType;
        partial void OnV_FormatTypeChanging(global::System.Int64 value);
        partial void OnV_FormatTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePathName
        {
            get
            {
                return _FilePathName;
            }
            set
            {
                OnFilePathNameChanging(value);
                ReportPropertyChanging("FilePathName");
                _FilePathName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePathName");
                OnFilePathNameChanged();
            }
        }
        private global::System.String _FilePathName;
        partial void OnFilePathNameChanging(global::System.String value);
        partial void OnFilePathNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtSpecTestID
        {
            get
            {
                return _PtSpecTestID;
            }
            set
            {
                OnPtSpecTestIDChanging(value);
                ReportPropertyChanging("PtSpecTestID");
                _PtSpecTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtSpecTestID");
                OnPtSpecTestIDChanged();
            }
        }
        private global::System.Int64 _PtSpecTestID;
        partial void OnPtSpecTestIDChanging(global::System.Int64 value);
        partial void OnPtSpecTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DocSource
        {
            get
            {
                return _V_DocSource;
            }
            set
            {
                OnV_DocSourceChanging(value);
                ReportPropertyChanging("V_DocSource");
                _V_DocSource = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DocSource");
                OnV_DocSourceChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DocSource;
        partial void OnV_DocSourceChanging(Nullable<global::System.Int64> value);
        partial void OnV_DocSourceChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen")]
        public TestOnPatientSpecimen TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestOnPatientSpecimen> TestOnPatientSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedLabTest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedLabTest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedLabTest object.
        /// </summary>
        /// <param name="parClinExamGroupID">Initial value of the ParClinExamGroupID property.</param>
        /// <param name="medLabTestID">Initial value of the MedLabTestID property.</param>
        /// <param name="medLabTestCode">Initial value of the MedLabTestCode property.</param>
        /// <param name="medLabTestName">Initial value of the MedLabTestName property.</param>
        public static MedLabTest CreateMedLabTest(global::System.Int64 parClinExamGroupID, global::System.Int64 medLabTestID, global::System.String medLabTestCode, global::System.String medLabTestName)
        {
            MedLabTest medLabTest = new MedLabTest();
            medLabTest.ParClinExamGroupID = parClinExamGroupID;
            medLabTest.MedLabTestID = medLabTestID;
            medLabTest.MedLabTestCode = medLabTestCode;
            medLabTest.MedLabTestName = medLabTestName;
            return medLabTest;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                OnParClinExamGroupIDChanging(value);
                ReportPropertyChanging("ParClinExamGroupID");
                _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParClinExamGroupID");
                OnParClinExamGroupIDChanged();
            }
        }
        private global::System.Int64 _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(global::System.Int64 value);
        partial void OnParClinExamGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedLabTestID
        {
            get
            {
                return _MedLabTestID;
            }
            set
            {
                if (_MedLabTestID != value)
                {
                    OnMedLabTestIDChanging(value);
                    ReportPropertyChanging("MedLabTestID");
                    _MedLabTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedLabTestID");
                    OnMedLabTestIDChanged();
                }
            }
        }
        private global::System.Int64 _MedLabTestID;
        partial void OnMedLabTestIDChanging(global::System.Int64 value);
        partial void OnMedLabTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedLabTestCode
        {
            get
            {
                return _MedLabTestCode;
            }
            set
            {
                OnMedLabTestCodeChanging(value);
                ReportPropertyChanging("MedLabTestCode");
                _MedLabTestCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedLabTestCode");
                OnMedLabTestCodeChanged();
            }
        }
        private global::System.String _MedLabTestCode;
        partial void OnMedLabTestCodeChanging(global::System.String value);
        partial void OnMedLabTestCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DXProcNmeasAnalCode
        {
            get
            {
                return _DXProcNmeasAnalCode;
            }
            set
            {
                OnDXProcNmeasAnalCodeChanging(value);
                ReportPropertyChanging("DXProcNmeasAnalCode");
                _DXProcNmeasAnalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DXProcNmeasAnalCode");
                OnDXProcNmeasAnalCodeChanged();
            }
        }
        private global::System.String _DXProcNmeasAnalCode;
        partial void OnDXProcNmeasAnalCodeChanging(global::System.String value);
        partial void OnDXProcNmeasAnalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedLabTestName
        {
            get
            {
                return _MedLabTestName;
            }
            set
            {
                OnMedLabTestNameChanging(value);
                ReportPropertyChanging("MedLabTestName");
                _MedLabTestName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedLabTestName");
                OnMedLabTestNameChanged();
            }
        }
        private global::System.String _MedLabTestName;
        partial void OnMedLabTestNameChanging(global::System.String value);
        partial void OnMedLabTestNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DXProcNmeasAnalInterpCode
        {
            get
            {
                return _DXProcNmeasAnalInterpCode;
            }
            set
            {
                OnDXProcNmeasAnalInterpCodeChanging(value);
                ReportPropertyChanging("DXProcNmeasAnalInterpCode");
                _DXProcNmeasAnalInterpCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DXProcNmeasAnalInterpCode");
                OnDXProcNmeasAnalInterpCodeChanged();
            }
        }
        private global::System.String _DXProcNmeasAnalInterpCode;
        partial void OnDXProcNmeasAnalInterpCodeChanging(global::System.String value);
        partial void OnDXProcNmeasAnalInterpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClinIndTypeID
        {
            get
            {
                return _ClinIndTypeID;
            }
            set
            {
                OnClinIndTypeIDChanging(value);
                ReportPropertyChanging("ClinIndTypeID");
                _ClinIndTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinIndTypeID");
                OnClinIndTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClinIndTypeID;
        partial void OnClinIndTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnClinIndTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DXProcNmeasAnalUnitCode
        {
            get
            {
                return _DXProcNmeasAnalUnitCode;
            }
            set
            {
                OnDXProcNmeasAnalUnitCodeChanging(value);
                ReportPropertyChanging("DXProcNmeasAnalUnitCode");
                _DXProcNmeasAnalUnitCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DXProcNmeasAnalUnitCode");
                OnDXProcNmeasAnalUnitCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _DXProcNmeasAnalUnitCode;
        partial void OnDXProcNmeasAnalUnitCodeChanging(Nullable<global::System.Int64> value);
        partial void OnDXProcNmeasAnalUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MClinIndMaxValue
        {
            get
            {
                return _MClinIndMaxValue;
            }
            set
            {
                OnMClinIndMaxValueChanging(value);
                ReportPropertyChanging("MClinIndMaxValue");
                _MClinIndMaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MClinIndMaxValue");
                OnMClinIndMaxValueChanged();
            }
        }
        private Nullable<global::System.Double> _MClinIndMaxValue;
        partial void OnMClinIndMaxValueChanging(Nullable<global::System.Double> value);
        partial void OnMClinIndMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MClinIndMinValue
        {
            get
            {
                return _MClinIndMinValue;
            }
            set
            {
                OnMClinIndMinValueChanging(value);
                ReportPropertyChanging("MClinIndMinValue");
                _MClinIndMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MClinIndMinValue");
                OnMClinIndMinValueChanged();
            }
        }
        private Nullable<global::System.Double> _MClinIndMinValue;
        partial void OnMClinIndMinValueChanging(Nullable<global::System.Double> value);
        partial void OnMClinIndMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MClinIndLimitedValue
        {
            get
            {
                return _MClinIndLimitedValue;
            }
            set
            {
                OnMClinIndLimitedValueChanging(value);
                ReportPropertyChanging("MClinIndLimitedValue");
                _MClinIndLimitedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MClinIndLimitedValue");
                OnMClinIndLimitedValueChanged();
            }
        }
        private Nullable<global::System.Double> _MClinIndLimitedValue;
        partial void OnMClinIndLimitedValueChanging(Nullable<global::System.Double> value);
        partial void OnMClinIndLimitedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MClinIndValue
        {
            get
            {
                return _MClinIndValue;
            }
            set
            {
                OnMClinIndValueChanging(value);
                ReportPropertyChanging("MClinIndValue");
                _MClinIndValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MClinIndValue");
                OnMClinIndValueChanged();
            }
        }
        private global::System.String _MClinIndValue;
        partial void OnMClinIndValueChanging(global::System.String value);
        partial void OnMClinIndValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FClinIndMaxValue
        {
            get
            {
                return _FClinIndMaxValue;
            }
            set
            {
                OnFClinIndMaxValueChanging(value);
                ReportPropertyChanging("FClinIndMaxValue");
                _FClinIndMaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FClinIndMaxValue");
                OnFClinIndMaxValueChanged();
            }
        }
        private Nullable<global::System.Double> _FClinIndMaxValue;
        partial void OnFClinIndMaxValueChanging(Nullable<global::System.Double> value);
        partial void OnFClinIndMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FClinIndMinValue
        {
            get
            {
                return _FClinIndMinValue;
            }
            set
            {
                OnFClinIndMinValueChanging(value);
                ReportPropertyChanging("FClinIndMinValue");
                _FClinIndMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FClinIndMinValue");
                OnFClinIndMinValueChanged();
            }
        }
        private Nullable<global::System.Double> _FClinIndMinValue;
        partial void OnFClinIndMinValueChanging(Nullable<global::System.Double> value);
        partial void OnFClinIndMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> FClinIndLimitedValue
        {
            get
            {
                return _FClinIndLimitedValue;
            }
            set
            {
                OnFClinIndLimitedValueChanging(value);
                ReportPropertyChanging("FClinIndLimitedValue");
                _FClinIndLimitedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FClinIndLimitedValue");
                OnFClinIndLimitedValueChanged();
            }
        }
        private Nullable<global::System.Double> _FClinIndLimitedValue;
        partial void OnFClinIndLimitedValueChanging(Nullable<global::System.Double> value);
        partial void OnFClinIndLimitedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FClinIndValue
        {
            get
            {
                return _FClinIndValue;
            }
            set
            {
                OnFClinIndValueChanging(value);
                ReportPropertyChanging("FClinIndValue");
                _FClinIndValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FClinIndValue");
                OnFClinIndValueChanged();
            }
        }
        private global::System.String _FClinIndValue;
        partial void OnFClinIndValueChanging(global::System.String value);
        partial void OnFClinIndValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PClinIndMaxValue
        {
            get
            {
                return _PClinIndMaxValue;
            }
            set
            {
                OnPClinIndMaxValueChanging(value);
                ReportPropertyChanging("PClinIndMaxValue");
                _PClinIndMaxValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PClinIndMaxValue");
                OnPClinIndMaxValueChanged();
            }
        }
        private Nullable<global::System.Double> _PClinIndMaxValue;
        partial void OnPClinIndMaxValueChanging(Nullable<global::System.Double> value);
        partial void OnPClinIndMaxValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PClinIndMinValue
        {
            get
            {
                return _PClinIndMinValue;
            }
            set
            {
                OnPClinIndMinValueChanging(value);
                ReportPropertyChanging("PClinIndMinValue");
                _PClinIndMinValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PClinIndMinValue");
                OnPClinIndMinValueChanged();
            }
        }
        private Nullable<global::System.Double> _PClinIndMinValue;
        partial void OnPClinIndMinValueChanging(Nullable<global::System.Double> value);
        partial void OnPClinIndMinValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> PClinIndLimitedValue
        {
            get
            {
                return _PClinIndLimitedValue;
            }
            set
            {
                OnPClinIndLimitedValueChanging(value);
                ReportPropertyChanging("PClinIndLimitedValue");
                _PClinIndLimitedValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PClinIndLimitedValue");
                OnPClinIndLimitedValueChanged();
            }
        }
        private Nullable<global::System.Double> _PClinIndLimitedValue;
        partial void OnPClinIndLimitedValueChanging(Nullable<global::System.Double> value);
        partial void OnPClinIndLimitedValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PClinIndValue
        {
            get
            {
                return _PClinIndValue;
            }
            set
            {
                OnPClinIndValueChanging(value);
                ReportPropertyChanging("PClinIndValue");
                _PClinIndValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PClinIndValue");
                OnPClinIndValueChanged();
            }
        }
        private global::System.String _PClinIndValue;
        partial void OnPClinIndValueChanging(global::System.String value);
        partial void OnPClinIndValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MNormalRange
        {
            get
            {
                return _MNormalRange;
            }
            set
            {
                OnMNormalRangeChanging(value);
                ReportPropertyChanging("MNormalRange");
                _MNormalRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MNormalRange");
                OnMNormalRangeChanged();
            }
        }
        private global::System.String _MNormalRange;
        partial void OnMNormalRangeChanging(global::System.String value);
        partial void OnMNormalRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FNormalRange
        {
            get
            {
                return _FNormalRange;
            }
            set
            {
                OnFNormalRangeChanging(value);
                ReportPropertyChanging("FNormalRange");
                _FNormalRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FNormalRange");
                OnFNormalRangeChanged();
            }
        }
        private global::System.String _FNormalRange;
        partial void OnFNormalRangeChanging(global::System.String value);
        partial void OnFNormalRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PNormalRange
        {
            get
            {
                return _PNormalRange;
            }
            set
            {
                OnPNormalRangeChanging(value);
                ReportPropertyChanging("PNormalRange");
                _PNormalRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PNormalRange");
                OnPNormalRangeChanged();
            }
        }
        private global::System.String _PNormalRange;
        partial void OnPNormalRangeChanging(global::System.String value);
        partial void OnPNormalRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnisexRange
        {
            get
            {
                return _UnisexRange;
            }
            set
            {
                OnUnisexRangeChanging(value);
                ReportPropertyChanging("UnisexRange");
                _UnisexRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnisexRange");
                OnUnisexRangeChanged();
            }
        }
        private global::System.String _UnisexRange;
        partial void OnUnisexRangeChanging(global::System.String value);
        partial void OnUnisexRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EffectedRange
        {
            get
            {
                return _EffectedRange;
            }
            set
            {
                OnEffectedRangeChanging(value);
                ReportPropertyChanging("EffectedRange");
                _EffectedRange = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EffectedRange");
                OnEffectedRangeChanged();
            }
        }
        private global::System.String _EffectedRange;
        partial void OnEffectedRangeChanging(global::System.String value);
        partial void OnEffectedRangeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_AffectedFactor
        {
            get
            {
                return _V_AffectedFactor;
            }
            set
            {
                OnV_AffectedFactorChanging(value);
                ReportPropertyChanging("V_AffectedFactor");
                _V_AffectedFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AffectedFactor");
                OnV_AffectedFactorChanged();
            }
        }
        private Nullable<global::System.Int64> _V_AffectedFactor;
        partial void OnV_AffectedFactorChanging(Nullable<global::System.Int64> value);
        partial void OnV_AffectedFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isQualitative
        {
            get
            {
                return _isQualitative;
            }
            set
            {
                OnisQualitativeChanging(value);
                ReportPropertyChanging("isQualitative");
                _isQualitative = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isQualitative");
                OnisQualitativeChanged();
            }
        }
        private Nullable<global::System.Boolean> _isQualitative;
        partial void OnisQualitativeChanging(Nullable<global::System.Boolean> value);
        partial void OnisQualitativeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType")]
        public ClinicalIndicatorType ClinicalIndicatorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalIndicatorType>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalIndicatorType>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClinicalIndicatorType> ClinicalIndicatorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClinicalIndicatorType>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClinicalIndicatorType>("SureHisModel.FK_ParaClinicalExamType_ClinicalIndicatorType", "ClinicalIndicatorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedLabTest", "MedLabTestItems")]
        public EntityCollection<MedLabTestItems> MedLabTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTestItems>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_MedLabTest", "PatientMedLabTestResult")]
        public EntityCollection<PatientMedLabTestResult> PatientMedLabTestResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "PatientMedLabTestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "PatientMedLabTestResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedLabTestItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedLabTestItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedLabTestItems object.
        /// </summary>
        /// <param name="medLabTestItemID">Initial value of the MedLabTestItemID property.</param>
        /// <param name="medTestProcID">Initial value of the MedTestProcID property.</param>
        /// <param name="medLabTestID">Initial value of the MedLabTestID property.</param>
        public static MedLabTestItems CreateMedLabTestItems(global::System.Int64 medLabTestItemID, global::System.Int64 medTestProcID, global::System.Int64 medLabTestID)
        {
            MedLabTestItems medLabTestItems = new MedLabTestItems();
            medLabTestItems.MedLabTestItemID = medLabTestItemID;
            medLabTestItems.MedTestProcID = medTestProcID;
            medLabTestItems.MedLabTestID = medLabTestID;
            return medLabTestItems;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedLabTestItemID
        {
            get
            {
                return _MedLabTestItemID;
            }
            set
            {
                if (_MedLabTestItemID != value)
                {
                    OnMedLabTestItemIDChanging(value);
                    ReportPropertyChanging("MedLabTestItemID");
                    _MedLabTestItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedLabTestItemID");
                    OnMedLabTestItemIDChanged();
                }
            }
        }
        private global::System.Int64 _MedLabTestItemID;
        partial void OnMedLabTestItemIDChanging(global::System.Int64 value);
        partial void OnMedLabTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedTestProcID
        {
            get
            {
                return _MedTestProcID;
            }
            set
            {
                OnMedTestProcIDChanging(value);
                ReportPropertyChanging("MedTestProcID");
                _MedTestProcID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedTestProcID");
                OnMedTestProcIDChanged();
            }
        }
        private global::System.Int64 _MedTestProcID;
        partial void OnMedTestProcIDChanging(global::System.Int64 value);
        partial void OnMedTestProcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedLabTestID
        {
            get
            {
                return _MedLabTestID;
            }
            set
            {
                OnMedLabTestIDChanging(value);
                ReportPropertyChanging("MedLabTestID");
                _MedLabTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedLabTestID");
                OnMedLabTestIDChanged();
            }
        }
        private global::System.Int64 _MedLabTestID;
        partial void OnMedLabTestIDChanging(global::System.Int64 value);
        partial void OnMedLabTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReq
        {
            get
            {
                return _IsReq;
            }
            set
            {
                OnIsReqChanging(value);
                ReportPropertyChanging("IsReq");
                _IsReq = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReq");
                OnIsReqChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReq;
        partial void OnIsReqChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerID;
        partial void OnMedSerIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_MedLabTestItems_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure")]
        public MedicalTestProcedure MedicalTestProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalTestProcedure> MedicalTestProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalTestProcedure>("SureHisModel.FK_MedLabTestItems_MedicalTestProcedure", "MedicalTestProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabTestItems_MedLabTest", "MedLabTest")]
        public MedLabTest MedLabTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedLabTest> MedLabTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedLabTest>("SureHisModel.FK_MedLabTestItems_MedLabTest", "MedLabTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReqDetails_MedLabTestItems", "ParaClinicalReqDetails")]
        public EntityCollection<ParaClinicalReqDetails> ParaClinicalReqDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalReqDetails>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "ParaClinicalReqDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalReqDetails>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "ParaClinicalReqDetails", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedRecOutline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedRecOutline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedRecOutline object.
        /// </summary>
        /// <param name="mRecID">Initial value of the MRecID property.</param>
        /// <param name="mDTmpID">Initial value of the MDTmpID property.</param>
        /// <param name="secID">Initial value of the SecID property.</param>
        /// <param name="idx">Initial value of the Idx property.</param>
        public static MedRecOutline CreateMedRecOutline(global::System.Int64 mRecID, global::System.Int64 mDTmpID, global::System.Int64 secID, global::System.Int16 idx)
        {
            MedRecOutline medRecOutline = new MedRecOutline();
            medRecOutline.MRecID = mRecID;
            medRecOutline.MDTmpID = mDTmpID;
            medRecOutline.SecID = secID;
            medRecOutline.Idx = idx;
            return medRecOutline;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MRecID
        {
            get
            {
                return _MRecID;
            }
            set
            {
                if (_MRecID != value)
                {
                    OnMRecIDChanging(value);
                    ReportPropertyChanging("MRecID");
                    _MRecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MRecID");
                    OnMRecIDChanged();
                }
            }
        }
        private global::System.Int64 _MRecID;
        partial void OnMRecIDChanging(global::System.Int64 value);
        partial void OnMRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MDTmpID
        {
            get
            {
                return _MDTmpID;
            }
            set
            {
                OnMDTmpIDChanging(value);
                ReportPropertyChanging("MDTmpID");
                _MDTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MDTmpID");
                OnMDTmpIDChanged();
            }
        }
        private global::System.Int64 _MDTmpID;
        partial void OnMDTmpIDChanging(global::System.Int64 value);
        partial void OnMDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SecID
        {
            get
            {
                return _SecID;
            }
            set
            {
                OnSecIDChanging(value);
                ReportPropertyChanging("SecID");
                _SecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecID");
                OnSecIDChanged();
            }
        }
        private global::System.Int64 _SecID;
        partial void OnSecIDChanging(global::System.Int64 value);
        partial void OnSecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                OnIdxChanging(value);
                ReportPropertyChanging("Idx");
                _Idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Idx");
                OnIdxChanged();
            }
        }
        private global::System.Int16 _Idx;
        partial void OnIdxChanging(global::System.Int16 value);
        partial void OnIdxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedRecOutline_MedRecTmp", "MedRecTmp")]
        public MedRecTmp MedRecTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedRecTmp> MedRecTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedRecTmp>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedRecOutline_MRSection", "MRSection")]
        public MRSection MRSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MedRecOutline_MRSection", "MRSection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MedRecOutline_MRSection", "MRSection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRSection> MRSectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MedRecOutline_MRSection", "MRSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRSection>("SureHisModel.FK_MedRecOutline_MRSection", "MRSection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedRecTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedRecTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedRecTmp object.
        /// </summary>
        /// <param name="mDTmpID">Initial value of the MDTmpID property.</param>
        /// <param name="mDTmpCode">Initial value of the MDTmpCode property.</param>
        /// <param name="mDTmpTitle">Initial value of the MDTmpTitle property.</param>
        public static MedRecTmp CreateMedRecTmp(global::System.Int64 mDTmpID, global::System.String mDTmpCode, global::System.String mDTmpTitle)
        {
            MedRecTmp medRecTmp = new MedRecTmp();
            medRecTmp.MDTmpID = mDTmpID;
            medRecTmp.MDTmpCode = mDTmpCode;
            medRecTmp.MDTmpTitle = mDTmpTitle;
            return medRecTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MDTmpID
        {
            get
            {
                return _MDTmpID;
            }
            set
            {
                if (_MDTmpID != value)
                {
                    OnMDTmpIDChanging(value);
                    ReportPropertyChanging("MDTmpID");
                    _MDTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MDTmpID");
                    OnMDTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _MDTmpID;
        partial void OnMDTmpIDChanging(global::System.Int64 value);
        partial void OnMDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MDTmpCode
        {
            get
            {
                return _MDTmpCode;
            }
            set
            {
                OnMDTmpCodeChanging(value);
                ReportPropertyChanging("MDTmpCode");
                _MDTmpCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MDTmpCode");
                OnMDTmpCodeChanged();
            }
        }
        private global::System.String _MDTmpCode;
        partial void OnMDTmpCodeChanging(global::System.String value);
        partial void OnMDTmpCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MDTmpTitle
        {
            get
            {
                return _MDTmpTitle;
            }
            set
            {
                OnMDTmpTitleChanging(value);
                ReportPropertyChanging("MDTmpTitle");
                _MDTmpTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MDTmpTitle");
                OnMDTmpTitleChanged();
            }
        }
        private global::System.String _MDTmpTitle;
        partial void OnMDTmpTitleChanging(global::System.String value);
        partial void OnMDTmpTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MDTmpDesc
        {
            get
            {
                return _MDTmpDesc;
            }
            set
            {
                OnMDTmpDescChanging(value);
                ReportPropertyChanging("MDTmpDesc");
                _MDTmpDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MDTmpDesc");
                OnMDTmpDescChanged();
            }
        }
        private global::System.String _MDTmpDesc;
        partial void OnMDTmpDescChanging(global::System.String value);
        partial void OnMDTmpDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLFilePath
        {
            get
            {
                return _URLFilePath;
            }
            set
            {
                OnURLFilePathChanging(value);
                ReportPropertyChanging("URLFilePath");
                _URLFilePath = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLFilePath");
                OnURLFilePathChanged();
            }
        }
        private global::System.String _URLFilePath;
        partial void OnURLFilePathChanging(global::System.String value);
        partial void OnURLFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MDTmpDetails
        {
            get
            {
                return _MDTmpDetails;
            }
            set
            {
                OnMDTmpDetailsChanging(value);
                ReportPropertyChanging("MDTmpDetails");
                _MDTmpDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MDTmpDetails");
                OnMDTmpDetailsChanged();
            }
        }
        private global::System.String _MDTmpDetails;
        partial void OnMDTmpDetailsChanging(global::System.String value);
        partial void OnMDTmpDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_PageSize
        {
            get
            {
                return _V_PageSize;
            }
            set
            {
                OnV_PageSizeChanging(value);
                ReportPropertyChanging("V_PageSize");
                _V_PageSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PageSize");
                OnV_PageSizeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_PageSize;
        partial void OnV_PageSizeChanging(Nullable<global::System.Int64> value);
        partial void OnV_PageSizeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedRecOutline_MedRecTmp", "MedRecOutline")]
        public EntityCollection<MedRecOutline> MedRecOutline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedRecOutline>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecOutline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedRecOutline>("SureHisModel.FK_MedRecOutline_MedRecTmp", "MedRecOutline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecMedRecordTemp_MedRecordTemp", "SpecMedRecTmp")]
        public EntityCollection<SpecMedRecTmp> SpecMedRecTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecMedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "SpecMedRecTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecMedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "SpecMedRecTmp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MedSerInDept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MedSerInDept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MedSerInDept object.
        /// </summary>
        /// <param name="medSerInDeptID">Initial value of the MedSerInDeptID property.</param>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        /// <param name="hosDeptID">Initial value of the HosDeptID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        /// <param name="noEffect">Initial value of the NoEffect property.</param>
        public static MedSerInDept CreateMedSerInDept(global::System.Int64 medSerInDeptID, global::System.Int64 medSerID, global::System.Int64 hosDeptID, global::System.DateTime modifiedDate, global::System.Int64 estEmpID, global::System.Boolean noEffect)
        {
            MedSerInDept medSerInDept = new MedSerInDept();
            medSerInDept.MedSerInDeptID = medSerInDeptID;
            medSerInDept.MedSerID = medSerID;
            medSerInDept.HosDeptID = hosDeptID;
            medSerInDept.ModifiedDate = modifiedDate;
            medSerInDept.EstEmpID = estEmpID;
            medSerInDept.NoEffect = noEffect;
            return medSerInDept;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerInDeptID
        {
            get
            {
                return _MedSerInDeptID;
            }
            set
            {
                if (_MedSerInDeptID != value)
                {
                    OnMedSerInDeptIDChanging(value);
                    ReportPropertyChanging("MedSerInDeptID");
                    _MedSerInDeptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedSerInDeptID");
                    OnMedSerInDeptIDChanged();
                }
            }
        }
        private global::System.Int64 _MedSerInDeptID;
        partial void OnMedSerInDeptIDChanging(global::System.Int64 value);
        partial void OnMedSerInDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private global::System.Int64 _HosDeptID;
        partial void OnHosDeptIDChanging(global::System.Int64 value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AppliedDate
        {
            get
            {
                return _AppliedDate;
            }
            set
            {
                OnAppliedDateChanging(value);
                ReportPropertyChanging("AppliedDate");
                _AppliedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliedDate");
                OnAppliedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AppliedDate;
        partial void OnAppliedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAppliedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private global::System.Boolean _NoEffect;
        partial void OnNoEffectChanging(global::System.Boolean value);
        partial void OnNoEffectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_MedSerInDept_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MesrtConv")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MesrtConv : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MesrtConv object.
        /// </summary>
        /// <param name="cMSID">Initial value of the CMSID property.</param>
        /// <param name="uOMNo">Initial value of the UOMNo property.</param>
        /// <param name="cnvUOMNo">Initial value of the CnvUOMNo property.</param>
        /// <param name="convFactor">Initial value of the ConvFactor property.</param>
        /// <param name="factor">Initial value of the Factor property.</param>
        public static MesrtConv CreateMesrtConv(global::System.Int64 cMSID, global::System.Int64 uOMNo, global::System.Int64 cnvUOMNo, global::System.Double convFactor, global::System.Double factor)
        {
            MesrtConv mesrtConv = new MesrtConv();
            mesrtConv.CMSID = cMSID;
            mesrtConv.UOMNo = uOMNo;
            mesrtConv.CnvUOMNo = cnvUOMNo;
            mesrtConv.ConvFactor = convFactor;
            mesrtConv.Factor = factor;
            return mesrtConv;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CMSID
        {
            get
            {
                return _CMSID;
            }
            set
            {
                if (_CMSID != value)
                {
                    OnCMSIDChanging(value);
                    ReportPropertyChanging("CMSID");
                    _CMSID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CMSID");
                    OnCMSIDChanged();
                }
            }
        }
        private global::System.Int64 _CMSID;
        partial void OnCMSIDChanging(global::System.Int64 value);
        partial void OnCMSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UOMNo
        {
            get
            {
                return _UOMNo;
            }
            set
            {
                OnUOMNoChanging(value);
                ReportPropertyChanging("UOMNo");
                _UOMNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UOMNo");
                OnUOMNoChanged();
            }
        }
        private global::System.Int64 _UOMNo;
        partial void OnUOMNoChanging(global::System.Int64 value);
        partial void OnUOMNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CnvUOMNo
        {
            get
            {
                return _CnvUOMNo;
            }
            set
            {
                OnCnvUOMNoChanging(value);
                ReportPropertyChanging("CnvUOMNo");
                _CnvUOMNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CnvUOMNo");
                OnCnvUOMNoChanged();
            }
        }
        private global::System.Int64 _CnvUOMNo;
        partial void OnCnvUOMNoChanging(global::System.Int64 value);
        partial void OnCnvUOMNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsMultiply
        {
            get
            {
                return _IsMultiply;
            }
            set
            {
                OnIsMultiplyChanging(value);
                ReportPropertyChanging("IsMultiply");
                _IsMultiply = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMultiply");
                OnIsMultiplyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsMultiply;
        partial void OnIsMultiplyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsMultiplyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ConvFactor
        {
            get
            {
                return _ConvFactor;
            }
            set
            {
                OnConvFactorChanging(value);
                ReportPropertyChanging("ConvFactor");
                _ConvFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConvFactor");
                OnConvFactorChanged();
            }
        }
        private global::System.Double _ConvFactor;
        partial void OnConvFactorChanging(global::System.Double value);
        partial void OnConvFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Factor
        {
            get
            {
                return _Factor;
            }
            set
            {
                OnFactorChanging(value);
                ReportPropertyChanging("Factor");
                _Factor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Factor");
                OnFactorChanged();
            }
        }
        private global::System.Double _Factor;
        partial void OnFactorChanging(global::System.Double value);
        partial void OnFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> PrioOp
        {
            get
            {
                return _PrioOp;
            }
            set
            {
                OnPrioOpChanging(value);
                ReportPropertyChanging("PrioOp");
                _PrioOp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrioOp");
                OnPrioOpChanged();
            }
        }
        private Nullable<global::System.Boolean> _PrioOp;
        partial void OnPrioOpChanging(Nullable<global::System.Boolean> value);
        partial void OnPrioOpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MiscDocuments")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MiscDocuments : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MiscDocuments object.
        /// </summary>
        /// <param name="miscDocID">Initial value of the MiscDocID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="iAdmReferralTypeCode">Initial value of the IAdmReferralTypeCode property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static MiscDocuments CreateMiscDocuments(global::System.Int64 miscDocID, global::System.Int64 ptComMedRecID, global::System.Int64 iAdmReferralTypeCode, global::System.DateTime modifiedDate)
        {
            MiscDocuments miscDocuments = new MiscDocuments();
            miscDocuments.MiscDocID = miscDocID;
            miscDocuments.PtComMedRecID = ptComMedRecID;
            miscDocuments.IAdmReferralTypeCode = iAdmReferralTypeCode;
            miscDocuments.ModifiedDate = modifiedDate;
            return miscDocuments;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MiscDocID
        {
            get
            {
                return _MiscDocID;
            }
            set
            {
                if (_MiscDocID != value)
                {
                    OnMiscDocIDChanging(value);
                    ReportPropertyChanging("MiscDocID");
                    _MiscDocID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MiscDocID");
                    OnMiscDocIDChanged();
                }
            }
        }
        private global::System.Int64 _MiscDocID;
        partial void OnMiscDocIDChanging(global::System.Int64 value);
        partial void OnMiscDocIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IAdmReferralTypeCode
        {
            get
            {
                return _IAdmReferralTypeCode;
            }
            set
            {
                OnIAdmReferralTypeCodeChanging(value);
                ReportPropertyChanging("IAdmReferralTypeCode");
                _IAdmReferralTypeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IAdmReferralTypeCode");
                OnIAdmReferralTypeCodeChanged();
            }
        }
        private global::System.Int64 _IAdmReferralTypeCode;
        partial void OnIAdmReferralTypeCodeChanging(global::System.Int64 value);
        partial void OnIAdmReferralTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MiscDocuments_refAdmReferralType", "refAdmReferralType")]
        public refAdmReferralType refAdmReferralType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "refAdmReferralType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "refAdmReferralType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAdmReferralType> refAdmReferralTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "refAdmReferralType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAdmReferralType>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "refAdmReferralType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MOHServiceItems")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MOHServiceItems : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MOHServiceItems object.
        /// </summary>
        /// <param name="mOHSerItemsID">Initial value of the MOHSerItemsID property.</param>
        /// <param name="quotationID">Initial value of the QuotationID property.</param>
        /// <param name="medSerID">Initial value of the MedSerID property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="validDateFrom">Initial value of the ValidDateFrom property.</param>
        /// <param name="medSerUOM">Initial value of the MedSerUOM property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static MOHServiceItems CreateMOHServiceItems(global::System.Int64 mOHSerItemsID, global::System.Int64 quotationID, global::System.Int64 medSerID, global::System.Double unitPrice, global::System.DateTime validDateFrom, global::System.String medSerUOM, global::System.DateTime createdDate)
        {
            MOHServiceItems mOHServiceItems = new MOHServiceItems();
            mOHServiceItems.MOHSerItemsID = mOHSerItemsID;
            mOHServiceItems.QuotationID = quotationID;
            mOHServiceItems.MedSerID = medSerID;
            mOHServiceItems.UnitPrice = unitPrice;
            mOHServiceItems.ValidDateFrom = validDateFrom;
            mOHServiceItems.MedSerUOM = medSerUOM;
            mOHServiceItems.CreatedDate = createdDate;
            return mOHServiceItems;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MOHSerItemsID
        {
            get
            {
                return _MOHSerItemsID;
            }
            set
            {
                if (_MOHSerItemsID != value)
                {
                    OnMOHSerItemsIDChanging(value);
                    ReportPropertyChanging("MOHSerItemsID");
                    _MOHSerItemsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MOHSerItemsID");
                    OnMOHSerItemsIDChanged();
                }
            }
        }
        private global::System.Int64 _MOHSerItemsID;
        partial void OnMOHSerItemsIDChanging(global::System.Int64 value);
        partial void OnMOHSerItemsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QuotationID
        {
            get
            {
                return _QuotationID;
            }
            set
            {
                OnQuotationIDChanging(value);
                ReportPropertyChanging("QuotationID");
                _QuotationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuotationID");
                OnQuotationIDChanged();
            }
        }
        private global::System.Int64 _QuotationID;
        partial void OnQuotationIDChanging(global::System.Int64 value);
        partial void OnQuotationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerID
        {
            get
            {
                return _MedSerID;
            }
            set
            {
                OnMedSerIDChanging(value);
                ReportPropertyChanging("MedSerID");
                _MedSerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerID");
                OnMedSerIDChanged();
            }
        }
        private global::System.Int64 _MedSerID;
        partial void OnMedSerIDChanging(global::System.Int64 value);
        partial void OnMedSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Double _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Double value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidDateFrom
        {
            get
            {
                return _ValidDateFrom;
            }
            set
            {
                OnValidDateFromChanging(value);
                ReportPropertyChanging("ValidDateFrom");
                _ValidDateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateFrom");
                OnValidDateFromChanged();
            }
        }
        private global::System.DateTime _ValidDateFrom;
        partial void OnValidDateFromChanging(global::System.DateTime value);
        partial void OnValidDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidDateTo
        {
            get
            {
                return _ValidDateTo;
            }
            set
            {
                OnValidDateToChanging(value);
                ReportPropertyChanging("ValidDateTo");
                _ValidDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateTo");
                OnValidDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidDateTo;
        partial void OnValidDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnValidDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerUOM
        {
            get
            {
                return _MedSerUOM;
            }
            set
            {
                OnMedSerUOMChanging(value);
                ReportPropertyChanging("MedSerUOM");
                _MedSerUOM = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerUOM");
                OnMedSerUOMChanged();
            }
        }
        private global::System.String _MedSerUOM;
        partial void OnMedSerUOMChanging(global::System.String value);
        partial void OnMedSerUOMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int64> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private Nullable<global::System.Int64> _LastUpdBy;
        partial void OnLastUpdByChanging(Nullable<global::System.Int64> value);
        partial void OnLastUpdByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isSocialized
        {
            get
            {
                return _isSocialized;
            }
            set
            {
                OnisSocializedChanging(value);
                ReportPropertyChanging("isSocialized");
                _isSocialized = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isSocialized");
                OnisSocializedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isSocialized;
        partial void OnisSocializedChanging(Nullable<global::System.Boolean> value);
        partial void OnisSocializedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem")]
        public MedicalServiceItem MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServiceItem> MedicalServiceItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServiceItem>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServiceItem>("SureHisModel.FK_MOHServiceItems_MedicalServiceItem", "MedicalServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MOHServiceItems_Quotation", "Quotation")]
        public Quotation Quotation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_MOHServiceItems_Quotation", "Quotation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_MOHServiceItems_Quotation", "Quotation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Quotation> QuotationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Quotation>("SureHisModel.FK_MOHServiceItems_Quotation", "Quotation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Quotation>("SureHisModel.FK_MOHServiceItems_Quotation", "Quotation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MRParagraph")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRParagraph : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRParagraph object.
        /// </summary>
        /// <param name="parID">Initial value of the ParID property.</param>
        /// <param name="parCode">Initial value of the ParCode property.</param>
        /// <param name="parTitle">Initial value of the ParTitle property.</param>
        public static MRParagraph CreateMRParagraph(global::System.Int64 parID, global::System.String parCode, global::System.String parTitle)
        {
            MRParagraph mRParagraph = new MRParagraph();
            mRParagraph.ParID = parID;
            mRParagraph.ParCode = parCode;
            mRParagraph.ParTitle = parTitle;
            return mRParagraph;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PParID
        {
            get
            {
                return _PParID;
            }
            set
            {
                OnPParIDChanging(value);
                ReportPropertyChanging("PParID");
                _PParID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PParID");
                OnPParIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PParID;
        partial void OnPParIDChanging(Nullable<global::System.Int64> value);
        partial void OnPParIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParID
        {
            get
            {
                return _ParID;
            }
            set
            {
                if (_ParID != value)
                {
                    OnParIDChanging(value);
                    ReportPropertyChanging("ParID");
                    _ParID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParID");
                    OnParIDChanged();
                }
            }
        }
        private global::System.Int64 _ParID;
        partial void OnParIDChanging(global::System.Int64 value);
        partial void OnParIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParCode
        {
            get
            {
                return _ParCode;
            }
            set
            {
                OnParCodeChanging(value);
                ReportPropertyChanging("ParCode");
                _ParCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParCode");
                OnParCodeChanged();
            }
        }
        private global::System.String _ParCode;
        partial void OnParCodeChanging(global::System.String value);
        partial void OnParCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParTitle
        {
            get
            {
                return _ParTitle;
            }
            set
            {
                OnParTitleChanging(value);
                ReportPropertyChanging("ParTitle");
                _ParTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParTitle");
                OnParTitleChanged();
            }
        }
        private global::System.String _ParTitle;
        partial void OnParTitleChanging(global::System.String value);
        partial void OnParTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParDesc
        {
            get
            {
                return _ParDesc;
            }
            set
            {
                OnParDescChanging(value);
                ReportPropertyChanging("ParDesc");
                _ParDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParDesc");
                OnParDescChanged();
            }
        }
        private global::System.String _ParDesc;
        partial void OnParDescChanging(global::System.String value);
        partial void OnParDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InputInstruction
        {
            get
            {
                return _InputInstruction;
            }
            set
            {
                OnInputInstructionChanging(value);
                ReportPropertyChanging("InputInstruction");
                _InputInstruction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InputInstruction");
                OnInputInstructionChanged();
            }
        }
        private global::System.String _InputInstruction;
        partial void OnInputInstructionChanging(global::System.String value);
        partial void OnInputInstructionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HTMLOutlineCont
        {
            get
            {
                return _HTMLOutlineCont;
            }
            set
            {
                OnHTMLOutlineContChanging(value);
                ReportPropertyChanging("HTMLOutlineCont");
                _HTMLOutlineCont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HTMLOutlineCont");
                OnHTMLOutlineContChanged();
            }
        }
        private global::System.String _HTMLOutlineCont;
        partial void OnHTMLOutlineContChanging(global::System.String value);
        partial void OnHTMLOutlineContChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextOutlineCont
        {
            get
            {
                return _TextOutlineCont;
            }
            set
            {
                OnTextOutlineContChanging(value);
                ReportPropertyChanging("TextOutlineCont");
                _TextOutlineCont = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextOutlineCont");
                OnTextOutlineContChanged();
            }
        }
        private global::System.String _TextOutlineCont;
        partial void OnTextOutlineContChanging(global::System.String value);
        partial void OnTextOutlineContChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRPar_MRPar", "MRParagraph1")]
        public MRParagraph MRParagraph1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRParagraph> MRParagraph1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRPar_MRPar", "MRParagraph")]
        public MRParagraph MRParagraph2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRParagraph> MRParagraph2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRParagraph>("SureHisModel.FK_MRPar_MRPar", "MRParagraph", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRSectionOutline_MRParagraph", "MRSectionOutline")]
        public EntityCollection<MRSectionOutline> MRSectionOutline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRSectionOutline>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRSectionOutline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRSectionOutline>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRSectionOutline", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MRSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRSection object.
        /// </summary>
        /// <param name="secID">Initial value of the SecID property.</param>
        /// <param name="secCode">Initial value of the SecCode property.</param>
        /// <param name="secTitle">Initial value of the SecTitle property.</param>
        public static MRSection CreateMRSection(global::System.Int64 secID, global::System.String secCode, global::System.String secTitle)
        {
            MRSection mRSection = new MRSection();
            mRSection.SecID = secID;
            mRSection.SecCode = secCode;
            mRSection.SecTitle = secTitle;
            return mRSection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SecID
        {
            get
            {
                return _SecID;
            }
            set
            {
                if (_SecID != value)
                {
                    OnSecIDChanging(value);
                    ReportPropertyChanging("SecID");
                    _SecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecID");
                    OnSecIDChanged();
                }
            }
        }
        private global::System.Int64 _SecID;
        partial void OnSecIDChanging(global::System.Int64 value);
        partial void OnSecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecCode
        {
            get
            {
                return _SecCode;
            }
            set
            {
                OnSecCodeChanging(value);
                ReportPropertyChanging("SecCode");
                _SecCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecCode");
                OnSecCodeChanged();
            }
        }
        private global::System.String _SecCode;
        partial void OnSecCodeChanging(global::System.String value);
        partial void OnSecCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SecTitle
        {
            get
            {
                return _SecTitle;
            }
            set
            {
                OnSecTitleChanging(value);
                ReportPropertyChanging("SecTitle");
                _SecTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SecTitle");
                OnSecTitleChanged();
            }
        }
        private global::System.String _SecTitle;
        partial void OnSecTitleChanging(global::System.String value);
        partial void OnSecTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SecDesc
        {
            get
            {
                return _SecDesc;
            }
            set
            {
                OnSecDescChanging(value);
                ReportPropertyChanging("SecDesc");
                _SecDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SecDesc");
                OnSecDescChanged();
            }
        }
        private global::System.String _SecDesc;
        partial void OnSecDescChanging(global::System.String value);
        partial void OnSecDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedRecOutline_MRSection", "MedRecOutline")]
        public EntityCollection<MedRecOutline> MedRecOutline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedRecOutline>("SureHisModel.FK_MedRecOutline_MRSection", "MedRecOutline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedRecOutline>("SureHisModel.FK_MedRecOutline_MRSection", "MedRecOutline", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRSectionOutline_MRSection", "MRSectionOutline")]
        public EntityCollection<MRSectionOutline> MRSectionOutline
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MRSectionOutline>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSectionOutline");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MRSectionOutline>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSectionOutline", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="MRSectionOutline")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MRSectionOutline : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MRSectionOutline object.
        /// </summary>
        /// <param name="secOID">Initial value of the SecOID property.</param>
        /// <param name="secID">Initial value of the SecID property.</param>
        /// <param name="parID">Initial value of the ParID property.</param>
        /// <param name="idx">Initial value of the Idx property.</param>
        public static MRSectionOutline CreateMRSectionOutline(global::System.Int64 secOID, global::System.Int64 secID, global::System.Int64 parID, global::System.Int16 idx)
        {
            MRSectionOutline mRSectionOutline = new MRSectionOutline();
            mRSectionOutline.SecOID = secOID;
            mRSectionOutline.SecID = secID;
            mRSectionOutline.ParID = parID;
            mRSectionOutline.Idx = idx;
            return mRSectionOutline;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SecOID
        {
            get
            {
                return _SecOID;
            }
            set
            {
                if (_SecOID != value)
                {
                    OnSecOIDChanging(value);
                    ReportPropertyChanging("SecOID");
                    _SecOID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecOID");
                    OnSecOIDChanged();
                }
            }
        }
        private global::System.Int64 _SecOID;
        partial void OnSecOIDChanging(global::System.Int64 value);
        partial void OnSecOIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SecID
        {
            get
            {
                return _SecID;
            }
            set
            {
                OnSecIDChanging(value);
                ReportPropertyChanging("SecID");
                _SecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecID");
                OnSecIDChanged();
            }
        }
        private global::System.Int64 _SecID;
        partial void OnSecIDChanging(global::System.Int64 value);
        partial void OnSecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParID
        {
            get
            {
                return _ParID;
            }
            set
            {
                OnParIDChanging(value);
                ReportPropertyChanging("ParID");
                _ParID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParID");
                OnParIDChanged();
            }
        }
        private global::System.Int64 _ParID;
        partial void OnParIDChanging(global::System.Int64 value);
        partial void OnParIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Idx
        {
            get
            {
                return _Idx;
            }
            set
            {
                OnIdxChanging(value);
                ReportPropertyChanging("Idx");
                _Idx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Idx");
                OnIdxChanged();
            }
        }
        private global::System.Int16 _Idx;
        partial void OnIdxChanging(global::System.Int16 value);
        partial void OnIdxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRSectionOutline_MRParagraph", "MRParagraph")]
        public MRParagraph MRParagraph
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRParagraph").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRParagraph").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRParagraph> MRParagraphReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRParagraph>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRParagraph");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRParagraph>("SureHisModel.FK_MRSectionOutline_MRParagraph", "MRParagraph", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MRSectionOutline_MRSection", "MRSection")]
        public MRSection MRSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSection").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSection").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MRSection> MRSectionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MRSection>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MRSection>("SureHisModel.FK_MRSectionOutline_MRSection", "MRSection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="NetworkGuestAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NetworkGuestAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NetworkGuestAccount object.
        /// </summary>
        /// <param name="identityUserID">Initial value of the IdentityUserID property.</param>
        /// <param name="guid">Initial value of the Guid property.</param>
        /// <param name="nickName">Initial value of the NickName property.</param>
        public static NetworkGuestAccount CreateNetworkGuestAccount(global::System.Int64 identityUserID, global::System.String guid, global::System.String nickName)
        {
            NetworkGuestAccount networkGuestAccount = new NetworkGuestAccount();
            networkGuestAccount.IdentityUserID = identityUserID;
            networkGuestAccount.Guid = guid;
            networkGuestAccount.NickName = nickName;
            return networkGuestAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdentityUserID
        {
            get
            {
                return _IdentityUserID;
            }
            set
            {
                if (_IdentityUserID != value)
                {
                    OnIdentityUserIDChanging(value);
                    ReportPropertyChanging("IdentityUserID");
                    _IdentityUserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentityUserID");
                    OnIdentityUserIDChanged();
                }
            }
        }
        private global::System.Int64 _IdentityUserID;
        partial void OnIdentityUserIDChanging(global::System.Int64 value);
        partial void OnIdentityUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IdentityUser
        {
            get
            {
                return _IdentityUser;
            }
            set
            {
                OnIdentityUserChanging(value);
                ReportPropertyChanging("IdentityUser");
                _IdentityUser = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IdentityUser");
                OnIdentityUserChanged();
            }
        }
        private global::System.String _IdentityUser;
        partial void OnIdentityUserChanging(global::System.String value);
        partial void OnIdentityUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderName
        {
            get
            {
                return _ProviderName;
            }
            set
            {
                OnProviderNameChanging(value);
                ReportPropertyChanging("ProviderName");
                _ProviderName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderName");
                OnProviderNameChanged();
            }
        }
        private global::System.String _ProviderName;
        partial void OnProviderNameChanging(global::System.String value);
        partial void OnProviderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProviderUserID
        {
            get
            {
                return _ProviderUserID;
            }
            set
            {
                OnProviderUserIDChanging(value);
                ReportPropertyChanging("ProviderUserID");
                _ProviderUserID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProviderUserID");
                OnProviderUserIDChanged();
            }
        }
        private global::System.String _ProviderUserID;
        partial void OnProviderUserIDChanging(global::System.String value);
        partial void OnProviderUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String eMailAddress
        {
            get
            {
                return _eMailAddress;
            }
            set
            {
                OneMailAddressChanging(value);
                ReportPropertyChanging("eMailAddress");
                _eMailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("eMailAddress");
                OneMailAddressChanged();
            }
        }
        private global::System.String _eMailAddress;
        partial void OneMailAddressChanging(global::System.String value);
        partial void OneMailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Guid
        {
            get
            {
                return _Guid;
            }
            set
            {
                OnGuidChanging(value);
                ReportPropertyChanging("Guid");
                _Guid = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Guid");
                OnGuidChanged();
            }
        }
        private global::System.String _Guid;
        partial void OnGuidChanging(global::System.String value);
        partial void OnGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NickName
        {
            get
            {
                return _NickName;
            }
            set
            {
                OnNickNameChanging(value);
                ReportPropertyChanging("NickName");
                _NickName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NickName");
                OnNickNameChanged();
            }
        }
        private global::System.String _NickName;
        partial void OnNickNameChanging(global::System.String value);
        partial void OnNickNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfileURL
        {
            get
            {
                return _ProfileURL;
            }
            set
            {
                OnProfileURLChanging(value);
                ReportPropertyChanging("ProfileURL");
                _ProfileURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfileURL");
                OnProfileURLChanged();
            }
        }
        private global::System.String _ProfileURL;
        partial void OnProfileURLChanging(global::System.String value);
        partial void OnProfileURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsConfirmed
        {
            get
            {
                return _IsConfirmed;
            }
            set
            {
                OnIsConfirmedChanging(value);
                ReportPropertyChanging("IsConfirmed");
                _IsConfirmed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsConfirmed");
                OnIsConfirmedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsConfirmed;
        partial void OnIsConfirmedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsConfirmedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> SNetID
        {
            get
            {
                return _SNetID;
            }
            set
            {
                OnSNetIDChanging(value);
                ReportPropertyChanging("SNetID");
                _SNetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SNetID");
                OnSNetIDChanged();
            }
        }
        private Nullable<global::System.Byte> _SNetID;
        partial void OnSNetIDChanging(Nullable<global::System.Byte> value);
        partial void OnSNetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtID;
        partial void OnPtIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork")]
        public GenericSocialNetwork GenericSocialNetwork
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenericSocialNetwork>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenericSocialNetwork>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GenericSocialNetwork> GenericSocialNetworkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GenericSocialNetwork>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GenericSocialNetwork>("SureHisModel.FK_NetworkGuestAccount_GenericSocialNetwork", "GenericSocialNetwork", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_NetworkGuestAccount_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_NetworkGuestAccount_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_NetworkGuestAccount_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_NetworkGuestAccount_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NetworkGuestAccount_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NetworkGuestAccount_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NetworkGuestAccount_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_NetworkGuestAccount_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OnlineQueue_NetworkGuestAccount", "OnlineQueue")]
        public EntityCollection<OnlineQueue> OnlineQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OnlineQueue>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "OnlineQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OnlineQueue>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "OnlineQueue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="NextOfKins")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NextOfKins : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NextOfKins object.
        /// </summary>
        /// <param name="rID">Initial value of the RID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="fAMMbrRelationshipCode">Initial value of the FAMMbrRelationshipCode property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="dOB">Initial value of the DOB property.</param>
        public static NextOfKins CreateNextOfKins(global::System.Int64 rID, global::System.Int64 personID, global::System.Int64 fAMMbrRelationshipCode, global::System.String firstName, global::System.String lastName, global::System.DateTime dOB)
        {
            NextOfKins nextOfKins = new NextOfKins();
            nextOfKins.RID = rID;
            nextOfKins.PersonID = personID;
            nextOfKins.FAMMbrRelationshipCode = fAMMbrRelationshipCode;
            nextOfKins.FirstName = firstName;
            nextOfKins.LastName = lastName;
            nextOfKins.DOB = dOB;
            return nextOfKins;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RID
        {
            get
            {
                return _RID;
            }
            set
            {
                if (_RID != value)
                {
                    OnRIDChanging(value);
                    ReportPropertyChanging("RID");
                    _RID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RID");
                    OnRIDChanged();
                }
            }
        }
        private global::System.Int64 _RID;
        partial void OnRIDChanging(global::System.Int64 value);
        partial void OnRIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int64 _PersonID;
        partial void OnPersonIDChanging(global::System.Int64 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FAMMbrRelationshipCode
        {
            get
            {
                return _FAMMbrRelationshipCode;
            }
            set
            {
                OnFAMMbrRelationshipCodeChanging(value);
                ReportPropertyChanging("FAMMbrRelationshipCode");
                _FAMMbrRelationshipCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FAMMbrRelationshipCode");
                OnFAMMbrRelationshipCodeChanged();
            }
        }
        private global::System.Int64 _FAMMbrRelationshipCode;
        partial void OnFAMMbrRelationshipCodeChanging(global::System.Int64 value);
        partial void OnFAMMbrRelationshipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private global::System.DateTime _DOB;
        partial void OnDOBChanging(global::System.DateTime value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAMMrLocationText
        {
            get
            {
                return _FAMMrLocationText;
            }
            set
            {
                OnFAMMrLocationTextChanging(value);
                ReportPropertyChanging("FAMMrLocationText");
                _FAMMrLocationText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAMMrLocationText");
                OnFAMMrLocationTextChanged();
            }
        }
        private global::System.String _FAMMrLocationText;
        partial void OnFAMMrLocationTextChanging(global::System.String value);
        partial void OnFAMMrLocationTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private global::System.String _State;
        partial void OnStateChanging(global::System.String value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobiPhoneNumber
        {
            get
            {
                return _MobiPhoneNumber;
            }
            set
            {
                OnMobiPhoneNumberChanging(value);
                ReportPropertyChanging("MobiPhoneNumber");
                _MobiPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobiPhoneNumber");
                OnMobiPhoneNumberChanged();
            }
        }
        private global::System.String _MobiPhoneNumber;
        partial void OnMobiPhoneNumberChanging(global::System.String value);
        partial void OnMobiPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NextOfKins_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NextOfKins_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NextOfKins_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_NextOfKins_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_NextOfKins_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NextOfKins_refFAMRelationship", "refFAMRelationship")]
        public refFAMRelationship refFAMRelationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_NextOfKins_refFAMRelationship", "refFAMRelationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_NextOfKins_refFAMRelationship", "refFAMRelationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refFAMRelationship> refFAMRelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_NextOfKins_refFAMRelationship", "refFAMRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refFAMRelationship>("SureHisModel.FK_NextOfKins_refFAMRelationship", "refFAMRelationship", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="OccCareerMOH")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OccCareerMOH : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OccCareerMOH object.
        /// </summary>
        /// <param name="occCareerMOHID">Initial value of the OccCareerMOHID property.</param>
        /// <param name="occupationID">Initial value of the OccupationID property.</param>
        /// <param name="careerMOHID">Initial value of the CareerMOHID property.</param>
        public static OccCareerMOH CreateOccCareerMOH(global::System.Int64 occCareerMOHID, global::System.Int64 occupationID, global::System.Int64 careerMOHID)
        {
            OccCareerMOH occCareerMOH = new OccCareerMOH();
            occCareerMOH.OccCareerMOHID = occCareerMOHID;
            occCareerMOH.OccupationID = occupationID;
            occCareerMOH.CareerMOHID = careerMOHID;
            return occCareerMOH;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OccCareerMOHID
        {
            get
            {
                return _OccCareerMOHID;
            }
            set
            {
                if (_OccCareerMOHID != value)
                {
                    OnOccCareerMOHIDChanging(value);
                    ReportPropertyChanging("OccCareerMOHID");
                    _OccCareerMOHID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OccCareerMOHID");
                    OnOccCareerMOHIDChanged();
                }
            }
        }
        private global::System.Int64 _OccCareerMOHID;
        partial void OnOccCareerMOHIDChanging(global::System.Int64 value);
        partial void OnOccCareerMOHIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OccupationID
        {
            get
            {
                return _OccupationID;
            }
            set
            {
                OnOccupationIDChanging(value);
                ReportPropertyChanging("OccupationID");
                _OccupationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccupationID");
                OnOccupationIDChanged();
            }
        }
        private global::System.Int64 _OccupationID;
        partial void OnOccupationIDChanging(global::System.Int64 value);
        partial void OnOccupationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CareerMOHID
        {
            get
            {
                return _CareerMOHID;
            }
            set
            {
                OnCareerMOHIDChanging(value);
                ReportPropertyChanging("CareerMOHID");
                _CareerMOHID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CareerMOHID");
                OnCareerMOHIDChanged();
            }
        }
        private global::System.Int64 _CareerMOHID;
        partial void OnCareerMOHIDChanging(global::System.Int64 value);
        partial void OnCareerMOHIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OccCareerMOH_refCareerMOH", "refCareerMOH")]
        public refCareerMOH refCareerMOH
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "refCareerMOH").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "refCareerMOH").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCareerMOH> refCareerMOHReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "refCareerMOH");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "refCareerMOH", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OccCareerMOH_refOccupation", "refOccupation")]
        public refOccupation refOccupation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refOccupation>("SureHisModel.FK_OccCareerMOH_refOccupation", "refOccupation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refOccupation>("SureHisModel.FK_OccCareerMOH_refOccupation", "refOccupation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refOccupation> refOccupationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refOccupation>("SureHisModel.FK_OccCareerMOH_refOccupation", "refOccupation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refOccupation>("SureHisModel.FK_OccCareerMOH_refOccupation", "refOccupation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="OnlineQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnlineQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OnlineQueue object.
        /// </summary>
        /// <param name="oQueueID">Initial value of the OQueueID property.</param>
        public static OnlineQueue CreateOnlineQueue(global::System.Int64 oQueueID)
        {
            OnlineQueue onlineQueue = new OnlineQueue();
            onlineQueue.OQueueID = oQueueID;
            return onlineQueue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OQueueID
        {
            get
            {
                return _OQueueID;
            }
            set
            {
                if (_OQueueID != value)
                {
                    OnOQueueIDChanging(value);
                    ReportPropertyChanging("OQueueID");
                    _OQueueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OQueueID");
                    OnOQueueIDChanged();
                }
            }
        }
        private global::System.Int64 _OQueueID;
        partial void OnOQueueIDChanging(global::System.Int64 value);
        partial void OnOQueueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RegInfoID
        {
            get
            {
                return _RegInfoID;
            }
            set
            {
                OnRegInfoIDChanging(value);
                ReportPropertyChanging("RegInfoID");
                _RegInfoID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RegInfoID");
                OnRegInfoIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RegInfoID;
        partial void OnRegInfoIDChanging(Nullable<global::System.Int64> value);
        partial void OnRegInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IdentityUser_ID
        {
            get
            {
                return _IdentityUser_ID;
            }
            set
            {
                OnIdentityUser_IDChanging(value);
                ReportPropertyChanging("IdentityUser_ID");
                _IdentityUser_ID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdentityUser_ID");
                OnIdentityUser_IDChanged();
            }
        }
        private Nullable<global::System.Int64> _IdentityUser_ID;
        partial void OnIdentityUser_IDChanging(Nullable<global::System.Int64> value);
        partial void OnIdentityUser_IDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_OnlineQueue", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_OnlineQueue", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_OnlineQueue", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount")]
        public NetworkGuestAccount NetworkGuestAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetworkGuestAccount> NetworkGuestAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetworkGuestAccount>("SureHisModel.FK_OnlineQueue_NetworkGuestAccount", "NetworkGuestAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OnlineQueue_RegistrationInfo", "RegistrationInfo")]
        public RegistrationInfo RegistrationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistrationInfo>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "RegistrationInfo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistrationInfo>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "RegistrationInfo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RegistrationInfo> RegistrationInfoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RegistrationInfo>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "RegistrationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RegistrationInfo>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "RegistrationInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Operations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Operations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Operations object.
        /// </summary>
        /// <param name="opSkedID">Initial value of the OpSkedID property.</param>
        /// <param name="dOpSkedID">Initial value of the DOpSkedID property.</param>
        /// <param name="v_DayName">Initial value of the V_DayName property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        public static Operations CreateOperations(global::System.Int64 opSkedID, global::System.Int64 dOpSkedID, global::System.Int64 v_DayName, global::System.Int64 sID)
        {
            Operations operations = new Operations();
            operations.OpSkedID = opSkedID;
            operations.DOpSkedID = dOpSkedID;
            operations.V_DayName = v_DayName;
            operations.SID = sID;
            return operations;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OpSkedID
        {
            get
            {
                return _OpSkedID;
            }
            set
            {
                OnOpSkedIDChanging(value);
                ReportPropertyChanging("OpSkedID");
                _OpSkedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpSkedID");
                OnOpSkedIDChanged();
            }
        }
        private global::System.Int64 _OpSkedID;
        partial void OnOpSkedIDChanging(global::System.Int64 value);
        partial void OnOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DOpSkedID
        {
            get
            {
                return _DOpSkedID;
            }
            set
            {
                if (_DOpSkedID != value)
                {
                    OnDOpSkedIDChanging(value);
                    ReportPropertyChanging("DOpSkedID");
                    _DOpSkedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DOpSkedID");
                    OnDOpSkedIDChanged();
                }
            }
        }
        private global::System.Int64 _DOpSkedID;
        partial void OnDOpSkedIDChanging(global::System.Int64 value);
        partial void OnDOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_DayName
        {
            get
            {
                return _V_DayName;
            }
            set
            {
                OnV_DayNameChanging(value);
                ReportPropertyChanging("V_DayName");
                _V_DayName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DayName");
                OnV_DayNameChanged();
            }
        }
        private global::System.Int64 _V_DayName;
        partial void OnV_DayNameChanging(global::System.Int64 value);
        partial void OnV_DayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_Operations", "EmpWorkSchedule")]
        public EntityCollection<EmpWorkSchedule> EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_Operations", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_Operations", "EmpWorkSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Operations_OperationSchedule", "OperationSchedule")]
        public OperationSchedule OperationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_Operations_OperationSchedule", "OperationSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_Operations_OperationSchedule", "OperationSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationSchedule> OperationScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_Operations_OperationSchedule", "OperationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationSchedule>("SureHisModel.FK_Operations_OperationSchedule", "OperationSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Operations_refShift", "refShift")]
        public refShift refShift
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_Operations_refShift", "refShift").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_Operations_refShift", "refShift").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refShift> refShiftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_Operations_refShift", "refShift");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refShift>("SureHisModel.FK_Operations_refShift", "refShift", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="OperationSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OperationSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OperationSchedule object.
        /// </summary>
        /// <param name="opSkedID">Initial value of the OpSkedID property.</param>
        /// <param name="opSkedCode">Initial value of the OpSkedCode property.</param>
        /// <param name="opSkedTitle">Initial value of the OpSkedTitle property.</param>
        /// <param name="yearNumber">Initial value of the YearNumber property.</param>
        public static OperationSchedule CreateOperationSchedule(global::System.Int64 opSkedID, global::System.String opSkedCode, global::System.String opSkedTitle, global::System.String yearNumber)
        {
            OperationSchedule operationSchedule = new OperationSchedule();
            operationSchedule.OpSkedID = opSkedID;
            operationSchedule.OpSkedCode = opSkedCode;
            operationSchedule.OpSkedTitle = opSkedTitle;
            operationSchedule.YearNumber = yearNumber;
            return operationSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OpSkedID
        {
            get
            {
                return _OpSkedID;
            }
            set
            {
                if (_OpSkedID != value)
                {
                    OnOpSkedIDChanging(value);
                    ReportPropertyChanging("OpSkedID");
                    _OpSkedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OpSkedID");
                    OnOpSkedIDChanged();
                }
            }
        }
        private global::System.Int64 _OpSkedID;
        partial void OnOpSkedIDChanging(global::System.Int64 value);
        partial void OnOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpSkedCode
        {
            get
            {
                return _OpSkedCode;
            }
            set
            {
                OnOpSkedCodeChanging(value);
                ReportPropertyChanging("OpSkedCode");
                _OpSkedCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpSkedCode");
                OnOpSkedCodeChanged();
            }
        }
        private global::System.String _OpSkedCode;
        partial void OnOpSkedCodeChanging(global::System.String value);
        partial void OnOpSkedCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OpSkedTitle
        {
            get
            {
                return _OpSkedTitle;
            }
            set
            {
                OnOpSkedTitleChanging(value);
                ReportPropertyChanging("OpSkedTitle");
                _OpSkedTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OpSkedTitle");
                OnOpSkedTitleChanged();
            }
        }
        private global::System.String _OpSkedTitle;
        partial void OnOpSkedTitleChanging(global::System.String value);
        partial void OnOpSkedTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OpSkedDesc
        {
            get
            {
                return _OpSkedDesc;
            }
            set
            {
                OnOpSkedDescChanging(value);
                ReportPropertyChanging("OpSkedDesc");
                _OpSkedDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OpSkedDesc");
                OnOpSkedDescChanged();
            }
        }
        private global::System.String _OpSkedDesc;
        partial void OnOpSkedDescChanging(global::System.String value);
        partial void OnOpSkedDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String YearNumber
        {
            get
            {
                return _YearNumber;
            }
            set
            {
                OnYearNumberChanging(value);
                ReportPropertyChanging("YearNumber");
                _YearNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("YearNumber");
                OnYearNumberChanged();
            }
        }
        private global::System.String _YearNumber;
        partial void OnYearNumberChanging(global::System.String value);
        partial void OnYearNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AppliedDate
        {
            get
            {
                return _AppliedDate;
            }
            set
            {
                OnAppliedDateChanging(value);
                ReportPropertyChanging("AppliedDate");
                _AppliedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppliedDate");
                OnAppliedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AppliedDate;
        partial void OnAppliedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAppliedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _NoEffect;
        partial void OnNoEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnNoEffectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignmentSchedule_OperationSchedule", "AssignmentSchedule")]
        public EntityCollection<AssignmentSchedule> AssignmentSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignmentSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "AssignmentSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignmentSchedule>("SureHisModel.FK_AssignmentSchedule_OperationSchedule", "AssignmentSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Operations_OperationSchedule", "Operations")]
        public EntityCollection<Operations> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operations>("SureHisModel.FK_Operations_OperationSchedule", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operations>("SureHisModel.FK_Operations_OperationSchedule", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_OperationSchedule", "OpSkedDistibution")]
        public EntityCollection<OpSkedDistibution> OpSkedDistibution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OpSkedDistibution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OpSkedDistibution", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="OpSkedDistibution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OpSkedDistibution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OpSkedDistibution object.
        /// </summary>
        /// <param name="oSDistID">Initial value of the OSDistID property.</param>
        /// <param name="wDID">Initial value of the WDID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        public static OpSkedDistibution CreateOpSkedDistibution(global::System.Int64 oSDistID, global::System.Int64 wDID, global::System.Int64 roleID)
        {
            OpSkedDistibution opSkedDistibution = new OpSkedDistibution();
            opSkedDistibution.OSDistID = oSDistID;
            opSkedDistibution.WDID = wDID;
            opSkedDistibution.RoleID = roleID;
            return opSkedDistibution;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OSDistID
        {
            get
            {
                return _OSDistID;
            }
            set
            {
                if (_OSDistID != value)
                {
                    OnOSDistIDChanging(value);
                    ReportPropertyChanging("OSDistID");
                    _OSDistID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OSDistID");
                    OnOSDistIDChanged();
                }
            }
        }
        private global::System.Int64 _OSDistID;
        partial void OnOSDistIDChanging(global::System.Int64 value);
        partial void OnOSDistIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OpSkedID
        {
            get
            {
                return _OpSkedID;
            }
            set
            {
                OnOpSkedIDChanging(value);
                ReportPropertyChanging("OpSkedID");
                _OpSkedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OpSkedID");
                OnOpSkedIDChanged();
            }
        }
        private Nullable<global::System.Int64> _OpSkedID;
        partial void OnOpSkedIDChanging(Nullable<global::System.Int64> value);
        partial void OnOpSkedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private global::System.Int64 _WDID;
        partial void OnWDIDChanging(global::System.Int64 value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_OperationSchedule", "OperationSchedule")]
        public OperationSchedule OperationSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OperationSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OperationSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OperationSchedule> OperationScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OperationSchedule>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OperationSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OperationSchedule>("SureHisModel.FK_OpSkedDistibution_OperationSchedule", "OperationSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_refRole", "refRole")]
        public refRole refRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_OpSkedDistibution_refRole", "refRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_OpSkedDistibution_refRole", "refRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refRole> refRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_OpSkedDistibution_refRole", "refRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refRole>("SureHisModel.FK_OpSkedDistibution_refRole", "refRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_OpSkedDistibution_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_OpSkedDistibution_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_OpSkedDistibution_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_OpSkedDistibution_WardInDept", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="oUID">Initial value of the OUID property.</param>
        /// <param name="orgUnitName">Initial value of the OrgUnitName property.</param>
        /// <param name="isHCMDOU">Initial value of the IsHCMDOU property.</param>
        /// <param name="h7OrgUnitType">Initial value of the H7OrgUnitType property.</param>
        public static Organization CreateOrganization(global::System.Int64 oUID, global::System.String orgUnitName, global::System.Boolean isHCMDOU, global::System.Int64 h7OrgUnitType)
        {
            Organization organization = new Organization();
            organization.OUID = oUID;
            organization.OrgUnitName = orgUnitName;
            organization.IsHCMDOU = isHCMDOU;
            organization.H7OrgUnitType = h7OrgUnitType;
            return organization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OUID
        {
            get
            {
                return _OUID;
            }
            set
            {
                if (_OUID != value)
                {
                    OnOUIDChanging(value);
                    ReportPropertyChanging("OUID");
                    _OUID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OUID");
                    OnOUIDChanged();
                }
            }
        }
        private global::System.Int64 _OUID;
        partial void OnOUIDChanging(global::System.Int64 value);
        partial void OnOUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrgUnitName
        {
            get
            {
                return _OrgUnitName;
            }
            set
            {
                OnOrgUnitNameChanging(value);
                ReportPropertyChanging("OrgUnitName");
                _OrgUnitName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrgUnitName");
                OnOrgUnitNameChanged();
            }
        }
        private global::System.String _OrgUnitName;
        partial void OnOrgUnitNameChanging(global::System.String value);
        partial void OnOrgUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShortOrgUnitName
        {
            get
            {
                return _ShortOrgUnitName;
            }
            set
            {
                OnShortOrgUnitNameChanging(value);
                ReportPropertyChanging("ShortOrgUnitName");
                _ShortOrgUnitName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShortOrgUnitName");
                OnShortOrgUnitNameChanged();
            }
        }
        private global::System.String _ShortOrgUnitName;
        partial void OnShortOrgUnitNameChanging(global::System.String value);
        partial void OnShortOrgUnitNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsHCMDOU
        {
            get
            {
                return _IsHCMDOU;
            }
            set
            {
                OnIsHCMDOUChanging(value);
                ReportPropertyChanging("IsHCMDOU");
                _IsHCMDOU = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsHCMDOU");
                OnIsHCMDOUChanged();
            }
        }
        private global::System.Boolean _IsHCMDOU;
        partial void OnIsHCMDOUChanging(global::System.Boolean value);
        partial void OnIsHCMDOUChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OUWebsite
        {
            get
            {
                return _OUWebsite;
            }
            set
            {
                OnOUWebsiteChanging(value);
                ReportPropertyChanging("OUWebsite");
                _OUWebsite = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OUWebsite");
                OnOUWebsiteChanged();
            }
        }
        private global::System.String _OUWebsite;
        partial void OnOUWebsiteChanging(global::System.String value);
        partial void OnOUWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OUEmail
        {
            get
            {
                return _OUEmail;
            }
            set
            {
                OnOUEmailChanging(value);
                ReportPropertyChanging("OUEmail");
                _OUEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OUEmail");
                OnOUEmailChanged();
            }
        }
        private global::System.String _OUEmail;
        partial void OnOUEmailChanging(global::System.String value);
        partial void OnOUEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OUAddress
        {
            get
            {
                return _OUAddress;
            }
            set
            {
                OnOUAddressChanging(value);
                ReportPropertyChanging("OUAddress");
                _OUAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OUAddress");
                OnOUAddressChanged();
            }
        }
        private global::System.String _OUAddress;
        partial void OnOUAddressChanging(global::System.String value);
        partial void OnOUAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 H7OrgUnitType
        {
            get
            {
                return _H7OrgUnitType;
            }
            set
            {
                OnH7OrgUnitTypeChanging(value);
                ReportPropertyChanging("H7OrgUnitType");
                _H7OrgUnitType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7OrgUnitType");
                OnH7OrgUnitTypeChanged();
            }
        }
        private global::System.Int64 _H7OrgUnitType;
        partial void OnH7OrgUnitTypeChanging(global::System.Int64 value);
        partial void OnH7OrgUnitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OUPhone
        {
            get
            {
                return _OUPhone;
            }
            set
            {
                OnOUPhoneChanging(value);
                ReportPropertyChanging("OUPhone");
                _OUPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OUPhone");
                OnOUPhoneChanged();
            }
        }
        private global::System.String _OUPhone;
        partial void OnOUPhoneChanging(global::System.String value);
        partial void OnOUPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_Organization", "HCProvider")]
        public EntityCollection<HCProvider> HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_Organization", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_Organization", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCStakeholder_Organization", "HCStakeholder")]
        public EntityCollection<HCStakeholder> HCStakeholder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCStakeholder>("SureHisModel.FK_HCStakeholder_Organization", "HCStakeholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCStakeholder>("SureHisModel.FK_HCStakeholder_Organization", "HCStakeholder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Organization_refCountry", "refCountry")]
        public refCountry refCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Organization_refCountry", "refCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Organization_refCountry", "refCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCountry> refCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Organization_refCountry", "refCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCountry>("SureHisModel.FK_Organization_refCountry", "refCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PharmaceuticalCompany_Organization", "PharmaceuticalCompany")]
        public EntityCollection<PharmaceuticalCompany> PharmaceuticalCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PharmaceuticalCompany>("SureHisModel.FK_PharmaceuticalCompany_Organization", "PharmaceuticalCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PharmaceuticalCompany>("SureHisModel.FK_PharmaceuticalCompany_Organization", "PharmaceuticalCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkPlace_Organization", "WorkPlace")]
        public EntityCollection<WorkPlace> WorkPlace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkPlace>("SureHisModel.FK_WorkPlace_Organization", "WorkPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkPlace>("SureHisModel.FK_WorkPlace_Organization", "WorkPlace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ParaClinicalExamGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParaClinicalExamGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParaClinicalExamGroup object.
        /// </summary>
        /// <param name="medDiagMethodID">Initial value of the MedDiagMethodID property.</param>
        /// <param name="parClinExamGroupID">Initial value of the ParClinExamGroupID property.</param>
        /// <param name="parClinExamGroupName">Initial value of the ParClinExamGroupName property.</param>
        public static ParaClinicalExamGroup CreateParaClinicalExamGroup(global::System.Int64 medDiagMethodID, global::System.Int64 parClinExamGroupID, global::System.String parClinExamGroupName)
        {
            ParaClinicalExamGroup paraClinicalExamGroup = new ParaClinicalExamGroup();
            paraClinicalExamGroup.MedDiagMethodID = medDiagMethodID;
            paraClinicalExamGroup.ParClinExamGroupID = parClinExamGroupID;
            paraClinicalExamGroup.ParClinExamGroupName = parClinExamGroupName;
            return paraClinicalExamGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedDiagMethodID
        {
            get
            {
                return _MedDiagMethodID;
            }
            set
            {
                OnMedDiagMethodIDChanging(value);
                ReportPropertyChanging("MedDiagMethodID");
                _MedDiagMethodID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedDiagMethodID");
                OnMedDiagMethodIDChanged();
            }
        }
        private global::System.Int64 _MedDiagMethodID;
        partial void OnMedDiagMethodIDChanging(global::System.Int64 value);
        partial void OnMedDiagMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PParClinExamGroupID
        {
            get
            {
                return _PParClinExamGroupID;
            }
            set
            {
                OnPParClinExamGroupIDChanging(value);
                ReportPropertyChanging("PParClinExamGroupID");
                _PParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PParClinExamGroupID");
                OnPParClinExamGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PParClinExamGroupID;
        partial void OnPParClinExamGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnPParClinExamGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                if (_ParClinExamGroupID != value)
                {
                    OnParClinExamGroupIDChanging(value);
                    ReportPropertyChanging("ParClinExamGroupID");
                    _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ParClinExamGroupID");
                    OnParClinExamGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(global::System.Int64 value);
        partial void OnParClinExamGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParClinExamGroupName
        {
            get
            {
                return _ParClinExamGroupName;
            }
            set
            {
                OnParClinExamGroupNameChanging(value);
                ReportPropertyChanging("ParClinExamGroupName");
                _ParClinExamGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParClinExamGroupName");
                OnParClinExamGroupNameChanged();
            }
        }
        private global::System.String _ParClinExamGroupName;
        partial void OnParClinExamGroupNameChanging(global::System.String value);
        partial void OnParClinExamGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParClinExamPurpose
        {
            get
            {
                return _ParClinExamPurpose;
            }
            set
            {
                OnParClinExamPurposeChanging(value);
                ReportPropertyChanging("ParClinExamPurpose");
                _ParClinExamPurpose = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParClinExamPurpose");
                OnParClinExamPurposeChanged();
            }
        }
        private global::System.String _ParClinExamPurpose;
        partial void OnParClinExamPurposeChanging(global::System.String value);
        partial void OnParClinExamPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDiagnosticImaging
        {
            get
            {
                return _IsDiagnosticImaging;
            }
            set
            {
                OnIsDiagnosticImagingChanging(value);
                ReportPropertyChanging("IsDiagnosticImaging");
                _IsDiagnosticImaging = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDiagnosticImaging");
                OnIsDiagnosticImagingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDiagnosticImaging;
        partial void OnIsDiagnosticImagingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDiagnosticImagingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DiagDescribeTmp_ParaClinicalExamGroup", "DiagDescribeTmp")]
        public EntityCollection<DiagDescribeTmp> DiagDescribeTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DiagDescribeTmp>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "DiagDescribeTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DiagDescribeTmp>("SureHisModel.FK_DiagDescribeTmp_ParaClinicalExamGroup", "DiagDescribeTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod")]
        public MedicalDiagnosticMethod MedicalDiagnosticMethod
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalDiagnosticMethod>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalDiagnosticMethod>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalDiagnosticMethod> MedicalDiagnosticMethodReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalDiagnosticMethod>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalDiagnosticMethod>("SureHisModel.FK_ParaClinicalExamGroup_MedicalDiagnosticMethod", "MedicalDiagnosticMethod", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalTestProcedure_ParaClinicalExamGroup", "MedicalTestProcedure")]
        public EntityCollection<MedicalTestProcedure> MedicalTestProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalTestProcedure>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "MedicalTestProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalTestProcedure>("SureHisModel.FK_MedicalTestProcedure_ParaClinicalExamGroup", "MedicalTestProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingTest_ParaClinicalExamGroup", "MedImagingTest")]
        public EntityCollection<MedImagingTest> MedImagingTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedImagingTest>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "MedImagingTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedImagingTest>("SureHisModel.FK_MedImagingTest_ParaClinicalExamGroup", "MedImagingTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_ParaClinicalExamGroup", "MedLabTest")]
        public EntityCollection<MedLabTest> MedLabTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "MedLabTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_ParaClinicalExamGroup", "MedLabTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup1")]
        public EntityCollection<ParaClinicalExamGroup> ParaClinicalExamGroup1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroup2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_ParaClinicalExamGroup_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecifiedParaclinical_ParaClinicalExamGroup", "SpecifiedParaclinical")]
        public EntityCollection<SpecifiedParaclinical> SpecifiedParaclinical
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecifiedParaclinical>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "SpecifiedParaclinical");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecifiedParaclinical>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "SpecifiedParaclinical", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ParaClinicalReq")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParaClinicalReq : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParaClinicalReq object.
        /// </summary>
        /// <param name="medTestProcID">Initial value of the MedTestProcID property.</param>
        /// <param name="clinReqID">Initial value of the ClinReqID property.</param>
        /// <param name="clinReqCode">Initial value of the ClinReqCode property.</param>
        /// <param name="admID">Initial value of the AdmID property.</param>
        /// <param name="refDoctorID">Initial value of the RefDoctorID property.</param>
        /// <param name="appointedDate">Initial value of the AppointedDate property.</param>
        /// <param name="v_pClinStatus">Initial value of the V_pClinStatus property.</param>
        /// <param name="v_pClinCatg">Initial value of the V_pClinCatg property.</param>
        public static ParaClinicalReq CreateParaClinicalReq(global::System.Int64 medTestProcID, global::System.Int64 clinReqID, global::System.String clinReqCode, global::System.Int64 admID, global::System.Int64 refDoctorID, global::System.DateTime appointedDate, global::System.Int64 v_pClinStatus, global::System.Int64 v_pClinCatg)
        {
            ParaClinicalReq paraClinicalReq = new ParaClinicalReq();
            paraClinicalReq.MedTestProcID = medTestProcID;
            paraClinicalReq.ClinReqID = clinReqID;
            paraClinicalReq.ClinReqCode = clinReqCode;
            paraClinicalReq.AdmID = admID;
            paraClinicalReq.RefDoctorID = refDoctorID;
            paraClinicalReq.AppointedDate = appointedDate;
            paraClinicalReq.V_pClinStatus = v_pClinStatus;
            paraClinicalReq.V_pClinCatg = v_pClinCatg;
            return paraClinicalReq;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedTestProcID
        {
            get
            {
                return _MedTestProcID;
            }
            set
            {
                OnMedTestProcIDChanging(value);
                ReportPropertyChanging("MedTestProcID");
                _MedTestProcID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedTestProcID");
                OnMedTestProcIDChanged();
            }
        }
        private global::System.Int64 _MedTestProcID;
        partial void OnMedTestProcIDChanging(global::System.Int64 value);
        partial void OnMedTestProcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClinReqID
        {
            get
            {
                return _ClinReqID;
            }
            set
            {
                if (_ClinReqID != value)
                {
                    OnClinReqIDChanging(value);
                    ReportPropertyChanging("ClinReqID");
                    _ClinReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClinReqID");
                    OnClinReqIDChanged();
                }
            }
        }
        private global::System.Int64 _ClinReqID;
        partial void OnClinReqIDChanging(global::System.Int64 value);
        partial void OnClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClinReqCode
        {
            get
            {
                return _ClinReqCode;
            }
            set
            {
                OnClinReqCodeChanging(value);
                ReportPropertyChanging("ClinReqCode");
                _ClinReqCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClinReqCode");
                OnClinReqCodeChanged();
            }
        }
        private global::System.String _ClinReqCode;
        partial void OnClinReqCodeChanging(global::System.String value);
        partial void OnClinReqCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private global::System.Int64 _AdmID;
        partial void OnAdmIDChanging(global::System.Int64 value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RefDoctorID
        {
            get
            {
                return _RefDoctorID;
            }
            set
            {
                OnRefDoctorIDChanging(value);
                ReportPropertyChanging("RefDoctorID");
                _RefDoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RefDoctorID");
                OnRefDoctorIDChanged();
            }
        }
        private global::System.Int64 _RefDoctorID;
        partial void OnRefDoctorIDChanging(global::System.Int64 value);
        partial void OnRefDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AppointedDate
        {
            get
            {
                return _AppointedDate;
            }
            set
            {
                OnAppointedDateChanging(value);
                ReportPropertyChanging("AppointedDate");
                _AppointedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppointedDate");
                OnAppointedDateChanged();
            }
        }
        private global::System.DateTime _AppointedDate;
        partial void OnAppointedDateChanging(global::System.DateTime value);
        partial void OnAppointedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NationalMedicalCode
        {
            get
            {
                return _NationalMedicalCode;
            }
            set
            {
                OnNationalMedicalCodeChanging(value);
                ReportPropertyChanging("NationalMedicalCode");
                _NationalMedicalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NationalMedicalCode");
                OnNationalMedicalCodeChanged();
            }
        }
        private global::System.String _NationalMedicalCode;
        partial void OnNationalMedicalCodeChanging(global::System.String value);
        partial void OnNationalMedicalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedEncnID;
        partial void OnMedEncnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreDiagnosis
        {
            get
            {
                return _PreDiagnosis;
            }
            set
            {
                OnPreDiagnosisChanging(value);
                ReportPropertyChanging("PreDiagnosis");
                _PreDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreDiagnosis");
                OnPreDiagnosisChanged();
            }
        }
        private global::System.String _PreDiagnosis;
        partial void OnPreDiagnosisChanging(global::System.String value);
        partial void OnPreDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TechnicalReq
        {
            get
            {
                return _TechnicalReq;
            }
            set
            {
                OnTechnicalReqChanging(value);
                ReportPropertyChanging("TechnicalReq");
                _TechnicalReq = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TechnicalReq");
                OnTechnicalReqChanged();
            }
        }
        private global::System.String _TechnicalReq;
        partial void OnTechnicalReqChanging(global::System.String value);
        partial void OnTechnicalReqChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ParaClinExamForOPatient
        {
            get
            {
                return _ParaClinExamForOPatient;
            }
            set
            {
                OnParaClinExamForOPatientChanging(value);
                ReportPropertyChanging("ParaClinExamForOPatient");
                _ParaClinExamForOPatient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParaClinExamForOPatient");
                OnParaClinExamForOPatientChanged();
            }
        }
        private Nullable<global::System.Boolean> _ParaClinExamForOPatient;
        partial void OnParaClinExamForOPatientChanging(Nullable<global::System.Boolean> value);
        partial void OnParaClinExamForOPatientChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExternalTest
        {
            get
            {
                return _IsExternalTest;
            }
            set
            {
                OnIsExternalTestChanging(value);
                ReportPropertyChanging("IsExternalTest");
                _IsExternalTest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExternalTest");
                OnIsExternalTestChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExternalTest;
        partial void OnIsExternalTestChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExternalTestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsReferral
        {
            get
            {
                return _IsReferral;
            }
            set
            {
                OnIsReferralChanging(value);
                ReportPropertyChanging("IsReferral");
                _IsReferral = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsReferral");
                OnIsReferralChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsReferral;
        partial void OnIsReferralChanging(Nullable<global::System.Boolean> value);
        partial void OnIsReferralChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Recipients
        {
            get
            {
                return _Recipients;
            }
            set
            {
                OnRecipientsChanging(value);
                ReportPropertyChanging("Recipients");
                _Recipients = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Recipients");
                OnRecipientsChanged();
            }
        }
        private global::System.String _Recipients;
        partial void OnRecipientsChanging(global::System.String value);
        partial void OnRecipientsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ReceiverID
        {
            get
            {
                return _ReceiverID;
            }
            set
            {
                OnReceiverIDChanging(value);
                ReportPropertyChanging("ReceiverID");
                _ReceiverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceiverID");
                OnReceiverIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ReceiverID;
        partial void OnReceiverIDChanging(Nullable<global::System.Int64> value);
        partial void OnReceiverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReceiverName
        {
            get
            {
                return _ReceiverName;
            }
            set
            {
                OnReceiverNameChanging(value);
                ReportPropertyChanging("ReceiverName");
                _ReceiverName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReceiverName");
                OnReceiverNameChanged();
            }
        }
        private global::System.String _ReceiverName;
        partial void OnReceiverNameChanging(global::System.String value);
        partial void OnReceiverNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsDiagnosticImaging
        {
            get
            {
                return _IsDiagnosticImaging;
            }
            set
            {
                OnIsDiagnosticImagingChanging(value);
                ReportPropertyChanging("IsDiagnosticImaging");
                _IsDiagnosticImaging = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDiagnosticImaging");
                OnIsDiagnosticImagingChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsDiagnosticImaging;
        partial void OnIsDiagnosticImagingChanging(Nullable<global::System.Boolean> value);
        partial void OnIsDiagnosticImagingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> HighPriority
        {
            get
            {
                return _HighPriority;
            }
            set
            {
                OnHighPriorityChanging(value);
                ReportPropertyChanging("HighPriority");
                _HighPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HighPriority");
                OnHighPriorityChanged();
            }
        }
        private Nullable<global::System.Boolean> _HighPriority;
        partial void OnHighPriorityChanging(Nullable<global::System.Boolean> value);
        partial void OnHighPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_pClinStatus
        {
            get
            {
                return _V_pClinStatus;
            }
            set
            {
                OnV_pClinStatusChanging(value);
                ReportPropertyChanging("V_pClinStatus");
                _V_pClinStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_pClinStatus");
                OnV_pClinStatusChanged();
            }
        }
        private global::System.Int64 _V_pClinStatus;
        partial void OnV_pClinStatusChanging(global::System.Int64 value);
        partial void OnV_pClinStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_pClinCatg
        {
            get
            {
                return _V_pClinCatg;
            }
            set
            {
                OnV_pClinCatgChanging(value);
                ReportPropertyChanging("V_pClinCatg");
                _V_pClinCatg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_pClinCatg");
                OnV_pClinCatgChanged();
            }
        }
        private global::System.Int64 _V_pClinCatg;
        partial void OnV_pClinCatgChanging(global::System.Int64 value);
        partial void OnV_pClinCatgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PreICD10Diag
        {
            get
            {
                return _PreICD10Diag;
            }
            set
            {
                OnPreICD10DiagChanging(value);
                ReportPropertyChanging("PreICD10Diag");
                _PreICD10Diag = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreICD10Diag");
                OnPreICD10DiagChanged();
            }
        }
        private Nullable<global::System.Int64> _PreICD10Diag;
        partial void OnPreICD10DiagChanging(Nullable<global::System.Int64> value);
        partial void OnPreICD10DiagChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_ParaClinicalReq", "BodyRegion")]
        public EntityCollection<BodyRegion> BodyRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "BodyRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_ParaClinicalReq", "BodyRegion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_ParaClinicalReq_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure")]
        public MedicalTestProcedure MedicalTestProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalTestProcedure> MedicalTestProcedureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalTestProcedure>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalTestProcedure>("SureHisModel.FK_ParaClinicalReq_MedicalTestProcedure", "MedicalTestProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReqDetails")]
        public EntityCollection<ParaClinicalReqDetails> ParaClinicalReqDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalReqDetails>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReqDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalReqDetails>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReqDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_ParaClinicalReq", "PatientDiagnosticImaging")]
        public EntityCollection<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "PatientDiagnosticImaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_ParaClinicalReq", "TestOnPatientSpecimen")]
        public EntityCollection<TestOnPatientSpecimen> TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ParaClinicalReqDetails")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ParaClinicalReqDetails : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ParaClinicalReqDetails object.
        /// </summary>
        /// <param name="dClinReqID">Initial value of the DClinReqID property.</param>
        public static ParaClinicalReqDetails CreateParaClinicalReqDetails(global::System.Int64 dClinReqID)
        {
            ParaClinicalReqDetails paraClinicalReqDetails = new ParaClinicalReqDetails();
            paraClinicalReqDetails.DClinReqID = dClinReqID;
            return paraClinicalReqDetails;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClinReqID
        {
            get
            {
                return _ClinReqID;
            }
            set
            {
                OnClinReqIDChanging(value);
                ReportPropertyChanging("ClinReqID");
                _ClinReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinReqID");
                OnClinReqIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClinReqID;
        partial void OnClinReqIDChanging(Nullable<global::System.Int64> value);
        partial void OnClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DClinReqID
        {
            get
            {
                return _DClinReqID;
            }
            set
            {
                if (_DClinReqID != value)
                {
                    OnDClinReqIDChanging(value);
                    ReportPropertyChanging("DClinReqID");
                    _DClinReqID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DClinReqID");
                    OnDClinReqIDChanged();
                }
            }
        }
        private global::System.Int64 _DClinReqID;
        partial void OnDClinReqIDChanging(global::System.Int64 value);
        partial void OnDClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedLabTestItemID
        {
            get
            {
                return _MedLabTestItemID;
            }
            set
            {
                OnMedLabTestItemIDChanging(value);
                ReportPropertyChanging("MedLabTestItemID");
                _MedLabTestItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedLabTestItemID");
                OnMedLabTestItemIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedLabTestItemID;
        partial void OnMedLabTestItemIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedLabTestItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialReq
        {
            get
            {
                return _SpecialReq;
            }
            set
            {
                OnSpecialReqChanging(value);
                ReportPropertyChanging("SpecialReq");
                _SpecialReq = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialReq");
                OnSpecialReqChanged();
            }
        }
        private global::System.String _SpecialReq;
        partial void OnSpecialReqChanging(global::System.String value);
        partial void OnSpecialReqChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems")]
        public MedLabTestItems MedLabTestItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTestItems>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTestItems>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedLabTestItems> MedLabTestItemsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTestItems>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedLabTestItems>("SureHisModel.FK_ParaClinicalReqDetails_MedLabTestItems", "MedLabTestItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq")]
        public ParaClinicalReq ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalReq> ParaClinicalReqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReqDetails_ParaClinicalReq", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "PatientMedLabTestResult")]
        public EntityCollection<PatientMedLabTestResult> PatientMedLabTestResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "PatientMedLabTestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "PatientMedLabTestResult", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PastPersonHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PastPersonHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PastPersonHistory object.
        /// </summary>
        /// <param name="perHisID">Initial value of the PerHisID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="mHIndexID">Initial value of the MHIndexID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PastPersonHistory CreatePastPersonHistory(global::System.Int64 perHisID, global::System.Int64 ptComMedRecID, global::System.Int64 mHIndexID, global::System.DateTime modifiedDate)
        {
            PastPersonHistory pastPersonHistory = new PastPersonHistory();
            pastPersonHistory.PerHisID = perHisID;
            pastPersonHistory.PtComMedRecID = ptComMedRecID;
            pastPersonHistory.MHIndexID = mHIndexID;
            pastPersonHistory.ModifiedDate = modifiedDate;
            return pastPersonHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PerHisID
        {
            get
            {
                return _PerHisID;
            }
            set
            {
                if (_PerHisID != value)
                {
                    OnPerHisIDChanging(value);
                    ReportPropertyChanging("PerHisID");
                    _PerHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PerHisID");
                    OnPerHisIDChanged();
                }
            }
        }
        private global::System.Int64 _PerHisID;
        partial void OnPerHisIDChanging(global::System.Int64 value);
        partial void OnPerHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MHIndexID
        {
            get
            {
                return _MHIndexID;
            }
            set
            {
                OnMHIndexIDChanging(value);
                ReportPropertyChanging("MHIndexID");
                _MHIndexID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MHIndexID");
                OnMHIndexIDChanged();
            }
        }
        private global::System.Int64 _MHIndexID;
        partial void OnMHIndexIDChanging(global::System.Int64 value);
        partial void OnMHIndexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> UsedTime
        {
            get
            {
                return _UsedTime;
            }
            set
            {
                OnUsedTimeChanging(value);
                ReportPropertyChanging("UsedTime");
                _UsedTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UsedTime");
                OnUsedTimeChanged();
            }
        }
        private Nullable<global::System.Int16> _UsedTime;
        partial void OnUsedTimeChanging(Nullable<global::System.Int16> value);
        partial void OnUsedTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_SHSeverity
        {
            get
            {
                return _V_SHSeverity;
            }
            set
            {
                OnV_SHSeverityChanging(value);
                ReportPropertyChanging("V_SHSeverity");
                _V_SHSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_SHSeverity");
                OnV_SHSeverityChanged();
            }
        }
        private Nullable<global::System.Int64> _V_SHSeverity;
        partial void OnV_SHSeverityChanging(Nullable<global::System.Int64> value);
        partial void OnV_SHSeverityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsStop
        {
            get
            {
                return _IsStop;
            }
            set
            {
                OnIsStopChanging(value);
                ReportPropertyChanging("IsStop");
                _IsStop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStop");
                OnIsStopChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsStop;
        partial void OnIsStopChanging(Nullable<global::System.Boolean> value);
        partial void OnIsStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HExmPastHistPrevIllText
        {
            get
            {
                return _HExmPastHistPrevIllText;
            }
            set
            {
                OnHExmPastHistPrevIllTextChanging(value);
                ReportPropertyChanging("HExmPastHistPrevIllText");
                _HExmPastHistPrevIllText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HExmPastHistPrevIllText");
                OnHExmPastHistPrevIllTextChanged();
            }
        }
        private global::System.String _HExmPastHistPrevIllText;
        partial void OnHExmPastHistPrevIllTextChanging(global::System.String value);
        partial void OnHExmPastHistPrevIllTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HExmHabitsText
        {
            get
            {
                return _HExmHabitsText;
            }
            set
            {
                OnHExmHabitsTextChanging(value);
                ReportPropertyChanging("HExmHabitsText");
                _HExmHabitsText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HExmHabitsText");
                OnHExmHabitsTextChanged();
            }
        }
        private global::System.String _HExmHabitsText;
        partial void OnHExmHabitsTextChanging(global::System.String value);
        partial void OnHExmHabitsTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HHistDtm
        {
            get
            {
                return _HHistDtm;
            }
            set
            {
                OnHHistDtmChanging(value);
                ReportPropertyChanging("HHistDtm");
                _HHistDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HHistDtm");
                OnHHistDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _HHistDtm;
        partial void OnHHistDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnHHistDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HExmHistSourceName
        {
            get
            {
                return _HExmHistSourceName;
            }
            set
            {
                OnHExmHistSourceNameChanging(value);
                ReportPropertyChanging("HExmHistSourceName");
                _HExmHistSourceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HExmHistSourceName");
                OnHExmHistSourceNameChanged();
            }
        }
        private global::System.String _HExmHistSourceName;
        partial void OnHExmHistSourceNameChanging(global::System.String value);
        partial void OnHExmHistSourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HExmHistSourceRelPtCode
        {
            get
            {
                return _HExmHistSourceRelPtCode;
            }
            set
            {
                OnHExmHistSourceRelPtCodeChanging(value);
                ReportPropertyChanging("HExmHistSourceRelPtCode");
                _HExmHistSourceRelPtCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HExmHistSourceRelPtCode");
                OnHExmHistSourceRelPtCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _HExmHistSourceRelPtCode;
        partial void OnHExmHistSourceRelPtCodeChanging(Nullable<global::System.Int64> value);
        partial void OnHExmHistSourceRelPtCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship")]
        public refFAMRelationship refFAMRelationship
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refFAMRelationship> refFAMRelationshipReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refFAMRelationship>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refFAMRelationship>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "refFAMRelationship", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex")]
        public refMedHisIndex refMedHisIndex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedHisIndex> refMedHisIndexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedHisIndex>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "refMedHisIndex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="ptId">Initial value of the PtId property.</param>
        /// <param name="ptCode">Initial value of the PtCode property.</param>
        /// <param name="ptQRcode">Initial value of the PtQRcode property.</param>
        /// <param name="dateBecamePt">Initial value of the DateBecamePt property.</param>
        /// <param name="occupationCode">Initial value of the OccupationCode property.</param>
        /// <param name="ptEarliestEntryDtm">Initial value of the PtEarliestEntryDtm property.</param>
        /// <param name="ptLatestEntryDtm">Initial value of the PtLatestEntryDtm property.</param>
        /// <param name="isDeleted">Initial value of the IsDeleted property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Patient CreatePatient(global::System.Int64 ptId, global::System.String ptCode, global::System.String ptQRcode, global::System.DateTime dateBecamePt, global::System.Int64 occupationCode, global::System.DateTime ptEarliestEntryDtm, global::System.DateTime ptLatestEntryDtm, global::System.Boolean isDeleted, global::System.DateTime createdDate)
        {
            Patient patient = new Patient();
            patient.PtId = ptId;
            patient.PtCode = ptCode;
            patient.PtQRcode = ptQRcode;
            patient.DateBecamePt = dateBecamePt;
            patient.OccupationCode = occupationCode;
            patient.PtEarliestEntryDtm = ptEarliestEntryDtm;
            patient.PtLatestEntryDtm = ptLatestEntryDtm;
            patient.IsDeleted = isDeleted;
            patient.CreatedDate = createdDate;
            return patient;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtId
        {
            get
            {
                return _PtId;
            }
            set
            {
                if (_PtId != value)
                {
                    OnPtIdChanging(value);
                    ReportPropertyChanging("PtId");
                    _PtId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtId");
                    OnPtIdChanged();
                }
            }
        }
        private global::System.Int64 _PtId;
        partial void OnPtIdChanging(global::System.Int64 value);
        partial void OnPtIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtCode
        {
            get
            {
                return _PtCode;
            }
            set
            {
                OnPtCodeChanging(value);
                ReportPropertyChanging("PtCode");
                _PtCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtCode");
                OnPtCodeChanged();
            }
        }
        private global::System.String _PtCode;
        partial void OnPtCodeChanging(global::System.String value);
        partial void OnPtCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtBarCode
        {
            get
            {
                return _PtBarCode;
            }
            set
            {
                OnPtBarCodeChanging(value);
                ReportPropertyChanging("PtBarCode");
                _PtBarCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtBarCode");
                OnPtBarCodeChanged();
            }
        }
        private global::System.String _PtBarCode;
        partial void OnPtBarCodeChanging(global::System.String value);
        partial void OnPtBarCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtQRcode
        {
            get
            {
                return _PtQRcode;
            }
            set
            {
                OnPtQRcodeChanging(value);
                ReportPropertyChanging("PtQRcode");
                _PtQRcode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtQRcode");
                OnPtQRcodeChanged();
            }
        }
        private global::System.String _PtQRcode;
        partial void OnPtQRcodeChanging(global::System.String value);
        partial void OnPtQRcodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtUniversalHealthNum
        {
            get
            {
                return _PtUniversalHealthNum;
            }
            set
            {
                OnPtUniversalHealthNumChanging(value);
                ReportPropertyChanging("PtUniversalHealthNum");
                _PtUniversalHealthNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtUniversalHealthNum");
                OnPtUniversalHealthNumChanged();
            }
        }
        private global::System.String _PtUniversalHealthNum;
        partial void OnPtUniversalHealthNumChanging(global::System.String value);
        partial void OnPtUniversalHealthNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateBecamePt
        {
            get
            {
                return _DateBecamePt;
            }
            set
            {
                OnDateBecamePtChanging(value);
                ReportPropertyChanging("DateBecamePt");
                _DateBecamePt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateBecamePt");
                OnDateBecamePtChanged();
            }
        }
        private global::System.DateTime _DateBecamePt;
        partial void OnDateBecamePtChanging(global::System.DateTime value);
        partial void OnDateBecamePtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtNotes
        {
            get
            {
                return _PtNotes;
            }
            set
            {
                OnPtNotesChanging(value);
                ReportPropertyChanging("PtNotes");
                _PtNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtNotes");
                OnPtNotesChanged();
            }
        }
        private global::System.String _PtNotes;
        partial void OnPtNotesChanging(global::System.String value);
        partial void OnPtNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OccupationCode
        {
            get
            {
                return _OccupationCode;
            }
            set
            {
                OnOccupationCodeChanging(value);
                ReportPropertyChanging("OccupationCode");
                _OccupationCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OccupationCode");
                OnOccupationCodeChanged();
            }
        }
        private global::System.Int64 _OccupationCode;
        partial void OnOccupationCodeChanging(global::System.Int64 value);
        partial void OnOccupationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FContactFullName
        {
            get
            {
                return _FContactFullName;
            }
            set
            {
                OnFContactFullNameChanging(value);
                ReportPropertyChanging("FContactFullName");
                _FContactFullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FContactFullName");
                OnFContactFullNameChanged();
            }
        }
        private global::System.String _FContactFullName;
        partial void OnFContactFullNameChanging(global::System.String value);
        partial void OnFContactFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrRelationshipCode
        {
            get
            {
                return _FAMMbrRelationshipCode;
            }
            set
            {
                OnFAMMbrRelationshipCodeChanging(value);
                ReportPropertyChanging("FAMMbrRelationshipCode");
                _FAMMbrRelationshipCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAMMbrRelationshipCode");
                OnFAMMbrRelationshipCodeChanged();
            }
        }
        private global::System.String _FAMMbrRelationshipCode;
        partial void OnFAMMbrRelationshipCodeChanging(global::System.String value);
        partial void OnFAMMbrRelationshipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FContactAddress
        {
            get
            {
                return _FContactAddress;
            }
            set
            {
                OnFContactAddressChanging(value);
                ReportPropertyChanging("FContactAddress");
                _FContactAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FContactAddress");
                OnFContactAddressChanged();
            }
        }
        private global::System.String _FContactAddress;
        partial void OnFContactAddressChanging(global::System.String value);
        partial void OnFContactAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FContactHomePhone
        {
            get
            {
                return _FContactHomePhone;
            }
            set
            {
                OnFContactHomePhoneChanging(value);
                ReportPropertyChanging("FContactHomePhone");
                _FContactHomePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FContactHomePhone");
                OnFContactHomePhoneChanged();
            }
        }
        private global::System.String _FContactHomePhone;
        partial void OnFContactHomePhoneChanging(global::System.String value);
        partial void OnFContactHomePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FContactBusinessPhone
        {
            get
            {
                return _FContactBusinessPhone;
            }
            set
            {
                OnFContactBusinessPhoneChanging(value);
                ReportPropertyChanging("FContactBusinessPhone");
                _FContactBusinessPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FContactBusinessPhone");
                OnFContactBusinessPhoneChanged();
            }
        }
        private global::System.String _FContactBusinessPhone;
        partial void OnFContactBusinessPhoneChanging(global::System.String value);
        partial void OnFContactBusinessPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FContactCellPhone
        {
            get
            {
                return _FContactCellPhone;
            }
            set
            {
                OnFContactCellPhoneChanging(value);
                ReportPropertyChanging("FContactCellPhone");
                _FContactCellPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FContactCellPhone");
                OnFContactCellPhoneChanged();
            }
        }
        private global::System.String _FContactCellPhone;
        partial void OnFContactCellPhoneChanging(global::System.String value);
        partial void OnFContactCellPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAlternateContact
        {
            get
            {
                return _FAlternateContact;
            }
            set
            {
                OnFAlternateContactChanging(value);
                ReportPropertyChanging("FAlternateContact");
                _FAlternateContact = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAlternateContact");
                OnFAlternateContactChanged();
            }
        }
        private global::System.String _FAlternateContact;
        partial void OnFAlternateContactChanging(global::System.String value);
        partial void OnFAlternateContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAlternatePhone
        {
            get
            {
                return _FAlternatePhone;
            }
            set
            {
                OnFAlternatePhoneChanging(value);
                ReportPropertyChanging("FAlternatePhone");
                _FAlternatePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAlternatePhone");
                OnFAlternatePhoneChanged();
            }
        }
        private global::System.String _FAlternatePhone;
        partial void OnFAlternatePhoneChanging(global::System.String value);
        partial void OnFAlternatePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BloodTypeID
        {
            get
            {
                return _BloodTypeID;
            }
            set
            {
                OnBloodTypeIDChanging(value);
                ReportPropertyChanging("BloodTypeID");
                _BloodTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodTypeID");
                OnBloodTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BloodTypeID;
        partial void OnBloodTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnBloodTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PtEarliestEntryDtm
        {
            get
            {
                return _PtEarliestEntryDtm;
            }
            set
            {
                OnPtEarliestEntryDtmChanging(value);
                ReportPropertyChanging("PtEarliestEntryDtm");
                _PtEarliestEntryDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtEarliestEntryDtm");
                OnPtEarliestEntryDtmChanged();
            }
        }
        private global::System.DateTime _PtEarliestEntryDtm;
        partial void OnPtEarliestEntryDtmChanging(global::System.DateTime value);
        partial void OnPtEarliestEntryDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PtLatestEntryDtm
        {
            get
            {
                return _PtLatestEntryDtm;
            }
            set
            {
                OnPtLatestEntryDtmChanging(value);
                ReportPropertyChanging("PtLatestEntryDtm");
                _PtLatestEntryDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtLatestEntryDtm");
                OnPtLatestEntryDtmChanged();
            }
        }
        private global::System.DateTime _PtLatestEntryDtm;
        partial void OnPtLatestEntryDtmChanging(global::System.DateTime value);
        partial void OnPtLatestEntryDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeleted
        {
            get
            {
                return _IsDeleted;
            }
            set
            {
                OnIsDeletedChanging(value);
                ReportPropertyChanging("IsDeleted");
                _IsDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeleted");
                OnIsDeletedChanged();
            }
        }
        private global::System.Boolean _IsDeleted;
        partial void OnIsDeletedChanging(global::System.Boolean value);
        partial void OnIsDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private global::System.String _LastUpdBy;
        partial void OnLastUpdByChanging(global::System.String value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_Patient", "NetworkGuestAccount")]
        public EntityCollection<NetworkGuestAccount> NetworkGuestAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Patient", "NetworkGuestAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Patient", "NetworkGuestAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Patient_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Patient_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_Patient_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_Patient_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_refBloodType", "refBloodType")]
        public refBloodType refBloodType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Patient_refBloodType", "refBloodType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Patient_refBloodType", "refBloodType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refBloodType> refBloodTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refBloodType>("SureHisModel.FK_Patient_refBloodType", "refBloodType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refBloodType>("SureHisModel.FK_Patient_refBloodType", "refBloodType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_refCareerMOH", "refCareerMOH")]
        public refCareerMOH refCareerMOH
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_Patient_refCareerMOH", "refCareerMOH").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_Patient_refCareerMOH", "refCareerMOH").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCareerMOH> refCareerMOHReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCareerMOH>("SureHisModel.FK_Patient_refCareerMOH", "refCareerMOH");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCareerMOH>("SureHisModel.FK_Patient_refCareerMOH", "refCareerMOH", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAddressHistory_Patient", "PatientAddressHistory")]
        public EntityCollection<PatientAddressHistory> PatientAddressHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAddressHistory>("SureHisModel.FK_PatientAddressHistory_Patient", "PatientAddressHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAddressHistory>("SureHisModel.FK_PatientAddressHistory_Patient", "PatientAddressHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAddressHistory_Patient_02", "PatientAddressHistory")]
        public EntityCollection<PatientAddressHistory> PatientAddressHistory1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAddressHistory>("SureHisModel.FK_PatientAddressHistory_Patient_02", "PatientAddressHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAddressHistory>("SureHisModel.FK_PatientAddressHistory_Patient_02", "PatientAddressHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAdmission_Patient", "PatientAdmission")]
        public EntityCollection<PatientAdmission> PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAdmission>("SureHisModel.FK_PatientAdmission_Patient", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAdmission>("SureHisModel.FK_PatientAdmission_Patient", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientClassHistory_Patient", "PatientClassHistory")]
        public EntityCollection<PatientClassHistory> PatientClassHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientClassHistory>("SureHisModel.FK_PatientClassHistory_Patient", "PatientClassHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientClassHistory>("SureHisModel.FK_PatientClassHistory_Patient", "PatientClassHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientPVID_Patient", "PatientPVID")]
        public EntityCollection<PatientPVID> PatientPVID
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientPVID>("SureHisModel.FK_PatientPVID_Patient", "PatientPVID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientPVID>("SureHisModel.FK_PatientPVID_Patient", "PatientPVID", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_Patient", "PatientDiagnosticImaging")]
        public EntityCollection<PatientDiagnosticImaging> PatientDiagnosticImaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_Patient", "PatientDiagnosticImaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientDiagnosticImaging>("SureHisModel.FK_PatientRadiology_Patient", "PatientDiagnosticImaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_Patient", "PatientSpecimen")]
        public EntityCollection<PatientSpecimen> PatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_Patient", "PatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_Patient", "PatientSpecimen", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_Patient", "PatientTransaction")]
        public EntityCollection<PatientTransaction> PatientTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_Patient", "PatientTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_Patient", "PatientTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtMedRecord_Patient", "PatientMedRecord")]
        public EntityCollection<PatientMedRecord> PatientMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientMedRecord>("SureHisModel.FK_PtMedRecord_Patient", "PatientMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientMedRecord>("SureHisModel.FK_PtMedRecord_Patient", "PatientMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegistrationInfo_Patient", "RegistrationInfo")]
        public EntityCollection<RegistrationInfo> RegistrationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistrationInfo>("SureHisModel.FK_RegistrationInfo_Patient", "RegistrationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistrationInfo>("SureHisModel.FK_RegistrationInfo_Patient", "RegistrationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkPlace_Patient", "WorkPlace")]
        public EntityCollection<WorkPlace> WorkPlace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkPlace>("SureHisModel.FK_WorkPlace_Patient", "WorkPlace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkPlace>("SureHisModel.FK_WorkPlace_Patient", "WorkPlace", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientAddressHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientAddressHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientAddressHistory object.
        /// </summary>
        /// <param name="ptAddHisID">Initial value of the PtAddHisID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="provinceID">Initial value of the ProvinceID property.</param>
        public static PatientAddressHistory CreatePatientAddressHistory(global::System.Int64 ptAddHisID, global::System.Int64 ptID, global::System.DateTime modifiedDate, global::System.String provinceID)
        {
            PatientAddressHistory patientAddressHistory = new PatientAddressHistory();
            patientAddressHistory.PtAddHisID = ptAddHisID;
            patientAddressHistory.PtID = ptID;
            patientAddressHistory.ModifiedDate = modifiedDate;
            patientAddressHistory.ProvinceID = provinceID;
            return patientAddressHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtAddHisID
        {
            get
            {
                return _PtAddHisID;
            }
            set
            {
                if (_PtAddHisID != value)
                {
                    OnPtAddHisIDChanging(value);
                    ReportPropertyChanging("PtAddHisID");
                    _PtAddHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtAddHisID");
                    OnPtAddHisIDChanged();
                }
            }
        }
        private global::System.Int64 _PtAddHisID;
        partial void OnPtAddHisIDChanging(global::System.Int64 value);
        partial void OnPtAddHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                if (_PtID != value)
                {
                    OnPtIDChanging(value);
                    ReportPropertyChanging("PtID");
                    _PtID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtID");
                    OnPtIDChanged();
                }
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                if (_ModifiedDate != value)
                {
                    OnModifiedDateChanging(value);
                    ReportPropertyChanging("ModifiedDate");
                    _ModifiedDate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModifiedDate");
                    OnModifiedDateChanged();
                }
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProvinceID
        {
            get
            {
                return _ProvinceID;
            }
            set
            {
                OnProvinceIDChanging(value);
                ReportPropertyChanging("ProvinceID");
                _ProvinceID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProvinceID");
                OnProvinceIDChanged();
            }
        }
        private global::System.String _ProvinceID;
        partial void OnProvinceIDChanging(global::System.String value);
        partial void OnProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHStreetAddress
        {
            get
            {
                return _PAHStreetAddress;
            }
            set
            {
                OnPAHStreetAddressChanging(value);
                ReportPropertyChanging("PAHStreetAddress");
                _PAHStreetAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHStreetAddress");
                OnPAHStreetAddressChanged();
            }
        }
        private global::System.String _PAHStreetAddress;
        partial void OnPAHStreetAddressChanging(global::System.String value);
        partial void OnPAHStreetAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHSurburb
        {
            get
            {
                return _PAHSurburb;
            }
            set
            {
                OnPAHSurburbChanging(value);
                ReportPropertyChanging("PAHSurburb");
                _PAHSurburb = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHSurburb");
                OnPAHSurburbChanged();
            }
        }
        private global::System.String _PAHSurburb;
        partial void OnPAHSurburbChanging(global::System.String value);
        partial void OnPAHSurburbChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHPhoneNumber
        {
            get
            {
                return _PAHPhoneNumber;
            }
            set
            {
                OnPAHPhoneNumberChanging(value);
                ReportPropertyChanging("PAHPhoneNumber");
                _PAHPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHPhoneNumber");
                OnPAHPhoneNumberChanged();
            }
        }
        private global::System.String _PAHPhoneNumber;
        partial void OnPAHPhoneNumberChanging(global::System.String value);
        partial void OnPAHPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHCellPhoneNumber
        {
            get
            {
                return _PAHCellPhoneNumber;
            }
            set
            {
                OnPAHCellPhoneNumberChanging(value);
                ReportPropertyChanging("PAHCellPhoneNumber");
                _PAHCellPhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHCellPhoneNumber");
                OnPAHCellPhoneNumberChanged();
            }
        }
        private global::System.String _PAHCellPhoneNumber;
        partial void OnPAHCellPhoneNumberChanging(global::System.String value);
        partial void OnPAHCellPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHEmailAddress
        {
            get
            {
                return _PAHEmailAddress;
            }
            set
            {
                OnPAHEmailAddressChanging(value);
                ReportPropertyChanging("PAHEmailAddress");
                _PAHEmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHEmailAddress");
                OnPAHEmailAddressChanged();
            }
        }
        private global::System.String _PAHEmailAddress;
        partial void OnPAHEmailAddressChanging(global::System.String value);
        partial void OnPAHEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PAHEmployer
        {
            get
            {
                return _PAHEmployer;
            }
            set
            {
                OnPAHEmployerChanging(value);
                ReportPropertyChanging("PAHEmployer");
                _PAHEmployer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PAHEmployer");
                OnPAHEmployerChanged();
            }
        }
        private global::System.String _PAHEmployer;
        partial void OnPAHEmployerChanging(global::System.String value);
        partial void OnPAHEmployerChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAddressHistory_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAddressHistory_Patient_02", "Patient")]
        public Patient Patient1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient_02", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient_02", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> Patient1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient_02", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientAddressHistory_Patient_02", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientAdmission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientAdmission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientAdmission object.
        /// </summary>
        /// <param name="admID">Initial value of the AdmID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="hCFEncEncAdmDtm">Initial value of the HCFEncEncAdmDtm property.</param>
        /// <param name="regMethodID">Initial value of the RegMethodID property.</param>
        /// <param name="frontDeskEmpID">Initial value of the FrontDeskEmpID property.</param>
        /// <param name="hCFERecAdmTypeID">Initial value of the HCFERecAdmTypeID property.</param>
        /// <param name="v_AdmPriority">Initial value of the V_AdmPriority property.</param>
        /// <param name="isHCFEncReasonVisit">Initial value of the isHCFEncReasonVisit property.</param>
        public static PatientAdmission CreatePatientAdmission(global::System.Int64 admID, global::System.Int64 ptID, global::System.DateTime hCFEncEncAdmDtm, global::System.String regMethodID, global::System.Int64 frontDeskEmpID, global::System.Int64 hCFERecAdmTypeID, global::System.Int64 v_AdmPriority, global::System.Byte isHCFEncReasonVisit)
        {
            PatientAdmission patientAdmission = new PatientAdmission();
            patientAdmission.AdmID = admID;
            patientAdmission.PtID = ptID;
            patientAdmission.HCFEncEncAdmDtm = hCFEncEncAdmDtm;
            patientAdmission.RegMethodID = regMethodID;
            patientAdmission.FrontDeskEmpID = frontDeskEmpID;
            patientAdmission.HCFERecAdmTypeID = hCFERecAdmTypeID;
            patientAdmission.V_AdmPriority = v_AdmPriority;
            patientAdmission.isHCFEncReasonVisit = isHCFEncReasonVisit;
            return patientAdmission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                if (_AdmID != value)
                {
                    OnAdmIDChanging(value);
                    ReportPropertyChanging("AdmID");
                    _AdmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AdmID");
                    OnAdmIDChanged();
                }
            }
        }
        private global::System.Int64 _AdmID;
        partial void OnAdmIDChanging(global::System.Int64 value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCEpiIDCode
        {
            get
            {
                return _HCEpiIDCode;
            }
            set
            {
                OnHCEpiIDCodeChanging(value);
                ReportPropertyChanging("HCEpiIDCode");
                _HCEpiIDCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCEpiIDCode");
                OnHCEpiIDCodeChanged();
            }
        }
        private global::System.String _HCEpiIDCode;
        partial void OnHCEpiIDCodeChanging(global::System.String value);
        partial void OnHCEpiIDCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HCFEncEncAdmDtm
        {
            get
            {
                return _HCFEncEncAdmDtm;
            }
            set
            {
                OnHCFEncEncAdmDtmChanging(value);
                ReportPropertyChanging("HCFEncEncAdmDtm");
                _HCFEncEncAdmDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFEncEncAdmDtm");
                OnHCFEncEncAdmDtmChanged();
            }
        }
        private global::System.DateTime _HCFEncEncAdmDtm;
        partial void OnHCFEncEncAdmDtmChanging(global::System.DateTime value);
        partial void OnHCFEncEncAdmDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HCFEncEncDisDtm
        {
            get
            {
                return _HCFEncEncDisDtm;
            }
            set
            {
                OnHCFEncEncDisDtmChanging(value);
                ReportPropertyChanging("HCFEncEncDisDtm");
                _HCFEncEncDisDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFEncEncDisDtm");
                OnHCFEncEncDisDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _HCFEncEncDisDtm;
        partial void OnHCFEncEncDisDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnHCFEncEncDisDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtClassID
        {
            get
            {
                return _PtClassID;
            }
            set
            {
                OnPtClassIDChanging(value);
                ReportPropertyChanging("PtClassID");
                _PtClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtClassID");
                OnPtClassIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtClassID;
        partial void OnPtClassIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AgencyID
        {
            get
            {
                return _AgencyID;
            }
            set
            {
                OnAgencyIDChanging(value);
                ReportPropertyChanging("AgencyID");
                _AgencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgencyID");
                OnAgencyIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AgencyID;
        partial void OnAgencyIDChanging(Nullable<global::System.Int64> value);
        partial void OnAgencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AgencyDoctor
        {
            get
            {
                return _AgencyDoctor;
            }
            set
            {
                OnAgencyDoctorChanging(value);
                ReportPropertyChanging("AgencyDoctor");
                _AgencyDoctor = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AgencyDoctor");
                OnAgencyDoctorChanged();
            }
        }
        private global::System.String _AgencyDoctor;
        partial void OnAgencyDoctorChanging(global::System.String value);
        partial void OnAgencyDoctorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> IAdmReferralTypeCode
        {
            get
            {
                return _IAdmReferralTypeCode;
            }
            set
            {
                OnIAdmReferralTypeCodeChanging(value);
                ReportPropertyChanging("IAdmReferralTypeCode");
                _IAdmReferralTypeCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IAdmReferralTypeCode");
                OnIAdmReferralTypeCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _IAdmReferralTypeCode;
        partial void OnIAdmReferralTypeCodeChanging(Nullable<global::System.Int64> value);
        partial void OnIAdmReferralTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IAdmReferProvName
        {
            get
            {
                return _IAdmReferProvName;
            }
            set
            {
                OnIAdmReferProvNameChanging(value);
                ReportPropertyChanging("IAdmReferProvName");
                _IAdmReferProvName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IAdmReferProvName");
                OnIAdmReferProvNameChanged();
            }
        }
        private global::System.String _IAdmReferProvName;
        partial void OnIAdmReferProvNameChanging(global::System.String value);
        partial void OnIAdmReferProvNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferralICD
        {
            get
            {
                return _ReferralICD;
            }
            set
            {
                OnReferralICDChanging(value);
                ReportPropertyChanging("ReferralICD");
                _ReferralICD = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferralICD");
                OnReferralICDChanged();
            }
        }
        private global::System.String _ReferralICD;
        partial void OnReferralICDChanging(global::System.String value);
        partial void OnReferralICDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegMethodID
        {
            get
            {
                return _RegMethodID;
            }
            set
            {
                OnRegMethodIDChanging(value);
                ReportPropertyChanging("RegMethodID");
                _RegMethodID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RegMethodID");
                OnRegMethodIDChanged();
            }
        }
        private global::System.String _RegMethodID;
        partial void OnRegMethodIDChanging(global::System.String value);
        partial void OnRegMethodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FrontDeskEmpID
        {
            get
            {
                return _FrontDeskEmpID;
            }
            set
            {
                OnFrontDeskEmpIDChanging(value);
                ReportPropertyChanging("FrontDeskEmpID");
                _FrontDeskEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FrontDeskEmpID");
                OnFrontDeskEmpIDChanged();
            }
        }
        private global::System.Int64 _FrontDeskEmpID;
        partial void OnFrontDeskEmpIDChanging(global::System.Int64 value);
        partial void OnFrontDeskEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PractitionerID
        {
            get
            {
                return _PractitionerID;
            }
            set
            {
                OnPractitionerIDChanging(value);
                ReportPropertyChanging("PractitionerID");
                _PractitionerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PractitionerID");
                OnPractitionerIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PractitionerID;
        partial void OnPractitionerIDChanging(Nullable<global::System.Int64> value);
        partial void OnPractitionerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_EmergencyMedStatus
        {
            get
            {
                return _V_EmergencyMedStatus;
            }
            set
            {
                OnV_EmergencyMedStatusChanging(value);
                ReportPropertyChanging("V_EmergencyMedStatus");
                _V_EmergencyMedStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_EmergencyMedStatus");
                OnV_EmergencyMedStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_EmergencyMedStatus;
        partial void OnV_EmergencyMedStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_EmergencyMedStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEncReasonVisitCode
        {
            get
            {
                return _HCFEncReasonVisitCode;
            }
            set
            {
                OnHCFEncReasonVisitCodeChanging(value);
                ReportPropertyChanging("HCFEncReasonVisitCode");
                _HCFEncReasonVisitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEncReasonVisitCode");
                OnHCFEncReasonVisitCodeChanged();
            }
        }
        private global::System.String _HCFEncReasonVisitCode;
        partial void OnHCFEncReasonVisitCodeChanging(global::System.String value);
        partial void OnHCFEncReasonVisitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCFERecAdmTypeID
        {
            get
            {
                return _HCFERecAdmTypeID;
            }
            set
            {
                OnHCFERecAdmTypeIDChanging(value);
                ReportPropertyChanging("HCFERecAdmTypeID");
                _HCFERecAdmTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCFERecAdmTypeID");
                OnHCFERecAdmTypeIDChanged();
            }
        }
        private global::System.Int64 _HCFERecAdmTypeID;
        partial void OnHCFERecAdmTypeIDChanging(global::System.Int64 value);
        partial void OnHCFERecAdmTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PreDiagnosis
        {
            get
            {
                return _PreDiagnosis;
            }
            set
            {
                OnPreDiagnosisChanging(value);
                ReportPropertyChanging("PreDiagnosis");
                _PreDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PreDiagnosis");
                OnPreDiagnosisChanged();
            }
        }
        private global::System.String _PreDiagnosis;
        partial void OnPreDiagnosisChanging(global::System.String value);
        partial void OnPreDiagnosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DxID
        {
            get
            {
                return _DxID;
            }
            set
            {
                OnDxIDChanging(value);
                ReportPropertyChanging("DxID");
                _DxID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DxID");
                OnDxIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DxID;
        partial void OnDxIDChanging(Nullable<global::System.Int64> value);
        partial void OnDxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isInPtTX
        {
            get
            {
                return _isInPtTX;
            }
            set
            {
                OnisInPtTXChanging(value);
                ReportPropertyChanging("isInPtTX");
                _isInPtTX = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isInPtTX");
                OnisInPtTXChanged();
            }
        }
        private Nullable<global::System.Boolean> _isInPtTX;
        partial void OnisInPtTXChanging(Nullable<global::System.Boolean> value);
        partial void OnisInPtTXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_AdmProcStatus
        {
            get
            {
                return _V_AdmProcStatus;
            }
            set
            {
                OnV_AdmProcStatusChanging(value);
                ReportPropertyChanging("V_AdmProcStatus");
                _V_AdmProcStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AdmProcStatus");
                OnV_AdmProcStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_AdmProcStatus;
        partial void OnV_AdmProcStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_AdmProcStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_AdmPriority
        {
            get
            {
                return _V_AdmPriority;
            }
            set
            {
                OnV_AdmPriorityChanging(value);
                ReportPropertyChanging("V_AdmPriority");
                _V_AdmPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AdmPriority");
                OnV_AdmPriorityChanged();
            }
        }
        private global::System.Int64 _V_AdmPriority;
        partial void OnV_AdmPriorityChanging(global::System.Int64 value);
        partial void OnV_AdmPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte isHCFEncReasonVisit
        {
            get
            {
                return _isHCFEncReasonVisit;
            }
            set
            {
                OnisHCFEncReasonVisitChanging(value);
                ReportPropertyChanging("isHCFEncReasonVisit");
                _isHCFEncReasonVisit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isHCFEncReasonVisit");
                OnisHCFEncReasonVisitChanged();
            }
        }
        private global::System.Byte _isHCFEncReasonVisit;
        partial void OnisHCFEncReasonVisitChanging(global::System.Byte value);
        partial void OnisHCFEncReasonVisitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEncNotes
        {
            get
            {
                return _HCFEncNotes;
            }
            set
            {
                OnHCFEncNotesChanging(value);
                ReportPropertyChanging("HCFEncNotes");
                _HCFEncNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEncNotes");
                OnHCFEncNotesChanged();
            }
        }
        private global::System.String _HCFEncNotes;
        partial void OnHCFEncNotesChanging(global::System.String value);
        partial void OnHCFEncNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NHITransDate
        {
            get
            {
                return _NHITransDate;
            }
            set
            {
                OnNHITransDateChanging(value);
                ReportPropertyChanging("NHITransDate");
                _NHITransDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NHITransDate");
                OnNHITransDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NHITransDate;
        partial void OnNHITransDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNHITransDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_NHITransType
        {
            get
            {
                return _V_NHITransType;
            }
            set
            {
                OnV_NHITransTypeChanging(value);
                ReportPropertyChanging("V_NHITransType");
                _V_NHITransType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_NHITransType");
                OnV_NHITransTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_NHITransType;
        partial void OnV_NHITransTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_NHITransTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ReferHosID
        {
            get
            {
                return _ReferHosID;
            }
            set
            {
                OnReferHosIDChanging(value);
                ReportPropertyChanging("ReferHosID");
                _ReferHosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReferHosID");
                OnReferHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ReferHosID;
        partial void OnReferHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnReferHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HIReferDiagnosis
        {
            get
            {
                return _HIReferDiagnosis;
            }
            set
            {
                OnHIReferDiagnosisChanging(value);
                ReportPropertyChanging("HIReferDiagnosis");
                _HIReferDiagnosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HIReferDiagnosis");
                OnHIReferDiagnosisChanged();
            }
        }
        private global::System.String _HIReferDiagnosis;
        partial void OnHIReferDiagnosisChanging(global::System.String value);
        partial void OnHIReferDiagnosisChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AttachedDoc_PatientAdmission", "AttachedDoc")]
        public EntityCollection<AttachedDoc> AttachedDoc
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AttachedDoc>("SureHisModel.FK_AttachedDoc_PatientAdmission", "AttachedDoc");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AttachedDoc>("SureHisModel.FK_AttachedDoc_PatientAdmission", "AttachedDoc", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DeathSituationInfo_ReceivePatient", "DeathSituationInfo")]
        public EntityCollection<DeathSituationInfo> DeathSituationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DeathSituationInfo>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "DeathSituationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DeathSituationInfo>("SureHisModel.FK_DeathSituationInfo_ReceivePatient", "DeathSituationInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthCareQueue_PatientAdmission", "HealthCareQueue")]
        public EntityCollection<HealthCareQueue> HealthCareQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HealthCareQueue>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "HealthCareQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HealthCareQueue>("SureHisModel.FK_HealthCareQueue_PatientAdmission", "HealthCareQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIAdmission_PatientAdmission", "HIAdmission")]
        public EntityCollection<HIAdmission> HIAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HIAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "HIAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HIAdmission>("SureHisModel.FK_HIAdmission_PatientAdmission", "HIAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalClaimService_PatientAdmission", "MedicalClaimService")]
        public EntityCollection<MedicalClaimService> MedicalClaimService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "MedicalClaimService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalClaimService>("SureHisModel.FK_MedicalClaimService_PatientAdmission", "MedicalClaimService", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalEncounter_PatientAdmission", "MedicalEncounter")]
        public EntityCollection<MedicalEncounter> MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalEncounter>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalEncounter>("SureHisModel.FK_MedicalEncounter_PatientAdmission", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalReq_PatientAdmission", "ParaClinicalReq")]
        public EntityCollection<ParaClinicalReq> ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ParaClinicalReq>("SureHisModel.FK_ParaClinicalReq_PatientAdmission", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAdmission_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAdmission_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAdmission_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientAdmission_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientAdmission_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAdmission_PatientClassification", "PatientClassification")]
        public PatientClassification PatientClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientClassification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientClassification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientClassification> PatientClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientClassification>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientAdmission", "PatientCommonMedRecord")]
        public EntityCollection<PatientCommonMedRecord> PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientCommonMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientCommonMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_PatientAdmission", "PatientTransaction")]
        public EntityCollection<PatientTransaction> PatientTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_reDiagnosis", "refDiagnosis")]
        public refDiagnosis refDiagnosis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDiagnosis>("SureHisModel.FK_PtAdmission_reDiagnosis", "refDiagnosis").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDiagnosis>("SureHisModel.FK_PtAdmission_reDiagnosis", "refDiagnosis").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDiagnosis> refDiagnosisReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDiagnosis>("SureHisModel.FK_PtAdmission_reDiagnosis", "refDiagnosis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDiagnosis>("SureHisModel.FK_PtAdmission_reDiagnosis", "refDiagnosis", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_refAdmissionType", "refAdmissionType")]
        public refAdmissionType refAdmissionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_PtAdmission_refAdmissionType", "refAdmissionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_PtAdmission_refAdmissionType", "refAdmissionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAdmissionType> refAdmissionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmissionType>("SureHisModel.FK_PtAdmission_refAdmissionType", "refAdmissionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAdmissionType>("SureHisModel.FK_PtAdmission_refAdmissionType", "refAdmissionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_refAdmReferralType", "refAdmReferralType")]
        public refAdmReferralType refAdmReferralType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_PtAdmission_refAdmReferralType", "refAdmReferralType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_PtAdmission_refAdmReferralType", "refAdmReferralType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAdmReferralType> refAdmReferralTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAdmReferralType>("SureHisModel.FK_PtAdmission_refAdmReferralType", "refAdmReferralType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAdmReferralType>("SureHisModel.FK_PtAdmission_refAdmReferralType", "refAdmReferralType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientBed")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientBed : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientBed object.
        /// </summary>
        /// <param name="ptBedID">Initial value of the PtBedID property.</param>
        /// <param name="v_PtBedType">Initial value of the V_PtBedType property.</param>
        public static PatientBed CreatePatientBed(global::System.Int64 ptBedID, global::System.Int64 v_PtBedType)
        {
            PatientBed patientBed = new PatientBed();
            patientBed.PtBedID = ptBedID;
            patientBed.V_PtBedType = v_PtBedType;
            return patientBed;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtBedID
        {
            get
            {
                return _PtBedID;
            }
            set
            {
                if (_PtBedID != value)
                {
                    OnPtBedIDChanging(value);
                    ReportPropertyChanging("PtBedID");
                    _PtBedID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtBedID");
                    OnPtBedIDChanged();
                }
            }
        }
        private global::System.Int64 _PtBedID;
        partial void OnPtBedIDChanging(global::System.Int64 value);
        partial void OnPtBedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtBedCode
        {
            get
            {
                return _PtBedCode;
            }
            set
            {
                OnPtBedCodeChanging(value);
                ReportPropertyChanging("PtBedCode");
                _PtBedCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtBedCode");
                OnPtBedCodeChanged();
            }
        }
        private global::System.String _PtBedCode;
        partial void OnPtBedCodeChanging(global::System.String value);
        partial void OnPtBedCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_PtBedType
        {
            get
            {
                return _V_PtBedType;
            }
            set
            {
                OnV_PtBedTypeChanging(value);
                ReportPropertyChanging("V_PtBedType");
                _V_PtBedType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PtBedType");
                OnV_PtBedTypeChanged();
            }
        }
        private global::System.Int64 _V_PtBedType;
        partial void OnV_PtBedTypeChanging(global::System.Int64 value);
        partial void OnV_PtBedTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_Material
        {
            get
            {
                return _V_Material;
            }
            set
            {
                OnV_MaterialChanging(value);
                ReportPropertyChanging("V_Material");
                _V_Material = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_Material");
                OnV_MaterialChanged();
            }
        }
        private Nullable<global::System.Int64> _V_Material;
        partial void OnV_MaterialChanging(Nullable<global::System.Int64> value);
        partial void OnV_MaterialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BedInRoom_PatientBed", "BedInRoom")]
        public EntityCollection<BedInRoom> BedInRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BedInRoom>("SureHisModel.FK_BedInRoom_PatientBed", "BedInRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BedInRoom>("SureHisModel.FK_BedInRoom_PatientBed", "BedInRoom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtBedFeatures_PtBed", "PatientBedFeatures")]
        public EntityCollection<PatientBedFeatures> PatientBedFeatures
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientBedFeatures>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBedFeatures");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientBedFeatures>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBedFeatures", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientBedFeatures")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientBedFeatures : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientBedFeatures object.
        /// </summary>
        /// <param name="ptBedID">Initial value of the PtBedID property.</param>
        /// <param name="ptBedFeatureID">Initial value of the PtBedFeatureID property.</param>
        /// <param name="v_PatientBedFeature">Initial value of the V_PatientBedFeature property.</param>
        public static PatientBedFeatures CreatePatientBedFeatures(global::System.Int64 ptBedID, global::System.Int64 ptBedFeatureID, global::System.Int64 v_PatientBedFeature)
        {
            PatientBedFeatures patientBedFeatures = new PatientBedFeatures();
            patientBedFeatures.PtBedID = ptBedID;
            patientBedFeatures.PtBedFeatureID = ptBedFeatureID;
            patientBedFeatures.V_PatientBedFeature = v_PatientBedFeature;
            return patientBedFeatures;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtBedID
        {
            get
            {
                return _PtBedID;
            }
            set
            {
                OnPtBedIDChanging(value);
                ReportPropertyChanging("PtBedID");
                _PtBedID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtBedID");
                OnPtBedIDChanged();
            }
        }
        private global::System.Int64 _PtBedID;
        partial void OnPtBedIDChanging(global::System.Int64 value);
        partial void OnPtBedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtBedFeatureID
        {
            get
            {
                return _PtBedFeatureID;
            }
            set
            {
                if (_PtBedFeatureID != value)
                {
                    OnPtBedFeatureIDChanging(value);
                    ReportPropertyChanging("PtBedFeatureID");
                    _PtBedFeatureID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtBedFeatureID");
                    OnPtBedFeatureIDChanged();
                }
            }
        }
        private global::System.Int64 _PtBedFeatureID;
        partial void OnPtBedFeatureIDChanging(global::System.Int64 value);
        partial void OnPtBedFeatureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_PatientBedFeature
        {
            get
            {
                return _V_PatientBedFeature;
            }
            set
            {
                OnV_PatientBedFeatureChanging(value);
                ReportPropertyChanging("V_PatientBedFeature");
                _V_PatientBedFeature = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PatientBedFeature");
                OnV_PatientBedFeatureChanged();
            }
        }
        private global::System.Int64 _V_PatientBedFeature;
        partial void OnV_PatientBedFeatureChanging(global::System.Int64 value);
        partial void OnV_PatientBedFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtBedFeatures_PtBed", "PatientBed")]
        public PatientBed PatientBed
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBed").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBed").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientBed> PatientBedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientBed>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBed");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientBed>("SureHisModel.FK_PtBedFeatures_PtBed", "PatientBed", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientClassHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientClassHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientClassHistory object.
        /// </summary>
        /// <param name="ptClassHisID">Initial value of the PtClassHisID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="ptClassID">Initial value of the PtClassID property.</param>
        /// <param name="pCFromDate">Initial value of the PCFromDate property.</param>
        public static PatientClassHistory CreatePatientClassHistory(global::System.Int64 ptClassHisID, global::System.Int64 ptID, global::System.Int64 ptClassID, global::System.DateTime pCFromDate)
        {
            PatientClassHistory patientClassHistory = new PatientClassHistory();
            patientClassHistory.PtClassHisID = ptClassHisID;
            patientClassHistory.PtID = ptID;
            patientClassHistory.PtClassID = ptClassID;
            patientClassHistory.PCFromDate = pCFromDate;
            return patientClassHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtClassHisID
        {
            get
            {
                return _PtClassHisID;
            }
            set
            {
                if (_PtClassHisID != value)
                {
                    OnPtClassHisIDChanging(value);
                    ReportPropertyChanging("PtClassHisID");
                    _PtClassHisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtClassHisID");
                    OnPtClassHisIDChanged();
                }
            }
        }
        private global::System.Int64 _PtClassHisID;
        partial void OnPtClassHisIDChanging(global::System.Int64 value);
        partial void OnPtClassHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtClassID
        {
            get
            {
                return _PtClassID;
            }
            set
            {
                OnPtClassIDChanging(value);
                ReportPropertyChanging("PtClassID");
                _PtClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtClassID");
                OnPtClassIDChanged();
            }
        }
        private global::System.Int64 _PtClassID;
        partial void OnPtClassIDChanging(global::System.Int64 value);
        partial void OnPtClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PCFromDate
        {
            get
            {
                return _PCFromDate;
            }
            set
            {
                OnPCFromDateChanging(value);
                ReportPropertyChanging("PCFromDate");
                _PCFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PCFromDate");
                OnPCFromDateChanged();
            }
        }
        private global::System.DateTime _PCFromDate;
        partial void OnPCFromDateChanging(global::System.DateTime value);
        partial void OnPCFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PCToDate
        {
            get
            {
                return _PCToDate;
            }
            set
            {
                OnPCToDateChanging(value);
                ReportPropertyChanging("PCToDate");
                _PCToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PCToDate");
                OnPCToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PCToDate;
        partial void OnPCToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPCToDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientClassHistory_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientClassHistory_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientClassHistory_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientClassHistory_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientClassHistory_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_PatientClassHistory_02", "PatientTransaction")]
        public EntityCollection<PatientTransaction> PatientTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientTransaction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtCHis_PtClassification", "PatientClassification")]
        public PatientClassification PatientClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientClassification> PatientClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassification>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientClassification>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientClassification object.
        /// </summary>
        /// <param name="ptClassID">Initial value of the PtClassID property.</param>
        /// <param name="ptClassCode">Initial value of the PtClassCode property.</param>
        /// <param name="ptClassName">Initial value of the PtClassName property.</param>
        public static PatientClassification CreatePatientClassification(global::System.Int64 ptClassID, global::System.String ptClassCode, global::System.String ptClassName)
        {
            PatientClassification patientClassification = new PatientClassification();
            patientClassification.PtClassID = ptClassID;
            patientClassification.PtClassCode = ptClassCode;
            patientClassification.PtClassName = ptClassName;
            return patientClassification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtClassID
        {
            get
            {
                return _PtClassID;
            }
            set
            {
                if (_PtClassID != value)
                {
                    OnPtClassIDChanging(value);
                    ReportPropertyChanging("PtClassID");
                    _PtClassID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtClassID");
                    OnPtClassIDChanged();
                }
            }
        }
        private global::System.Int64 _PtClassID;
        partial void OnPtClassIDChanging(global::System.Int64 value);
        partial void OnPtClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtClassCode
        {
            get
            {
                return _PtClassCode;
            }
            set
            {
                OnPtClassCodeChanging(value);
                ReportPropertyChanging("PtClassCode");
                _PtClassCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtClassCode");
                OnPtClassCodeChanged();
            }
        }
        private global::System.String _PtClassCode;
        partial void OnPtClassCodeChanging(global::System.String value);
        partial void OnPtClassCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtClassName
        {
            get
            {
                return _PtClassName;
            }
            set
            {
                OnPtClassNameChanging(value);
                ReportPropertyChanging("PtClassName");
                _PtClassName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtClassName");
                OnPtClassNameChanged();
            }
        }
        private global::System.String _PtClassName;
        partial void OnPtClassNameChanging(global::System.String value);
        partial void OnPtClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PCNotes
        {
            get
            {
                return _PCNotes;
            }
            set
            {
                OnPCNotesChanging(value);
                ReportPropertyChanging("PCNotes");
                _PCNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PCNotes");
                OnPCNotesChanged();
            }
        }
        private global::System.String _PCNotes;
        partial void OnPCNotesChanging(global::System.String value);
        partial void OnPCNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientAdmission_PatientClassification", "PatientAdmission")]
        public EntityCollection<PatientAdmission> PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAdmission>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAdmission>("SureHisModel.FK_PatientAdmission_PatientClassification", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtCHis_PtClassification", "PatientClassHistory")]
        public EntityCollection<PatientClassHistory> PatientClassHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientClassHistory>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientClassHistory>("SureHisModel.FK_PtCHis_PtClassification", "PatientClassHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientCommonMedRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientCommonMedRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientCommonMedRecord object.
        /// </summary>
        /// <param name="ptRecID">Initial value of the PtRecID property.</param>
        /// <param name="ptComMedRecID">Initial value of the PtComMedRecID property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        /// <param name="esNurseID">Initial value of the EsNurseID property.</param>
        /// <param name="v_ProcessingType">Initial value of the V_ProcessingType property.</param>
        public static PatientCommonMedRecord CreatePatientCommonMedRecord(global::System.Int64 ptRecID, global::System.Int64 ptComMedRecID, global::System.DateTime modifiedDate, global::System.Int64 esNurseID, global::System.Int64 v_ProcessingType)
        {
            PatientCommonMedRecord patientCommonMedRecord = new PatientCommonMedRecord();
            patientCommonMedRecord.PtRecID = ptRecID;
            patientCommonMedRecord.PtComMedRecID = ptComMedRecID;
            patientCommonMedRecord.ModifiedDate = modifiedDate;
            patientCommonMedRecord.EsNurseID = esNurseID;
            patientCommonMedRecord.V_ProcessingType = v_ProcessingType;
            return patientCommonMedRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtRecID
        {
            get
            {
                return _PtRecID;
            }
            set
            {
                OnPtRecIDChanging(value);
                ReportPropertyChanging("PtRecID");
                _PtRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtRecID");
                OnPtRecIDChanged();
            }
        }
        private global::System.Int64 _PtRecID;
        partial void OnPtRecIDChanging(global::System.Int64 value);
        partial void OnPtRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                if (_PtComMedRecID != value)
                {
                    OnPtComMedRecIDChanging(value);
                    ReportPropertyChanging("PtComMedRecID");
                    _PtComMedRecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtComMedRecID");
                    OnPtComMedRecIDChanged();
                }
            }
        }
        private global::System.Int64 _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(global::System.Int64 value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AdmID;
        partial void OnAdmIDChanging(Nullable<global::System.Int64> value);
        partial void OnAdmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EsNurseID
        {
            get
            {
                return _EsNurseID;
            }
            set
            {
                OnEsNurseIDChanging(value);
                ReportPropertyChanging("EsNurseID");
                _EsNurseID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EsNurseID");
                OnEsNurseIDChanged();
            }
        }
        private global::System.Int64 _EsNurseID;
        partial void OnEsNurseIDChanging(global::System.Int64 value);
        partial void OnEsNurseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ProcessingType
        {
            get
            {
                return _V_ProcessingType;
            }
            set
            {
                OnV_ProcessingTypeChanging(value);
                ReportPropertyChanging("V_ProcessingType");
                _V_ProcessingType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ProcessingType");
                OnV_ProcessingTypeChanged();
            }
        }
        private global::System.Int64 _V_ProcessingType;
        partial void OnV_ProcessingTypeChanging(global::System.Int64 value);
        partial void OnV_ProcessingTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allergy_PatientCommonMedRecord", "AllergyIntolerance")]
        public EntityCollection<AllergyIntolerance> AllergyIntolerance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllergyIntolerance>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "AllergyIntolerance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllergyIntolerance>("SureHisModel.FK_Allergy_PatientCommonMedRecord", "AllergyIntolerance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_FamilyHistory_PatientCommonMedRecord", "FamilyHistory")]
        public EntityCollection<FamilyHistory> FamilyHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FamilyHistory>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "FamilyHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FamilyHistory>("SureHisModel.FK_FamilyHistory_PatientCommonMedRecord", "FamilyHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_PatientCommonMedRecord", "HospitalizationHistory")]
        public EntityCollection<HospitalizationHistory> HospitalizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "HospitalizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_PatientCommonMedRecord", "HospitalizationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ImmunizationHistory_PatientCommonMedRecord", "ImmunizationHistory")]
        public EntityCollection<ImmunizationHistory> ImmunizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImmunizationHistory>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "ImmunizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImmunizationHistory>("SureHisModel.FK_ImmunizationHistory_PatientCommonMedRecord", "ImmunizationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalConditionRecord_PatientCommonMedRecord", "MedicalConditionRecord")]
        public EntityCollection<MedicalConditionRecord> MedicalConditionRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalConditionRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "MedicalConditionRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalConditionRecord>("SureHisModel.FK_MedicalConditionRecord_PatientCommonMedRecord", "MedicalConditionRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicationHistory_PatientCommonMedRecord", "MedicationHistory")]
        public EntityCollection<MedicationHistory> MedicationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicationHistory>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "MedicationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicationHistory>("SureHisModel.FK_MedicationHistory_PatientCommonMedRecord", "MedicationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MiscDocuments_PatientCommonMedRecord", "MiscDocuments")]
        public EntityCollection<MiscDocuments> MiscDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MiscDocuments>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "MiscDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MiscDocuments>("SureHisModel.FK_MiscDocuments_PatientCommonMedRecord", "MiscDocuments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_PatientCommonMedRecord", "PastPersonHistory")]
        public EntityCollection<PastPersonHistory> PastPersonHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PastPersonHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_PatientCommonMedRecord", "PastPersonHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_PatientCommonMedRecord_PatientAdmission", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord")]
        public PatientMedRecord PatientMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientMedRecord> PatientMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_PatientCommonMedRecord", "PatientVitalSign")]
        public EntityCollection<PatientVitalSign> PatientVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientVitalSign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientDiagnosticImaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientDiagnosticImaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientDiagnosticImaging object.
        /// </summary>
        /// <param name="ptDiagImgID">Initial value of the PtDiagImgID property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        /// <param name="equipMDSrcrID">Initial value of the EquipMDSrcrID property.</param>
        public static PatientDiagnosticImaging CreatePatientDiagnosticImaging(global::System.Int64 ptDiagImgID, global::System.String sID, global::System.Int64 equipMDSrcrID)
        {
            PatientDiagnosticImaging patientDiagnosticImaging = new PatientDiagnosticImaging();
            patientDiagnosticImaging.PtDiagImgID = ptDiagImgID;
            patientDiagnosticImaging.SID = sID;
            patientDiagnosticImaging.EquipMDSrcrID = equipMDSrcrID;
            return patientDiagnosticImaging;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtDiagImgID
        {
            get
            {
                return _PtDiagImgID;
            }
            set
            {
                if (_PtDiagImgID != value)
                {
                    OnPtDiagImgIDChanging(value);
                    ReportPropertyChanging("PtDiagImgID");
                    _PtDiagImgID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtDiagImgID");
                    OnPtDiagImgIDChanged();
                }
            }
        }
        private global::System.Int64 _PtDiagImgID;
        partial void OnPtDiagImgIDChanging(global::System.Int64 value);
        partial void OnPtDiagImgIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtID;
        partial void OnPtIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClinReqID
        {
            get
            {
                return _ClinReqID;
            }
            set
            {
                OnClinReqIDChanging(value);
                ReportPropertyChanging("ClinReqID");
                _ClinReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinReqID");
                OnClinReqIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClinReqID;
        partial void OnClinReqIDChanging(Nullable<global::System.Int64> value);
        partial void OnClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.String _SID;
        partial void OnSIDChanging(global::System.String value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestDtm
        {
            get
            {
                return _TestDtm;
            }
            set
            {
                OnTestDtmChanging(value);
                ReportPropertyChanging("TestDtm");
                _TestDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDtm");
                OnTestDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestDtm;
        partial void OnTestDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnTestDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagPlace
        {
            get
            {
                return _DiagPlace;
            }
            set
            {
                OnDiagPlaceChanging(value);
                ReportPropertyChanging("DiagPlace");
                _DiagPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagPlace");
                OnDiagPlaceChanged();
            }
        }
        private global::System.String _DiagPlace;
        partial void OnDiagPlaceChanging(global::System.String value);
        partial void OnDiagPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_pClinSceneCtg
        {
            get
            {
                return _V_pClinSceneCtg;
            }
            set
            {
                OnV_pClinSceneCtgChanging(value);
                ReportPropertyChanging("V_pClinSceneCtg");
                _V_pClinSceneCtg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_pClinSceneCtg");
                OnV_pClinSceneCtgChanged();
            }
        }
        private Nullable<global::System.Int64> _V_pClinSceneCtg;
        partial void OnV_pClinSceneCtgChanging(Nullable<global::System.Int64> value);
        partial void OnV_pClinSceneCtgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClinicalDoctorID
        {
            get
            {
                return _ClinicalDoctorID;
            }
            set
            {
                OnClinicalDoctorIDChanging(value);
                ReportPropertyChanging("ClinicalDoctorID");
                _ClinicalDoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicalDoctorID");
                OnClinicalDoctorIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClinicalDoctorID;
        partial void OnClinicalDoctorIDChanging(Nullable<global::System.Int64> value);
        partial void OnClinicalDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagTechniques
        {
            get
            {
                return _DiagTechniques;
            }
            set
            {
                OnDiagTechniquesChanging(value);
                ReportPropertyChanging("DiagTechniques");
                _DiagTechniques = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagTechniques");
                OnDiagTechniquesChanged();
            }
        }
        private global::System.String _DiagTechniques;
        partial void OnDiagTechniquesChanging(global::System.String value);
        partial void OnDiagTechniquesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DxDTmpID
        {
            get
            {
                return _DxDTmpID;
            }
            set
            {
                OnDxDTmpIDChanging(value);
                ReportPropertyChanging("DxDTmpID");
                _DxDTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DxDTmpID");
                OnDxDTmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DxDTmpID;
        partial void OnDxDTmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnDxDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagDesc
        {
            get
            {
                return _DiagDesc;
            }
            set
            {
                OnDiagDescChanging(value);
                ReportPropertyChanging("DiagDesc");
                _DiagDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagDesc");
                OnDiagDescChanged();
            }
        }
        private global::System.String _DiagDesc;
        partial void OnDiagDescChanging(global::System.String value);
        partial void OnDiagDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagConclusion
        {
            get
            {
                return _DiagConclusion;
            }
            set
            {
                OnDiagConclusionChanging(value);
                ReportPropertyChanging("DiagConclusion");
                _DiagConclusion = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagConclusion");
                OnDiagConclusionChanged();
            }
        }
        private global::System.String _DiagConclusion;
        partial void OnDiagConclusionChanging(global::System.String value);
        partial void OnDiagConclusionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SuggestedTx
        {
            get
            {
                return _SuggestedTx;
            }
            set
            {
                OnSuggestedTxChanging(value);
                ReportPropertyChanging("SuggestedTx");
                _SuggestedTx = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SuggestedTx");
                OnSuggestedTxChanged();
            }
        }
        private global::System.String _SuggestedTx;
        partial void OnSuggestedTxChanging(global::System.String value);
        partial void OnSuggestedTxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedImgTestID
        {
            get
            {
                return _MedImgTestID;
            }
            set
            {
                OnMedImgTestIDChanging(value);
                ReportPropertyChanging("MedImgTestID");
                _MedImgTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedImgTestID");
                OnMedImgTestIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedImgTestID;
        partial void OnMedImgTestIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedImgTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_DiagStatus
        {
            get
            {
                return _V_DiagStatus;
            }
            set
            {
                OnV_DiagStatusChanging(value);
                ReportPropertyChanging("V_DiagStatus");
                _V_DiagStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DiagStatus");
                OnV_DiagStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_DiagStatus;
        partial void OnV_DiagStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_DiagStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EquipMDSrcrID
        {
            get
            {
                return _EquipMDSrcrID;
            }
            set
            {
                OnEquipMDSrcrIDChanging(value);
                ReportPropertyChanging("EquipMDSrcrID");
                _EquipMDSrcrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipMDSrcrID");
                OnEquipMDSrcrIDChanged();
            }
        }
        private global::System.Int64 _EquipMDSrcrID;
        partial void OnEquipMDSrcrIDChanging(global::System.Int64 value);
        partial void OnEquipMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp")]
        public DiagDescribeTmp DiagDescribeTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiagDescribeTmp>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiagDescribeTmp>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DiagDescribeTmp> DiagDescribeTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DiagDescribeTmp>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DiagDescribeTmp>("SureHisModel.FK_PatientDiagnosticImaging_DiagDescribeTmp", "DiagDescribeTmp", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources")]
        public MedicalEquimentsResources MedicalEquimentsResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEquimentsResources> MedicalEquimentsResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_PatientDiagnosticImaging_MedicalEquimentsResources", "MedicalEquimentsResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedImagingRepository_PatientDiagnosticImaging", "MedImagingRepository")]
        public EntityCollection<MedImagingRepository> MedImagingRepository
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedImagingRepository>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "MedImagingRepository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedImagingRepository>("SureHisModel.FK_MedImagingRepository_PatientDiagnosticImaging", "MedImagingRepository", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_MedImagingTest", "MedImagingTest")]
        public MedImagingTest MedImagingTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_PatientRadiology_MedImagingTest", "MedImagingTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_PatientRadiology_MedImagingTest", "MedImagingTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedImagingTest> MedImagingTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedImagingTest>("SureHisModel.FK_PatientRadiology_MedImagingTest", "MedImagingTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedImagingTest>("SureHisModel.FK_PatientRadiology_MedImagingTest", "MedImagingTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq")]
        public ParaClinicalReq ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalReq> ParaClinicalReqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalReq>("SureHisModel.FK_PatientRadiology_ParaClinicalReq", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRadiology_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientRadiology_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientRadiology_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientRadiology_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientRadiology_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientInBedRoom")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientInBedRoom : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientInBedRoom object.
        /// </summary>
        /// <param name="ptInBdRmID">Initial value of the PtInBdRmID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="ptBdRmID">Initial value of the PtBdRmID property.</param>
        /// <param name="dateStayFrom">Initial value of the DateStayFrom property.</param>
        /// <param name="pPW">Initial value of the PPW property.</param>
        public static PatientInBedRoom CreatePatientInBedRoom(global::System.Int64 ptInBdRmID, global::System.Int64 ptID, global::System.Int64 ptBdRmID, global::System.DateTime dateStayFrom, global::System.String pPW)
        {
            PatientInBedRoom patientInBedRoom = new PatientInBedRoom();
            patientInBedRoom.PtInBdRmID = ptInBdRmID;
            patientInBedRoom.PtID = ptID;
            patientInBedRoom.PtBdRmID = ptBdRmID;
            patientInBedRoom.DateStayFrom = dateStayFrom;
            patientInBedRoom.PPW = pPW;
            return patientInBedRoom;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtInBdRmID
        {
            get
            {
                return _PtInBdRmID;
            }
            set
            {
                if (_PtInBdRmID != value)
                {
                    OnPtInBdRmIDChanging(value);
                    ReportPropertyChanging("PtInBdRmID");
                    _PtInBdRmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtInBdRmID");
                    OnPtInBdRmIDChanged();
                }
            }
        }
        private global::System.Int64 _PtInBdRmID;
        partial void OnPtInBdRmIDChanging(global::System.Int64 value);
        partial void OnPtInBdRmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtBdRmID
        {
            get
            {
                return _PtBdRmID;
            }
            set
            {
                OnPtBdRmIDChanging(value);
                ReportPropertyChanging("PtBdRmID");
                _PtBdRmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtBdRmID");
                OnPtBdRmIDChanged();
            }
        }
        private global::System.Int64 _PtBdRmID;
        partial void OnPtBdRmIDChanging(global::System.Int64 value);
        partial void OnPtBdRmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStayFrom
        {
            get
            {
                return _DateStayFrom;
            }
            set
            {
                OnDateStayFromChanging(value);
                ReportPropertyChanging("DateStayFrom");
                _DateStayFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStayFrom");
                OnDateStayFromChanged();
            }
        }
        private global::System.DateTime _DateStayFrom;
        partial void OnDateStayFromChanging(global::System.DateTime value);
        partial void OnDateStayFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStayTo
        {
            get
            {
                return _DateStayTo;
            }
            set
            {
                OnDateStayToChanging(value);
                ReportPropertyChanging("DateStayTo");
                _DateStayTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStayTo");
                OnDateStayToChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStayTo;
        partial void OnDateStayToChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStayToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PPW
        {
            get
            {
                return _PPW;
            }
            set
            {
                OnPPWChanging(value);
                ReportPropertyChanging("PPW");
                _PPW = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PPW");
                OnPPWChanged();
            }
        }
        private global::System.String _PPW;
        partial void OnPPWChanging(global::System.String value);
        partial void OnPPWChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HosBedInfoStatus
        {
            get
            {
                return _V_HosBedInfoStatus;
            }
            set
            {
                OnV_HosBedInfoStatusChanging(value);
                ReportPropertyChanging("V_HosBedInfoStatus");
                _V_HosBedInfoStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HosBedInfoStatus");
                OnV_HosBedInfoStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HosBedInfoStatus;
        partial void OnV_HosBedInfoStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_HosBedInfoStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientInBedRoom_BedInRoom", "BedInRoom")]
        public BedInRoom BedInRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedInRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "BedInRoom").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedInRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "BedInRoom").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BedInRoom> BedInRoomReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BedInRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "BedInRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BedInRoom>("SureHisModel.FK_PatientInBedRoom_BedInRoom", "BedInRoom", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientInvoices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientInvoices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientInvoices object.
        /// </summary>
        /// <param name="invoiceID">Initial value of the InvoiceID property.</param>
        /// <param name="invoiceNo">Initial value of the InvoiceNo property.</param>
        public static PatientInvoices CreatePatientInvoices(global::System.Int64 invoiceID, global::System.String invoiceNo)
        {
            PatientInvoices patientInvoices = new PatientInvoices();
            patientInvoices.InvoiceID = invoiceID;
            patientInvoices.InvoiceNo = invoiceNo;
            return patientInvoices;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InvoiceID
        {
            get
            {
                return _InvoiceID;
            }
            set
            {
                if (_InvoiceID != value)
                {
                    OnInvoiceIDChanging(value);
                    ReportPropertyChanging("InvoiceID");
                    _InvoiceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvoiceID");
                    OnInvoiceIDChanged();
                }
            }
        }
        private global::System.Int64 _InvoiceID;
        partial void OnInvoiceIDChanging(global::System.Int64 value);
        partial void OnInvoiceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNo
        {
            get
            {
                return _InvoiceNo;
            }
            set
            {
                OnInvoiceNoChanging(value);
                ReportPropertyChanging("InvoiceNo");
                _InvoiceNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvoiceNo");
                OnInvoiceNoChanged();
            }
        }
        private global::System.String _InvoiceNo;
        partial void OnInvoiceNoChanging(global::System.String value);
        partial void OnInvoiceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FormID
        {
            get
            {
                return _FormID;
            }
            set
            {
                OnFormIDChanging(value);
                ReportPropertyChanging("FormID");
                _FormID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FormID");
                OnFormIDChanged();
            }
        }
        private global::System.String _FormID;
        partial void OnFormIDChanging(global::System.String value);
        partial void OnFormIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SerialNo
        {
            get
            {
                return _SerialNo;
            }
            set
            {
                OnSerialNoChanging(value);
                ReportPropertyChanging("SerialNo");
                _SerialNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SerialNo");
                OnSerialNoChanged();
            }
        }
        private global::System.String _SerialNo;
        partial void OnSerialNoChanging(global::System.String value);
        partial void OnSerialNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvDate
        {
            get
            {
                return _InvDate;
            }
            set
            {
                OnInvDateChanging(value);
                ReportPropertyChanging("InvDate");
                _InvDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvDate");
                OnInvDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvDate;
        partial void OnInvDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsPrinted
        {
            get
            {
                return _IsPrinted;
            }
            set
            {
                OnIsPrintedChanging(value);
                ReportPropertyChanging("IsPrinted");
                _IsPrinted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrinted");
                OnIsPrintedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsPrinted;
        partial void OnIsPrintedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsPrintedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PDFURL
        {
            get
            {
                return _PDFURL;
            }
            set
            {
                OnPDFURLChanging(value);
                ReportPropertyChanging("PDFURL");
                _PDFURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PDFURL");
                OnPDFURLChanged();
            }
        }
        private global::System.String _PDFURL;
        partial void OnPDFURLChanging(global::System.String value);
        partial void OnPDFURLChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalFeeTransaction_PatientInvoices", "HospitalFeeTransaction")]
        public EntityCollection<HospitalFeeTransaction> HospitalFeeTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalFeeTransaction>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "HospitalFeeTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalFeeTransaction>("SureHisModel.FK_HospitalFeeTransaction_PatientInvoices", "HospitalFeeTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientMedLabTestResult")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientMedLabTestResult : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientMedLabTestResult object.
        /// </summary>
        /// <param name="reqdPtOnSpecID">Initial value of the ReqdPtOnSpecID property.</param>
        /// <param name="ptSpecTestID">Initial value of the PtSpecTestID property.</param>
        /// <param name="dClinReqID">Initial value of the DClinReqID property.</param>
        /// <param name="v_DiagStatus">Initial value of the V_DiagStatus property.</param>
        public static PatientMedLabTestResult CreatePatientMedLabTestResult(global::System.Int64 reqdPtOnSpecID, global::System.Int64 ptSpecTestID, global::System.Int64 dClinReqID, global::System.Int64 v_DiagStatus)
        {
            PatientMedLabTestResult patientMedLabTestResult = new PatientMedLabTestResult();
            patientMedLabTestResult.ReqdPtOnSpecID = reqdPtOnSpecID;
            patientMedLabTestResult.PtSpecTestID = ptSpecTestID;
            patientMedLabTestResult.DClinReqID = dClinReqID;
            patientMedLabTestResult.V_DiagStatus = v_DiagStatus;
            return patientMedLabTestResult;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ReqdPtOnSpecID
        {
            get
            {
                return _ReqdPtOnSpecID;
            }
            set
            {
                if (_ReqdPtOnSpecID != value)
                {
                    OnReqdPtOnSpecIDChanging(value);
                    ReportPropertyChanging("ReqdPtOnSpecID");
                    _ReqdPtOnSpecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReqdPtOnSpecID");
                    OnReqdPtOnSpecIDChanged();
                }
            }
        }
        private global::System.Int64 _ReqdPtOnSpecID;
        partial void OnReqdPtOnSpecIDChanging(global::System.Int64 value);
        partial void OnReqdPtOnSpecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtSpecTestID
        {
            get
            {
                return _PtSpecTestID;
            }
            set
            {
                OnPtSpecTestIDChanging(value);
                ReportPropertyChanging("PtSpecTestID");
                _PtSpecTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtSpecTestID");
                OnPtSpecTestIDChanged();
            }
        }
        private global::System.Int64 _PtSpecTestID;
        partial void OnPtSpecTestIDChanging(global::System.Int64 value);
        partial void OnPtSpecTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DClinReqID
        {
            get
            {
                return _DClinReqID;
            }
            set
            {
                OnDClinReqIDChanging(value);
                ReportPropertyChanging("DClinReqID");
                _DClinReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DClinReqID");
                OnDClinReqIDChanged();
            }
        }
        private global::System.Int64 _DClinReqID;
        partial void OnDClinReqIDChanging(global::System.Int64 value);
        partial void OnDClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedLabTestID
        {
            get
            {
                return _MedLabTestID;
            }
            set
            {
                OnMedLabTestIDChanging(value);
                ReportPropertyChanging("MedLabTestID");
                _MedLabTestID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedLabTestID");
                OnMedLabTestIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedLabTestID;
        partial void OnMedLabTestIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedLabTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TestResult
        {
            get
            {
                return _TestResult;
            }
            set
            {
                OnTestResultChanging(value);
                ReportPropertyChanging("TestResult");
                _TestResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TestResult");
                OnTestResultChanged();
            }
        }
        private global::System.String _TestResult;
        partial void OnTestResultChanging(global::System.String value);
        partial void OnTestResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DXProcNmeasAnalUnitCode
        {
            get
            {
                return _DXProcNmeasAnalUnitCode;
            }
            set
            {
                OnDXProcNmeasAnalUnitCodeChanging(value);
                ReportPropertyChanging("DXProcNmeasAnalUnitCode");
                _DXProcNmeasAnalUnitCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DXProcNmeasAnalUnitCode");
                OnDXProcNmeasAnalUnitCodeChanged();
            }
        }
        private global::System.String _DXProcNmeasAnalUnitCode;
        partial void OnDXProcNmeasAnalUnitCodeChanging(global::System.String value);
        partial void OnDXProcNmeasAnalUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ResultEvaluation
        {
            get
            {
                return _ResultEvaluation;
            }
            set
            {
                OnResultEvaluationChanging(value);
                ReportPropertyChanging("ResultEvaluation");
                _ResultEvaluation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResultEvaluation");
                OnResultEvaluationChanged();
            }
        }
        private Nullable<global::System.Boolean> _ResultEvaluation;
        partial void OnResultEvaluationChanging(Nullable<global::System.Boolean> value);
        partial void OnResultEvaluationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String URLParClinExamFileLocation
        {
            get
            {
                return _URLParClinExamFileLocation;
            }
            set
            {
                OnURLParClinExamFileLocationChanging(value);
                ReportPropertyChanging("URLParClinExamFileLocation");
                _URLParClinExamFileLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("URLParClinExamFileLocation");
                OnURLParClinExamFileLocationChanged();
            }
        }
        private global::System.String _URLParClinExamFileLocation;
        partial void OnURLParClinExamFileLocationChanging(global::System.String value);
        partial void OnURLParClinExamFileLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBackup
        {
            get
            {
                return _IsBackup;
            }
            set
            {
                OnIsBackupChanging(value);
                ReportPropertyChanging("IsBackup");
                _IsBackup = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBackup");
                OnIsBackupChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBackup;
        partial void OnIsBackupChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBackupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_DiagStatus
        {
            get
            {
                return _V_DiagStatus;
            }
            set
            {
                OnV_DiagStatusChanging(value);
                ReportPropertyChanging("V_DiagStatus");
                _V_DiagStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DiagStatus");
                OnV_DiagStatusChanged();
            }
        }
        private global::System.Int64 _V_DiagStatus;
        partial void OnV_DiagStatusChanging(global::System.Int64 value);
        partial void OnV_DiagStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest")]
        public MedLabTest MedLabTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedLabTest> MedLabTestReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedLabTest>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedLabTest>("SureHisModel.FK_PatientRequestOnSpecimen_MedLabTest", "MedLabTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails")]
        public ParaClinicalReqDetails ParaClinicalReqDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReqDetails>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReqDetails>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalReqDetails> ParaClinicalReqDetailsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReqDetails>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalReqDetails>("SureHisModel.FK_PatientRequestOnSpecimen_ParaClinicalReqDetails", "ParaClinicalReqDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen")]
        public TestOnPatientSpecimen TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TestOnPatientSpecimen> TestOnPatientSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TestOnPatientSpecimen>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientMedRecord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientMedRecord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientMedRecord object.
        /// </summary>
        /// <param name="ptRecID">Initial value of the PtRecID property.</param>
        /// <param name="ptId">Initial value of the PtId property.</param>
        /// <param name="createdDtm">Initial value of the CreatedDtm property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        public static PatientMedRecord CreatePatientMedRecord(global::System.Int64 ptRecID, global::System.Int64 ptId, global::System.DateTime createdDtm, global::System.Int64 estEmpID)
        {
            PatientMedRecord patientMedRecord = new PatientMedRecord();
            patientMedRecord.PtRecID = ptRecID;
            patientMedRecord.PtId = ptId;
            patientMedRecord.CreatedDtm = createdDtm;
            patientMedRecord.EstEmpID = estEmpID;
            return patientMedRecord;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtRecID
        {
            get
            {
                return _PtRecID;
            }
            set
            {
                if (_PtRecID != value)
                {
                    OnPtRecIDChanging(value);
                    ReportPropertyChanging("PtRecID");
                    _PtRecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtRecID");
                    OnPtRecIDChanged();
                }
            }
        }
        private global::System.Int64 _PtRecID;
        partial void OnPtRecIDChanging(global::System.Int64 value);
        partial void OnPtRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtId
        {
            get
            {
                return _PtId;
            }
            set
            {
                OnPtIdChanging(value);
                ReportPropertyChanging("PtId");
                _PtId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtId");
                OnPtIdChanged();
            }
        }
        private global::System.Int64 _PtId;
        partial void OnPtIdChanging(global::System.Int64 value);
        partial void OnPtIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedReportBookCode
        {
            get
            {
                return _MedReportBookCode;
            }
            set
            {
                OnMedReportBookCodeChanging(value);
                ReportPropertyChanging("MedReportBookCode");
                _MedReportBookCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedReportBookCode");
                OnMedReportBookCodeChanged();
            }
        }
        private global::System.String _MedReportBookCode;
        partial void OnMedReportBookCodeChanging(global::System.String value);
        partial void OnMedReportBookCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NationalMedicalCode
        {
            get
            {
                return _NationalMedicalCode;
            }
            set
            {
                OnNationalMedicalCodeChanging(value);
                ReportPropertyChanging("NationalMedicalCode");
                _NationalMedicalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NationalMedicalCode");
                OnNationalMedicalCodeChanged();
            }
        }
        private global::System.String _NationalMedicalCode;
        partial void OnNationalMedicalCodeChanging(global::System.String value);
        partial void OnNationalMedicalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PtRecQRCode
        {
            get
            {
                return _PtRecQRCode;
            }
            set
            {
                OnPtRecQRCodeChanging(value);
                ReportPropertyChanging("PtRecQRCode");
                _PtRecQRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PtRecQRCode");
                OnPtRecQRCodeChanged();
            }
        }
        private global::System.String _PtRecQRCode;
        partial void OnPtRecQRCodeChanging(global::System.String value);
        partial void OnPtRecQRCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDtm
        {
            get
            {
                return _CreatedDtm;
            }
            set
            {
                OnCreatedDtmChanging(value);
                ReportPropertyChanging("CreatedDtm");
                _CreatedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDtm");
                OnCreatedDtmChanged();
            }
        }
        private global::System.DateTime _CreatedDtm;
        partial void OnCreatedDtmChanging(global::System.DateTime value);
        partial void OnCreatedDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinishedDtm
        {
            get
            {
                return _FinishedDtm;
            }
            set
            {
                OnFinishedDtmChanging(value);
                ReportPropertyChanging("FinishedDtm");
                _FinishedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinishedDtm");
                OnFinishedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinishedDtm;
        partial void OnFinishedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnFinishedDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiryDtm
        {
            get
            {
                return _ExpiryDtm;
            }
            set
            {
                OnExpiryDtmChanging(value);
                ReportPropertyChanging("ExpiryDtm");
                _ExpiryDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiryDtm");
                OnExpiryDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiryDtm;
        partial void OnExpiryDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiryDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Encounter_PatientRecords", "MedicalEncounter")]
        public EntityCollection<MedicalEncounter> MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalEncounter>("SureHisModel.FK_Encounter_PatientRecords", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalEncounter>("SureHisModel.FK_Encounter_PatientRecords", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtMedRecord_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PtMedRecord_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PtMedRecord_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PtMedRecord_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PtMedRecord_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientCommonMedRecord_PatientMedRecords", "PatientCommonMedRecord")]
        public EntityCollection<PatientCommonMedRecord> PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientCommonMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientCommonMedRecord>("SureHisModel.FK_PatientCommonMedRecord_PatientMedRecords", "PatientCommonMedRecord", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientProblem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientProblem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientProblem object.
        /// </summary>
        /// <param name="ptProblemID">Initial value of the PtProblemID property.</param>
        /// <param name="pHProbCode">Initial value of the PHProbCode property.</param>
        /// <param name="medEncnID">Initial value of the MedEncnID property.</param>
        /// <param name="h7PHProbStatusCode">Initial value of the H7PHProbStatusCode property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PatientProblem CreatePatientProblem(global::System.Int64 ptProblemID, global::System.Int64 pHProbCode, global::System.Int64 medEncnID, global::System.Int64 h7PHProbStatusCode, global::System.DateTime modifiedDate)
        {
            PatientProblem patientProblem = new PatientProblem();
            patientProblem.PtProblemID = ptProblemID;
            patientProblem.PHProbCode = pHProbCode;
            patientProblem.MedEncnID = medEncnID;
            patientProblem.H7PHProbStatusCode = h7PHProbStatusCode;
            patientProblem.ModifiedDate = modifiedDate;
            return patientProblem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtProblemID
        {
            get
            {
                return _PtProblemID;
            }
            set
            {
                if (_PtProblemID != value)
                {
                    OnPtProblemIDChanging(value);
                    ReportPropertyChanging("PtProblemID");
                    _PtProblemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtProblemID");
                    OnPtProblemIDChanged();
                }
            }
        }
        private global::System.Int64 _PtProblemID;
        partial void OnPtProblemIDChanging(global::System.Int64 value);
        partial void OnPtProblemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PHProbCode
        {
            get
            {
                return _PHProbCode;
            }
            set
            {
                OnPHProbCodeChanging(value);
                ReportPropertyChanging("PHProbCode");
                _PHProbCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PHProbCode");
                OnPHProbCodeChanged();
            }
        }
        private global::System.Int64 _PHProbCode;
        partial void OnPHProbCodeChanging(global::System.Int64 value);
        partial void OnPHProbCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private global::System.Int64 _MedEncnID;
        partial void OnMedEncnIDChanging(global::System.Int64 value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PHProbProbOnsetDtm
        {
            get
            {
                return _PHProbProbOnsetDtm;
            }
            set
            {
                OnPHProbProbOnsetDtmChanging(value);
                ReportPropertyChanging("PHProbProbOnsetDtm");
                _PHProbProbOnsetDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PHProbProbOnsetDtm");
                OnPHProbProbOnsetDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _PHProbProbOnsetDtm;
        partial void OnPHProbProbOnsetDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnPHProbProbOnsetDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 H7PHProbStatusCode
        {
            get
            {
                return _H7PHProbStatusCode;
            }
            set
            {
                OnH7PHProbStatusCodeChanging(value);
                ReportPropertyChanging("H7PHProbStatusCode");
                _H7PHProbStatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7PHProbStatusCode");
                OnH7PHProbStatusCodeChanged();
            }
        }
        private global::System.Int64 _H7PHProbStatusCode;
        partial void OnH7PHProbStatusCodeChanging(global::System.Int64 value);
        partial void OnH7PHProbStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PHProbNote
        {
            get
            {
                return _PHProbNote;
            }
            set
            {
                OnPHProbNoteChanging(value);
                ReportPropertyChanging("PHProbNote");
                _PHProbNote = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PHProbNote");
                OnPHProbNoteChanged();
            }
        }
        private global::System.String _PHProbNote;
        partial void OnPHProbNoteChanging(global::System.String value);
        partial void OnPHProbNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientProblem_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientProblem_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientProblem_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientProblem_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientProblem_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientProblem_RefProblem", "refProblem")]
        public refProblem refProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_PatientProblem_RefProblem", "refProblem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_PatientProblem_RefProblem", "refProblem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refProblem> refProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_PatientProblem_RefProblem", "refProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refProblem>("SureHisModel.FK_PatientProblem_RefProblem", "refProblem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientPVID")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientPVID : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientPVID object.
        /// </summary>
        /// <param name="ptPVIDItemID">Initial value of the PtPVIDItemID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="privClssCode">Initial value of the PrivClssCode property.</param>
        /// <param name="privClssDesc">Initial value of the PrivClssDesc property.</param>
        /// <param name="issueddate">Initial value of the Issueddate property.</param>
        public static PatientPVID CreatePatientPVID(global::System.Int64 ptPVIDItemID, global::System.Int64 ptID, global::System.String privClssCode, global::System.String privClssDesc, global::System.DateTime issueddate)
        {
            PatientPVID patientPVID = new PatientPVID();
            patientPVID.PtPVIDItemID = ptPVIDItemID;
            patientPVID.PtID = ptID;
            patientPVID.PrivClssCode = privClssCode;
            patientPVID.PrivClssDesc = privClssDesc;
            patientPVID.Issueddate = issueddate;
            return patientPVID;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtPVIDItemID
        {
            get
            {
                return _PtPVIDItemID;
            }
            set
            {
                if (_PtPVIDItemID != value)
                {
                    OnPtPVIDItemIDChanging(value);
                    ReportPropertyChanging("PtPVIDItemID");
                    _PtPVIDItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtPVIDItemID");
                    OnPtPVIDItemIDChanged();
                }
            }
        }
        private global::System.Int64 _PtPVIDItemID;
        partial void OnPtPVIDItemIDChanging(global::System.Int64 value);
        partial void OnPtPVIDItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivClssCode
        {
            get
            {
                return _PrivClssCode;
            }
            set
            {
                OnPrivClssCodeChanging(value);
                ReportPropertyChanging("PrivClssCode");
                _PrivClssCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivClssCode");
                OnPrivClssCodeChanged();
            }
        }
        private global::System.String _PrivClssCode;
        partial void OnPrivClssCodeChanging(global::System.String value);
        partial void OnPrivClssCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivClssDesc
        {
            get
            {
                return _PrivClssDesc;
            }
            set
            {
                OnPrivClssDescChanging(value);
                ReportPropertyChanging("PrivClssDesc");
                _PrivClssDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivClssDesc");
                OnPrivClssDescChanged();
            }
        }
        private global::System.String _PrivClssDesc;
        partial void OnPrivClssDescChanging(global::System.String value);
        partial void OnPrivClssDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Issueddate
        {
            get
            {
                return _Issueddate;
            }
            set
            {
                OnIssueddateChanging(value);
                ReportPropertyChanging("Issueddate");
                _Issueddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Issueddate");
                OnIssueddateChanged();
            }
        }
        private global::System.DateTime _Issueddate;
        partial void OnIssueddateChanging(global::System.DateTime value);
        partial void OnIssueddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                OnIsActivatedChanging(value);
                ReportPropertyChanging("IsActivated");
                _IsActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActivated");
                OnIsActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActivated;
        partial void OnIsActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PrivClssID
        {
            get
            {
                return _PrivClssID;
            }
            set
            {
                OnPrivClssIDChanging(value);
                ReportPropertyChanging("PrivClssID");
                _PrivClssID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrivClssID");
                OnPrivClssIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PrivClssID;
        partial void OnPrivClssIDChanging(Nullable<global::System.Int64> value);
        partial void OnPrivClssIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientPVID_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientPVID_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientPVID_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientPVID_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientPVID_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientPVID_PrivacyClass", "PrivacyClass")]
        public PrivacyClass PrivacyClass
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyClass>("SureHisModel.FK_PatientPVID_PrivacyClass", "PrivacyClass").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyClass>("SureHisModel.FK_PatientPVID_PrivacyClass", "PrivacyClass").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PrivacyClass> PrivacyClassReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PrivacyClass>("SureHisModel.FK_PatientPVID_PrivacyClass", "PrivacyClass");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PrivacyClass>("SureHisModel.FK_PatientPVID_PrivacyClass", "PrivacyClass", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientSpecimen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientSpecimen : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientSpecimen object.
        /// </summary>
        /// <param name="specTypeID">Initial value of the SpecTypeID property.</param>
        /// <param name="ptSpecID">Initial value of the PtSpecID property.</param>
        /// <param name="specBarCode">Initial value of the SpecBarCode property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="dXProcSpecimenId">Initial value of the DXProcSpecimenId property.</param>
        /// <param name="dXProcSpecReceiptDtm">Initial value of the DXProcSpecReceiptDtm property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        public static PatientSpecimen CreatePatientSpecimen(global::System.Int64 specTypeID, global::System.Int64 ptSpecID, global::System.String specBarCode, global::System.Int64 ptID, global::System.String dXProcSpecimenId, global::System.DateTime dXProcSpecReceiptDtm, global::System.Int64 estEmpID)
        {
            PatientSpecimen patientSpecimen = new PatientSpecimen();
            patientSpecimen.SpecTypeID = specTypeID;
            patientSpecimen.PtSpecID = ptSpecID;
            patientSpecimen.SpecBarCode = specBarCode;
            patientSpecimen.PtID = ptID;
            patientSpecimen.DXProcSpecimenId = dXProcSpecimenId;
            patientSpecimen.DXProcSpecReceiptDtm = dXProcSpecReceiptDtm;
            patientSpecimen.EstEmpID = estEmpID;
            return patientSpecimen;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SpecTypeID
        {
            get
            {
                return _SpecTypeID;
            }
            set
            {
                OnSpecTypeIDChanging(value);
                ReportPropertyChanging("SpecTypeID");
                _SpecTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecTypeID");
                OnSpecTypeIDChanged();
            }
        }
        private global::System.Int64 _SpecTypeID;
        partial void OnSpecTypeIDChanging(global::System.Int64 value);
        partial void OnSpecTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtSpecID
        {
            get
            {
                return _PtSpecID;
            }
            set
            {
                if (_PtSpecID != value)
                {
                    OnPtSpecIDChanging(value);
                    ReportPropertyChanging("PtSpecID");
                    _PtSpecID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtSpecID");
                    OnPtSpecIDChanged();
                }
            }
        }
        private global::System.Int64 _PtSpecID;
        partial void OnPtSpecIDChanging(global::System.Int64 value);
        partial void OnPtSpecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecBarCode
        {
            get
            {
                return _SpecBarCode;
            }
            set
            {
                OnSpecBarCodeChanging(value);
                ReportPropertyChanging("SpecBarCode");
                _SpecBarCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecBarCode");
                OnSpecBarCodeChanged();
            }
        }
        private global::System.String _SpecBarCode;
        partial void OnSpecBarCodeChanging(global::System.String value);
        partial void OnSpecBarCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PackageNum
        {
            get
            {
                return _PackageNum;
            }
            set
            {
                OnPackageNumChanging(value);
                ReportPropertyChanging("PackageNum");
                _PackageNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PackageNum");
                OnPackageNumChanged();
            }
        }
        private global::System.String _PackageNum;
        partial void OnPackageNumChanging(global::System.String value);
        partial void OnPackageNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DXProcSpecimenId
        {
            get
            {
                return _DXProcSpecimenId;
            }
            set
            {
                OnDXProcSpecimenIdChanging(value);
                ReportPropertyChanging("DXProcSpecimenId");
                _DXProcSpecimenId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DXProcSpecimenId");
                OnDXProcSpecimenIdChanged();
            }
        }
        private global::System.String _DXProcSpecimenId;
        partial void OnDXProcSpecimenIdChanging(global::System.String value);
        partial void OnDXProcSpecimenIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DXProcSpecReceiptDtm
        {
            get
            {
                return _DXProcSpecReceiptDtm;
            }
            set
            {
                OnDXProcSpecReceiptDtmChanging(value);
                ReportPropertyChanging("DXProcSpecReceiptDtm");
                _DXProcSpecReceiptDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DXProcSpecReceiptDtm");
                OnDXProcSpecReceiptDtmChanged();
            }
        }
        private global::System.DateTime _DXProcSpecReceiptDtm;
        partial void OnDXProcSpecReceiptDtmChanging(global::System.DateTime value);
        partial void OnDXProcSpecReceiptDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> DXProcSpecTotVolQty
        {
            get
            {
                return _DXProcSpecTotVolQty;
            }
            set
            {
                OnDXProcSpecTotVolQtyChanging(value);
                ReportPropertyChanging("DXProcSpecTotVolQty");
                _DXProcSpecTotVolQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DXProcSpecTotVolQty");
                OnDXProcSpecTotVolQtyChanged();
            }
        }
        private Nullable<global::System.Byte> _DXProcSpecTotVolQty;
        partial void OnDXProcSpecTotVolQtyChanging(Nullable<global::System.Byte> value);
        partial void OnDXProcSpecTotVolQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DXProcSpecCollectorName
        {
            get
            {
                return _DXProcSpecCollectorName;
            }
            set
            {
                OnDXProcSpecCollectorNameChanging(value);
                ReportPropertyChanging("DXProcSpecCollectorName");
                _DXProcSpecCollectorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DXProcSpecCollectorName");
                OnDXProcSpecCollectorNameChanged();
            }
        }
        private global::System.String _DXProcSpecCollectorName;
        partial void OnDXProcSpecCollectorNameChanging(global::System.String value);
        partial void OnDXProcSpecCollectorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NationalPatientCode
        {
            get
            {
                return _NationalPatientCode;
            }
            set
            {
                OnNationalPatientCodeChanging(value);
                ReportPropertyChanging("NationalPatientCode");
                _NationalPatientCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NationalPatientCode");
                OnNationalPatientCodeChanged();
            }
        }
        private global::System.String _NationalPatientCode;
        partial void OnNationalPatientCodeChanging(global::System.String value);
        partial void OnNationalPatientCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedReportBookCode
        {
            get
            {
                return _MedReportBookCode;
            }
            set
            {
                OnMedReportBookCodeChanging(value);
                ReportPropertyChanging("MedReportBookCode");
                _MedReportBookCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedReportBookCode");
                OnMedReportBookCodeChanged();
            }
        }
        private global::System.String _MedReportBookCode;
        partial void OnMedReportBookCodeChanging(global::System.String value);
        partial void OnMedReportBookCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RoomID;
        partial void OnRoomIDChanging(Nullable<global::System.Int64> value);
        partial void OnRoomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientSpecimen_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientSpecimen_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientSpecimen_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientSpecimen_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_refSpecimenType", "refSpecimenType")]
        public refSpecimenType refSpecimenType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "refSpecimenType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "refSpecimenType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refSpecimenType> refSpecimenTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSpecimenType>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "refSpecimenType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refSpecimenType>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "refSpecimenType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "RoomAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_PatientSpecimen", "TestOnPatientSpecimen")]
        public EntityCollection<TestOnPatientSpecimen> TestOnPatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "TestOnPatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TestOnPatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "TestOnPatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientTransaction object.
        /// </summary>
        /// <param name="transID">Initial value of the TransID property.</param>
        /// <param name="transBeginDate">Initial value of the TransBeginDate property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="transTypeID">Initial value of the TransTypeID property.</param>
        public static PatientTransaction CreatePatientTransaction(global::System.Int64 transID, global::System.DateTime transBeginDate, global::System.Int64 ptID, global::System.Int64 transTypeID)
        {
            PatientTransaction patientTransaction = new PatientTransaction();
            patientTransaction.TransID = transID;
            patientTransaction.TransBeginDate = transBeginDate;
            patientTransaction.PtID = ptID;
            patientTransaction.TransTypeID = transTypeID;
            return patientTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransID
        {
            get
            {
                return _TransID;
            }
            set
            {
                if (_TransID != value)
                {
                    OnTransIDChanging(value);
                    ReportPropertyChanging("TransID");
                    _TransID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransID");
                    OnTransIDChanged();
                }
            }
        }
        private global::System.Int64 _TransID;
        partial void OnTransIDChanging(global::System.Int64 value);
        partial void OnTransIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransBeginDate
        {
            get
            {
                return _TransBeginDate;
            }
            set
            {
                OnTransBeginDateChanging(value);
                ReportPropertyChanging("TransBeginDate");
                _TransBeginDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransBeginDate");
                OnTransBeginDateChanged();
            }
        }
        private global::System.DateTime _TransBeginDate;
        partial void OnTransBeginDateChanging(global::System.DateTime value);
        partial void OnTransBeginDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TransEndDate
        {
            get
            {
                return _TransEndDate;
            }
            set
            {
                OnTransEndDateChanging(value);
                ReportPropertyChanging("TransEndDate");
                _TransEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransEndDate");
                OnTransEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TransEndDate;
        partial void OnTransEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTransEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransRemarks
        {
            get
            {
                return _TransRemarks;
            }
            set
            {
                OnTransRemarksChanging(value);
                ReportPropertyChanging("TransRemarks");
                _TransRemarks = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransRemarks");
                OnTransRemarksChanged();
            }
        }
        private global::System.String _TransRemarks;
        partial void OnTransRemarksChanging(global::System.String value);
        partial void OnTransRemarksChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PTClassHisID
        {
            get
            {
                return _PTClassHisID;
            }
            set
            {
                OnPTClassHisIDChanging(value);
                ReportPropertyChanging("PTClassHisID");
                _PTClassHisID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PTClassHisID");
                OnPTClassHisIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PTClassHisID;
        partial void OnPTClassHisIDChanging(Nullable<global::System.Int64> value);
        partial void OnPTClassHisIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransTypeID
        {
            get
            {
                return _TransTypeID;
            }
            set
            {
                OnTransTypeIDChanging(value);
                ReportPropertyChanging("TransTypeID");
                _TransTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransTypeID");
                OnTransTypeIDChanged();
            }
        }
        private global::System.Int64 _TransTypeID;
        partial void OnTransTypeIDChanging(global::System.Int64 value);
        partial void OnTransTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AdmID
        {
            get
            {
                return _AdmID;
            }
            set
            {
                OnAdmIDChanging(value);
                ReportPropertyChanging("AdmID");
                _AdmID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AdmID");
                OnAdmIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AdmID;
        partial void OnAdmIDChanging(Nullable<global::System.Int64> value);
        partial void OnAdmIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientTransaction_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientTransaction_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_PatientTransaction_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_PatientTransaction_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_PatientAdmission", "PatientAdmission")]
        public PatientAdmission PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientAdmission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientAdmission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientAdmission> PatientAdmissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientAdmission>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientAdmission>("SureHisModel.FK_PatientTransaction_PatientAdmission", "PatientAdmission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory")]
        public PatientClassHistory PatientClassHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassHistory>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassHistory>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientClassHistory> PatientClassHistoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientClassHistory>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientClassHistory>("SureHisModel.FK_PatientTransaction_PatientClassHistory_02", "PatientClassHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_refTransactionType", "refTransactionType")]
        public refTransactionType refTransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTransactionType>("SureHisModel.FK_PatientTransaction_refTransactionType", "refTransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTransactionType>("SureHisModel.FK_PatientTransaction_refTransactionType", "refTransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refTransactionType> refTransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refTransactionType>("SureHisModel.FK_PatientTransaction_refTransactionType", "refTransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refTransactionType>("SureHisModel.FK_PatientTransaction_refTransactionType", "refTransactionType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PatientVitalSign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PatientVitalSign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PatientVitalSign object.
        /// </summary>
        /// <param name="vsID">Initial value of the VsID property.</param>
        /// <param name="vitSignCode">Initial value of the VitSignCode property.</param>
        /// <param name="vitSignDtm">Initial value of the VitSignDtm property.</param>
        /// <param name="vitSignQty">Initial value of the VitSignQty property.</param>
        /// <param name="executor">Initial value of the Executor property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PatientVitalSign CreatePatientVitalSign(global::System.Int64 vsID, global::System.Int64 vitSignCode, global::System.DateTime vitSignDtm, global::System.String vitSignQty, global::System.String executor, global::System.DateTime modifiedDate)
        {
            PatientVitalSign patientVitalSign = new PatientVitalSign();
            patientVitalSign.VsID = vsID;
            patientVitalSign.VitSignCode = vitSignCode;
            patientVitalSign.VitSignDtm = vitSignDtm;
            patientVitalSign.VitSignQty = vitSignQty;
            patientVitalSign.Executor = executor;
            patientVitalSign.ModifiedDate = modifiedDate;
            return patientVitalSign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VsID
        {
            get
            {
                return _VsID;
            }
            set
            {
                if (_VsID != value)
                {
                    OnVsIDChanging(value);
                    ReportPropertyChanging("VsID");
                    _VsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VsID");
                    OnVsIDChanged();
                }
            }
        }
        private global::System.Int64 _VsID;
        partial void OnVsIDChanging(global::System.Int64 value);
        partial void OnVsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedEncnID;
        partial void OnMedEncnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtComMedRecID
        {
            get
            {
                return _PtComMedRecID;
            }
            set
            {
                OnPtComMedRecIDChanging(value);
                ReportPropertyChanging("PtComMedRecID");
                _PtComMedRecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtComMedRecID");
                OnPtComMedRecIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtComMedRecID;
        partial void OnPtComMedRecIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtComMedRecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VitSignCode
        {
            get
            {
                return _VitSignCode;
            }
            set
            {
                OnVitSignCodeChanging(value);
                ReportPropertyChanging("VitSignCode");
                _VitSignCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VitSignCode");
                OnVitSignCodeChanged();
            }
        }
        private global::System.Int64 _VitSignCode;
        partial void OnVitSignCodeChanging(global::System.Int64 value);
        partial void OnVitSignCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VitSignDtm
        {
            get
            {
                return _VitSignDtm;
            }
            set
            {
                OnVitSignDtmChanging(value);
                ReportPropertyChanging("VitSignDtm");
                _VitSignDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VitSignDtm");
                OnVitSignDtmChanged();
            }
        }
        private global::System.DateTime _VitSignDtm;
        partial void OnVitSignDtmChanging(global::System.DateTime value);
        partial void OnVitSignDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VitSignQty
        {
            get
            {
                return _VitSignQty;
            }
            set
            {
                OnVitSignQtyChanging(value);
                ReportPropertyChanging("VitSignQty");
                _VitSignQty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VitSignQty");
                OnVitSignQtyChanged();
            }
        }
        private global::System.String _VitSignQty;
        partial void OnVitSignQtyChanging(global::System.String value);
        partial void OnVitSignQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VitSignUnitCode
        {
            get
            {
                return _VitSignUnitCode;
            }
            set
            {
                OnVitSignUnitCodeChanging(value);
                ReportPropertyChanging("VitSignUnitCode");
                _VitSignUnitCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VitSignUnitCode");
                OnVitSignUnitCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _VitSignUnitCode;
        partial void OnVitSignUnitCodeChanging(Nullable<global::System.Int64> value);
        partial void OnVitSignUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Executor
        {
            get
            {
                return _Executor;
            }
            set
            {
                OnExecutorChanging(value);
                ReportPropertyChanging("Executor");
                _Executor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Executor");
                OnExecutorChanged();
            }
        }
        private global::System.String _Executor;
        partial void OnExecutorChanging(global::System.String value);
        partial void OnExecutorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_PatientVitalSign_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord")]
        public PatientCommonMedRecord PatientCommonMedRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientCommonMedRecord> PatientCommonMedRecordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientCommonMedRecord>("SureHisModel.FK_PatientVitalSign_PatientCommonMedRecord", "PatientCommonMedRecord", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_refVitalSign", "refVitalSign")]
        public refVitalSign refVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "refVitalSign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "refVitalSign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refVitalSign> refVitalSignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "refVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "refVitalSign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="persName">Initial value of the PersName property.</param>
        /// <param name="persBirthDtm">Initial value of the PersBirthDtm property.</param>
        /// <param name="persGenderCode">Initial value of the PersGenderCode property.</param>
        /// <param name="personType">Initial value of the PersonType property.</param>
        /// <param name="nationnalityCode">Initial value of the NationnalityCode property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Person CreatePerson(global::System.Int64 personID, global::System.String persName, global::System.DateTime persBirthDtm, global::System.Int64 persGenderCode, global::System.Int16 personType, global::System.String nationnalityCode, global::System.Boolean stop, global::System.DateTime createdDate)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.PersName = persName;
            person.PersBirthDtm = persBirthDtm;
            person.PersGenderCode = persGenderCode;
            person.PersonType = personType;
            person.NationnalityCode = nationnalityCode;
            person.Stop = stop;
            person.CreatedDate = createdDate;
            return person;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int64 _PersonID;
        partial void OnPersonIDChanging(global::System.Int64 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersName
        {
            get
            {
                return _PersName;
            }
            set
            {
                OnPersNameChanging(value);
                ReportPropertyChanging("PersName");
                _PersName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersName");
                OnPersNameChanged();
            }
        }
        private global::System.String _PersName;
        partial void OnPersNameChanging(global::System.String value);
        partial void OnPersNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PersBirthDtm
        {
            get
            {
                return _PersBirthDtm;
            }
            set
            {
                OnPersBirthDtmChanging(value);
                ReportPropertyChanging("PersBirthDtm");
                _PersBirthDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersBirthDtm");
                OnPersBirthDtmChanged();
            }
        }
        private global::System.DateTime _PersBirthDtm;
        partial void OnPersBirthDtmChanging(global::System.DateTime value);
        partial void OnPersBirthDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> AgeOnly
        {
            get
            {
                return _AgeOnly;
            }
            set
            {
                OnAgeOnlyChanging(value);
                ReportPropertyChanging("AgeOnly");
                _AgeOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeOnly");
                OnAgeOnlyChanged();
            }
        }
        private Nullable<global::System.Boolean> _AgeOnly;
        partial void OnAgeOnlyChanging(Nullable<global::System.Boolean> value);
        partial void OnAgeOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Age
        {
            get
            {
                return _Age;
            }
            set
            {
                OnAgeChanging(value);
                ReportPropertyChanging("Age");
                _Age = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Age");
                OnAgeChanged();
            }
        }
        private Nullable<global::System.Int16> _Age;
        partial void OnAgeChanging(Nullable<global::System.Int16> value);
        partial void OnAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String POB
        {
            get
            {
                return _POB;
            }
            set
            {
                OnPOBChanging(value);
                ReportPropertyChanging("POB");
                _POB = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("POB");
                OnPOBChanged();
            }
        }
        private global::System.String _POB;
        partial void OnPOBChanging(global::System.String value);
        partial void OnPOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersGenderCode
        {
            get
            {
                return _PersGenderCode;
            }
            set
            {
                OnPersGenderCodeChanging(value);
                ReportPropertyChanging("PersGenderCode");
                _PersGenderCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersGenderCode");
                OnPersGenderCodeChanged();
            }
        }
        private global::System.Int64 _PersGenderCode;
        partial void OnPersGenderCodeChanging(global::System.Int64 value);
        partial void OnPersGenderCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EthnicID
        {
            get
            {
                return _EthnicID;
            }
            set
            {
                OnEthnicIDChanging(value);
                ReportPropertyChanging("EthnicID");
                _EthnicID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EthnicID");
                OnEthnicIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EthnicID;
        partial void OnEthnicIDChanging(Nullable<global::System.Int64> value);
        partial void OnEthnicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersRaceCode
        {
            get
            {
                return _PersRaceCode;
            }
            set
            {
                OnPersRaceCodeChanging(value);
                ReportPropertyChanging("PersRaceCode");
                _PersRaceCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersRaceCode");
                OnPersRaceCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _PersRaceCode;
        partial void OnPersRaceCodeChanging(Nullable<global::System.Int64> value);
        partial void OnPersRaceCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtReligionCode
        {
            get
            {
                return _PtReligionCode;
            }
            set
            {
                OnPtReligionCodeChanging(value);
                ReportPropertyChanging("PtReligionCode");
                _PtReligionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtReligionCode");
                OnPtReligionCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _PtReligionCode;
        partial void OnPtReligionCodeChanging(Nullable<global::System.Int64> value);
        partial void OnPtReligionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProfilePhoto
        {
            get
            {
                return _ProfilePhoto;
            }
            set
            {
                OnProfilePhotoChanging(value);
                ReportPropertyChanging("ProfilePhoto");
                _ProfilePhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProfilePhoto");
                OnProfilePhotoChanged();
            }
        }
        private global::System.String _ProfilePhoto;
        partial void OnProfilePhotoChanging(global::System.String value);
        partial void OnProfilePhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OtherPersonDetails
        {
            get
            {
                return _OtherPersonDetails;
            }
            set
            {
                OnOtherPersonDetailsChanging(value);
                ReportPropertyChanging("OtherPersonDetails");
                _OtherPersonDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OtherPersonDetails");
                OnOtherPersonDetailsChanged();
            }
        }
        private global::System.String _OtherPersonDetails;
        partial void OnOtherPersonDetailsChanging(global::System.String value);
        partial void OnOtherPersonDetailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NativeLand
        {
            get
            {
                return _NativeLand;
            }
            set
            {
                OnNativeLandChanging(value);
                ReportPropertyChanging("NativeLand");
                _NativeLand = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("NativeLand");
                OnNativeLandChanged();
            }
        }
        private global::System.String _NativeLand;
        partial void OnNativeLandChanging(global::System.String value);
        partial void OnNativeLandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersPermanentAddressText
        {
            get
            {
                return _PersPermanentAddressText;
            }
            set
            {
                OnPersPermanentAddressTextChanging(value);
                ReportPropertyChanging("PersPermanentAddressText");
                _PersPermanentAddressText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersPermanentAddressText");
                OnPersPermanentAddressTextChanged();
            }
        }
        private global::System.String _PersPermanentAddressText;
        partial void OnPersPermanentAddressTextChanging(global::System.String value);
        partial void OnPersPermanentAddressTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityProvinceID
        {
            get
            {
                return _CityProvinceID;
            }
            set
            {
                OnCityProvinceIDChanging(value);
                ReportPropertyChanging("CityProvinceID");
                _CityProvinceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityProvinceID");
                OnCityProvinceIDChanged();
            }
        }
        private global::System.String _CityProvinceID;
        partial void OnCityProvinceIDChanging(global::System.String value);
        partial void OnCityProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private global::System.String _DistrictID;
        partial void OnDistrictIDChanging(global::System.String value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WardID
        {
            get
            {
                return _WardID;
            }
            set
            {
                OnWardIDChanging(value);
                ReportPropertyChanging("WardID");
                _WardID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WardID");
                OnWardIDChanged();
            }
        }
        private global::System.String _WardID;
        partial void OnWardIDChanging(global::System.String value);
        partial void OnWardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LandLine
        {
            get
            {
                return _LandLine;
            }
            set
            {
                OnLandLineChanging(value);
                ReportPropertyChanging("LandLine");
                _LandLine = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LandLine");
                OnLandLineChanged();
            }
        }
        private global::System.String _LandLine;
        partial void OnLandLineChanging(global::System.String value);
        partial void OnLandLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersHomePhonePhN
        {
            get
            {
                return _PersHomePhonePhN;
            }
            set
            {
                OnPersHomePhonePhNChanging(value);
                ReportPropertyChanging("PersHomePhonePhN");
                _PersHomePhonePhN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PersHomePhonePhN");
                OnPersHomePhonePhNChanged();
            }
        }
        private global::System.String _PersHomePhonePhN;
        partial void OnPersHomePhonePhNChanging(global::System.String value);
        partial void OnPersHomePhonePhNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String sQRCode
        {
            get
            {
                return _sQRCode;
            }
            set
            {
                OnsQRCodeChanging(value);
                ReportPropertyChanging("sQRCode");
                _sQRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("sQRCode");
                OnsQRCodeChanged();
            }
        }
        private global::System.String _sQRCode;
        partial void OnsQRCodeChanging(global::System.String value);
        partial void OnsQRCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String uQRCode
        {
            get
            {
                return _uQRCode;
            }
            set
            {
                OnuQRCodeChanging(value);
                ReportPropertyChanging("uQRCode");
                _uQRCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("uQRCode");
                OnuQRCodeChanged();
            }
        }
        private global::System.String _uQRCode;
        partial void OnuQRCodeChanging(global::System.String value);
        partial void OnuQRCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                OnIDNumberChanging(value);
                ReportPropertyChanging("IDNumber");
                _IDNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDNumber");
                OnIDNumberChanged();
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PPN
        {
            get
            {
                return _PPN;
            }
            set
            {
                OnPPNChanging(value);
                ReportPropertyChanging("PPN");
                _PPN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PPN");
                OnPPNChanged();
            }
        }
        private global::System.String _PPN;
        partial void OnPPNChanging(global::System.String value);
        partial void OnPPNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PlaceOfIssue
        {
            get
            {
                return _PlaceOfIssue;
            }
            set
            {
                OnPlaceOfIssueChanging(value);
                ReportPropertyChanging("PlaceOfIssue");
                _PlaceOfIssue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PlaceOfIssue");
                OnPlaceOfIssueChanged();
            }
        }
        private global::System.String _PlaceOfIssue;
        partial void OnPlaceOfIssueChanging(global::System.String value);
        partial void OnPlaceOfIssueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersEducationalLevelCode
        {
            get
            {
                return _PersEducationalLevelCode;
            }
            set
            {
                OnPersEducationalLevelCodeChanging(value);
                ReportPropertyChanging("PersEducationalLevelCode");
                _PersEducationalLevelCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersEducationalLevelCode");
                OnPersEducationalLevelCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _PersEducationalLevelCode;
        partial void OnPersEducationalLevelCodeChanging(Nullable<global::System.Int64> value);
        partial void OnPersEducationalLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersMaritalStatusCode
        {
            get
            {
                return _PersMaritalStatusCode;
            }
            set
            {
                OnPersMaritalStatusCodeChanging(value);
                ReportPropertyChanging("PersMaritalStatusCode");
                _PersMaritalStatusCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersMaritalStatusCode");
                OnPersMaritalStatusCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _PersMaritalStatusCode;
        partial void OnPersMaritalStatusCodeChanging(Nullable<global::System.Int64> value);
        partial void OnPersMaritalStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 PersonType
        {
            get
            {
                return _PersonType;
            }
            set
            {
                OnPersonTypeChanging(value);
                ReportPropertyChanging("PersonType");
                _PersonType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonType");
                OnPersonTypeChanged();
            }
        }
        private global::System.Int16 _PersonType;
        partial void OnPersonTypeChanging(global::System.Int16 value);
        partial void OnPersonTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_IndivLivingArrID
        {
            get
            {
                return _V_IndivLivingArrID;
            }
            set
            {
                OnV_IndivLivingArrIDChanging(value);
                ReportPropertyChanging("V_IndivLivingArrID");
                _V_IndivLivingArrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_IndivLivingArrID");
                OnV_IndivLivingArrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _V_IndivLivingArrID;
        partial void OnV_IndivLivingArrIDChanging(Nullable<global::System.Int64> value);
        partial void OnV_IndivLivingArrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NationnalityCode
        {
            get
            {
                return _NationnalityCode;
            }
            set
            {
                OnNationnalityCodeChanging(value);
                ReportPropertyChanging("NationnalityCode");
                _NationnalityCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NationnalityCode");
                OnNationnalityCodeChanged();
            }
        }
        private global::System.String _NationnalityCode;
        partial void OnNationnalityCodeChanging(global::System.String value);
        partial void OnNationnalityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private global::System.String _LastUpdBy;
        partial void OnLastUpdByChanging(global::System.String value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_Person", "EduLevel")]
        public EntityCollection<EduLevel> EduLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_Person", "EduLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_Person", "EduLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_Person", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Employee_Person", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Employee_Person", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_Employee_Person", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_Employee_Person", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employeer_Person", "Employeer")]
        public EntityCollection<Employeer> Employeer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employeer>("SureHisModel.FK_Employeer_Person", "Employeer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employeer>("SureHisModel.FK_Employeer_Person", "Employeer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCStakeholder_Person", "HCStakeholder")]
        public EntityCollection<HCStakeholder> HCStakeholder
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCStakeholder>("SureHisModel.FK_HCStakeholder_Person", "HCStakeholder");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCStakeholder>("SureHisModel.FK_HCStakeholder_Person", "HCStakeholder", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LanguageLevel_Person", "LanguageLevel")]
        public EntityCollection<LanguageLevel> LanguageLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageLevel>("SureHisModel.FK_LanguageLevel_Person", "LanguageLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageLevel>("SureHisModel.FK_LanguageLevel_Person", "LanguageLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NetworkGuestAccount_Person", "NetworkGuestAccount")]
        public NetworkGuestAccount NetworkGuestAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Person", "NetworkGuestAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Person", "NetworkGuestAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NetworkGuestAccount> NetworkGuestAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Person", "NetworkGuestAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NetworkGuestAccount>("SureHisModel.FK_NetworkGuestAccount_Person", "NetworkGuestAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NextOfKins_Person", "NextOfKins")]
        public EntityCollection<NextOfKins> NextOfKins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NextOfKins>("SureHisModel.FK_NextOfKins_Person", "NextOfKins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NextOfKins>("SureHisModel.FK_NextOfKins_Person", "NextOfKins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_Person", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_Patient_Person", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_Patient_Person", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_Patient_Person", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_Patient_Person", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refCountry", "refCountry")]
        public refCountry refCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Person_refCountry", "refCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Person_refCountry", "refCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCountry> refCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_Person_refCountry", "refCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCountry>("SureHisModel.FK_Person_refCountry", "refCountry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refDistrict", "refDistrict")]
        public refDistrict refDistrict
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_Person_refDistrict", "refDistrict").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_Person_refDistrict", "refDistrict").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDistrict> refDistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_Person_refDistrict", "refDistrict");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDistrict>("SureHisModel.FK_Person_refDistrict", "refDistrict", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refEducationalLevel", "refEducationalLevel")]
        public refEducationalLevel refEducationalLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEducationalLevel>("SureHisModel.FK_Person_refEducationalLevel", "refEducationalLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEducationalLevel>("SureHisModel.FK_Person_refEducationalLevel", "refEducationalLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refEducationalLevel> refEducationalLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEducationalLevel>("SureHisModel.FK_Person_refEducationalLevel", "refEducationalLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refEducationalLevel>("SureHisModel.FK_Person_refEducationalLevel", "refEducationalLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refElthnic", "refElthnic")]
        public refElthnic refElthnic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refElthnic>("SureHisModel.FK_Person_refElthnic", "refElthnic").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refElthnic>("SureHisModel.FK_Person_refElthnic", "refElthnic").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refElthnic> refElthnicReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refElthnic>("SureHisModel.FK_Person_refElthnic", "refElthnic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refElthnic>("SureHisModel.FK_Person_refElthnic", "refElthnic", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersGender", "refPersGender")]
        public refPersGender refPersGender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_Person_refPersGender", "refPersGender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_Person_refPersGender", "refPersGender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPersGender> refPersGenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_Person_refPersGender", "refPersGender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPersGender>("SureHisModel.FK_Person_refPersGender", "refPersGender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersMaritalStatus", "refPersMaritalStatus")]
        public refPersMaritalStatus refPersMaritalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersMaritalStatus>("SureHisModel.FK_Person_refPersMaritalStatus", "refPersMaritalStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersMaritalStatus>("SureHisModel.FK_Person_refPersMaritalStatus", "refPersMaritalStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPersMaritalStatus> refPersMaritalStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersMaritalStatus>("SureHisModel.FK_Person_refPersMaritalStatus", "refPersMaritalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPersMaritalStatus>("SureHisModel.FK_Person_refPersMaritalStatus", "refPersMaritalStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersRace", "refPersRace")]
        public refPersRace refPersRace
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersRace>("SureHisModel.FK_Person_refPersRace", "refPersRace").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersRace>("SureHisModel.FK_Person_refPersRace", "refPersRace").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPersRace> refPersRaceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersRace>("SureHisModel.FK_Person_refPersRace", "refPersRace");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPersRace>("SureHisModel.FK_Person_refPersRace", "refPersRace", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refProvince", "refCityProvince")]
        public refCityProvince refCityProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_Person_refProvince", "refCityProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_Person_refProvince", "refCityProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCityProvince> refCityProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_Person_refProvince", "refCityProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCityProvince>("SureHisModel.FK_Person_refProvince", "refCityProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refReligion", "refReligion")]
        public refReligion refReligion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refReligion>("SureHisModel.FK_Person_refReligion", "refReligion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refReligion>("SureHisModel.FK_Person_refReligion", "refReligion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refReligion> refReligionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refReligion>("SureHisModel.FK_Person_refReligion", "refReligion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refReligion>("SureHisModel.FK_Person_refReligion", "refReligion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refWard", "refWard")]
        public refWard refWard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refWard>("SureHisModel.FK_Person_refWard", "refWard").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refWard>("SureHisModel.FK_Person_refWard", "refWard").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refWard> refWardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refWard>("SureHisModel.FK_Person_refWard", "refWard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refWard>("SureHisModel.FK_Person_refWard", "refWard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonRole_Person", "PersonRole")]
        public EntityCollection<PersonRole> PersonRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("SureHisModel.FK_PersonRole_Person", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("SureHisModel.FK_PersonRole_Person", "PersonRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UserAccount_Person", "UserAccount")]
        public EntityCollection<UserAccount> UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserAccount>("SureHisModel.FK_UserAccount_Person", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserAccount>("SureHisModel.FK_UserAccount_Person", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PersonalProperty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonalProperty : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonalProperty object.
        /// </summary>
        /// <param name="perProID">Initial value of the PerProID property.</param>
        public static PersonalProperty CreatePersonalProperty(global::System.Int64 perProID)
        {
            PersonalProperty personalProperty = new PersonalProperty();
            personalProperty.PerProID = perProID;
            return personalProperty;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PerProID
        {
            get
            {
                return _PerProID;
            }
            set
            {
                if (_PerProID != value)
                {
                    OnPerProIDChanging(value);
                    ReportPropertyChanging("PerProID");
                    _PerProID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PerProID");
                    OnPerProIDChanged();
                }
            }
        }
        private global::System.Int64 _PerProID;
        partial void OnPerProIDChanging(global::System.Int64 value);
        partial void OnPerProIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Taste
        {
            get
            {
                return _Taste;
            }
            set
            {
                OnTasteChanging(value);
                ReportPropertyChanging("Taste");
                _Taste = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Taste");
                OnTasteChanged();
            }
        }
        private global::System.String _Taste;
        partial void OnTasteChanging(global::System.String value);
        partial void OnTasteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private Nullable<global::System.Double> _Height;
        partial void OnHeightChanging(Nullable<global::System.Double> value);
        partial void OnHeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Weight
        {
            get
            {
                return _Weight;
            }
            set
            {
                OnWeightChanging(value);
                ReportPropertyChanging("Weight");
                _Weight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Weight");
                OnWeightChanged();
            }
        }
        private Nullable<global::System.Double> _Weight;
        partial void OnWeightChanging(Nullable<global::System.Double> value);
        partial void OnWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> UOMS
        {
            get
            {
                return _UOMS;
            }
            set
            {
                OnUOMSChanging(value);
                ReportPropertyChanging("UOMS");
                _UOMS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UOMS");
                OnUOMSChanged();
            }
        }
        private Nullable<global::System.Byte> _UOMS;
        partial void OnUOMSChanging(Nullable<global::System.Byte> value);
        partial void OnUOMSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HealthStatus
        {
            get
            {
                return _HealthStatus;
            }
            set
            {
                OnHealthStatusChanging(value);
                ReportPropertyChanging("HealthStatus");
                _HealthStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HealthStatus");
                OnHealthStatusChanged();
            }
        }
        private global::System.String _HealthStatus;
        partial void OnHealthStatusChanging(global::System.String value);
        partial void OnHealthStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Personality
        {
            get
            {
                return _Personality;
            }
            set
            {
                OnPersonalityChanging(value);
                ReportPropertyChanging("Personality");
                _Personality = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Personality");
                OnPersonalityChanged();
            }
        }
        private global::System.String _Personality;
        partial void OnPersonalityChanging(global::System.String value);
        partial void OnPersonalityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Physiognomy
        {
            get
            {
                return _Physiognomy;
            }
            set
            {
                OnPhysiognomyChanging(value);
                ReportPropertyChanging("Physiognomy");
                _Physiognomy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Physiognomy");
                OnPhysiognomyChanged();
            }
        }
        private global::System.String _Physiognomy;
        partial void OnPhysiognomyChanging(global::System.String value);
        partial void OnPhysiognomyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BloodGroup
        {
            get
            {
                return _BloodGroup;
            }
            set
            {
                OnBloodGroupChanging(value);
                ReportPropertyChanging("BloodGroup");
                _BloodGroup = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BloodGroup");
                OnBloodGroupChanged();
            }
        }
        private global::System.String _BloodGroup;
        partial void OnBloodGroupChanging(global::System.String value);
        partial void OnBloodGroupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Aptitude
        {
            get
            {
                return _Aptitude;
            }
            set
            {
                OnAptitudeChanging(value);
                ReportPropertyChanging("Aptitude");
                _Aptitude = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Aptitude");
                OnAptitudeChanged();
            }
        }
        private global::System.String _Aptitude;
        partial void OnAptitudeChanging(global::System.String value);
        partial void OnAptitudeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonalProperty_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_PersonalProperty_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_PersonalProperty_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_PersonalProperty_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_PersonalProperty_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PersonRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonRole object.
        /// </summary>
        /// <param name="personRoleID">Initial value of the PersonRoleID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="isPrimaryRole">Initial value of the IsPrimaryRole property.</param>
        public static PersonRole CreatePersonRole(global::System.Int64 personRoleID, global::System.Int64 roleID, global::System.Int64 personID, global::System.Boolean isPrimaryRole)
        {
            PersonRole personRole = new PersonRole();
            personRole.PersonRoleID = personRoleID;
            personRole.RoleID = roleID;
            personRole.PersonID = personID;
            personRole.IsPrimaryRole = isPrimaryRole;
            return personRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonRoleID
        {
            get
            {
                return _PersonRoleID;
            }
            set
            {
                if (_PersonRoleID != value)
                {
                    OnPersonRoleIDChanging(value);
                    ReportPropertyChanging("PersonRoleID");
                    _PersonRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonRoleID");
                    OnPersonRoleIDChanged();
                }
            }
        }
        private global::System.Int64 _PersonRoleID;
        partial void OnPersonRoleIDChanging(global::System.Int64 value);
        partial void OnPersonRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int64 _PersonID;
        partial void OnPersonIDChanging(global::System.Int64 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryRole
        {
            get
            {
                return _IsPrimaryRole;
            }
            set
            {
                OnIsPrimaryRoleChanging(value);
                ReportPropertyChanging("IsPrimaryRole");
                _IsPrimaryRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimaryRole");
                OnIsPrimaryRoleChanged();
            }
        }
        private global::System.Boolean _IsPrimaryRole;
        partial void OnIsPrimaryRoleChanging(global::System.Boolean value);
        partial void OnIsPrimaryRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBlocked
        {
            get
            {
                return _IsBlocked;
            }
            set
            {
                OnIsBlockedChanging(value);
                ReportPropertyChanging("IsBlocked");
                _IsBlocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBlocked");
                OnIsBlockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBlocked;
        partial void OnIsBlockedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBlockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonRole_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_PersonRole_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_PersonRole_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_PersonRole_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_PersonRole_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonRole_refRole", "refRole")]
        public refRole refRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_PersonRole_refRole", "refRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_PersonRole_refRole", "refRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refRole> refRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_PersonRole_refRole", "refRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refRole>("SureHisModel.FK_PersonRole_refRole", "refRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PharmaceuticalCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PharmaceuticalCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PharmaceuticalCompany object.
        /// </summary>
        /// <param name="pharmcID">Initial value of the PharmcID property.</param>
        /// <param name="pharmcName">Initial value of the PharmcName property.</param>
        public static PharmaceuticalCompany CreatePharmaceuticalCompany(global::System.Int64 pharmcID, global::System.String pharmcName)
        {
            PharmaceuticalCompany pharmaceuticalCompany = new PharmaceuticalCompany();
            pharmaceuticalCompany.PharmcID = pharmcID;
            pharmaceuticalCompany.PharmcName = pharmcName;
            return pharmaceuticalCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PharmcID
        {
            get
            {
                return _PharmcID;
            }
            set
            {
                if (_PharmcID != value)
                {
                    OnPharmcIDChanging(value);
                    ReportPropertyChanging("PharmcID");
                    _PharmcID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PharmcID");
                    OnPharmcIDChanged();
                }
            }
        }
        private global::System.Int64 _PharmcID;
        partial void OnPharmcIDChanging(global::System.Int64 value);
        partial void OnPharmcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PharmcName
        {
            get
            {
                return _PharmcName;
            }
            set
            {
                OnPharmcNameChanging(value);
                ReportPropertyChanging("PharmcName");
                _PharmcName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PharmcName");
                OnPharmcNameChanged();
            }
        }
        private global::System.String _PharmcName;
        partial void OnPharmcNameChanging(global::System.String value);
        partial void OnPharmcNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> OUID
        {
            get
            {
                return _OUID;
            }
            set
            {
                OnOUIDChanging(value);
                ReportPropertyChanging("OUID");
                _OUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OUID");
                OnOUIDChanged();
            }
        }
        private Nullable<global::System.Int64> _OUID;
        partial void OnOUIDChanging(Nullable<global::System.Int64> value);
        partial void OnOUIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LotNumber_PharmaceuticalCompany", "LotNumber")]
        public EntityCollection<LotNumber> LotNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LotNumber>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "LotNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LotNumber>("SureHisModel.FK_LotNumber_PharmaceuticalCompany", "LotNumber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PharmaceuticalCompany_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_PharmaceuticalCompany_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_PharmaceuticalCompany_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_PharmaceuticalCompany_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SureHisModel.FK_PharmaceuticalCompany_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ProvidableDrugs_PharmaceuticalCompany", "ProvidableDrugs")]
        public EntityCollection<ProvidableDrugs> ProvidableDrugs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProvidableDrugs>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "ProvidableDrugs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProvidableDrugs>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "ProvidableDrugs", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PhysicalExamination")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PhysicalExamination : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PhysicalExamination object.
        /// </summary>
        /// <param name="phyExamID">Initial value of the PhyExamID property.</param>
        /// <param name="medEncnID">Initial value of the MedEncnID property.</param>
        /// <param name="hExmDtm">Initial value of the HExmDtm property.</param>
        /// <param name="hExmFindingCode">Initial value of the HExmFindingCode property.</param>
        /// <param name="hExmFindingValueQty">Initial value of the HExmFindingValueQty property.</param>
        /// <param name="modifiedDate">Initial value of the ModifiedDate property.</param>
        public static PhysicalExamination CreatePhysicalExamination(global::System.Int64 phyExamID, global::System.Int64 medEncnID, global::System.DateTime hExmDtm, global::System.Int64 hExmFindingCode, global::System.String hExmFindingValueQty, global::System.DateTime modifiedDate)
        {
            PhysicalExamination physicalExamination = new PhysicalExamination();
            physicalExamination.PhyExamID = phyExamID;
            physicalExamination.MedEncnID = medEncnID;
            physicalExamination.HExmDtm = hExmDtm;
            physicalExamination.HExmFindingCode = hExmFindingCode;
            physicalExamination.HExmFindingValueQty = hExmFindingValueQty;
            physicalExamination.ModifiedDate = modifiedDate;
            return physicalExamination;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PhyExamID
        {
            get
            {
                return _PhyExamID;
            }
            set
            {
                if (_PhyExamID != value)
                {
                    OnPhyExamIDChanging(value);
                    ReportPropertyChanging("PhyExamID");
                    _PhyExamID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PhyExamID");
                    OnPhyExamIDChanged();
                }
            }
        }
        private global::System.Int64 _PhyExamID;
        partial void OnPhyExamIDChanging(global::System.Int64 value);
        partial void OnPhyExamIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private global::System.Int64 _MedEncnID;
        partial void OnMedEncnIDChanging(global::System.Int64 value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HExmDtm
        {
            get
            {
                return _HExmDtm;
            }
            set
            {
                OnHExmDtmChanging(value);
                ReportPropertyChanging("HExmDtm");
                _HExmDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HExmDtm");
                OnHExmDtmChanged();
            }
        }
        private global::System.DateTime _HExmDtm;
        partial void OnHExmDtmChanging(global::System.DateTime value);
        partial void OnHExmDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HExmFindingCode
        {
            get
            {
                return _HExmFindingCode;
            }
            set
            {
                OnHExmFindingCodeChanging(value);
                ReportPropertyChanging("HExmFindingCode");
                _HExmFindingCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HExmFindingCode");
                OnHExmFindingCodeChanged();
            }
        }
        private global::System.Int64 _HExmFindingCode;
        partial void OnHExmFindingCodeChanging(global::System.Int64 value);
        partial void OnHExmFindingCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HExmFindingValueQty
        {
            get
            {
                return _HExmFindingValueQty;
            }
            set
            {
                OnHExmFindingValueQtyChanging(value);
                ReportPropertyChanging("HExmFindingValueQty");
                _HExmFindingValueQty = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HExmFindingValueQty");
                OnHExmFindingValueQtyChanged();
            }
        }
        private global::System.String _HExmFindingValueQty;
        partial void OnHExmFindingValueQtyChanging(global::System.String value);
        partial void OnHExmFindingValueQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HExmExaminerName
        {
            get
            {
                return _HExmExaminerName;
            }
            set
            {
                OnHExmExaminerNameChanging(value);
                ReportPropertyChanging("HExmExaminerName");
                _HExmExaminerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HExmExaminerName");
                OnHExmExaminerNameChanged();
            }
        }
        private global::System.String _HExmExaminerName;
        partial void OnHExmExaminerNameChanging(global::System.String value);
        partial void OnHExmExaminerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private global::System.DateTime _ModifiedDate;
        partial void OnModifiedDateChanging(global::System.DateTime value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_PhysicalExamination_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PhysicalExamination_RefExamObservation", "refExamObservation")]
        public refExamObservation refExamObservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamObservation>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "refExamObservation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamObservation>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "refExamObservation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refExamObservation> refExamObservationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refExamObservation>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "refExamObservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refExamObservation>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "refExamObservation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Prescription")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Prescription : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Prescription object.
        /// </summary>
        /// <param name="rxID">Initial value of the RxID property.</param>
        /// <param name="iCD10">Initial value of the ICD10 property.</param>
        public static Prescription CreatePrescription(global::System.Int64 rxID, global::System.Int64 iCD10)
        {
            Prescription prescription = new Prescription();
            prescription.RxID = rxID;
            prescription.ICD10 = iCD10;
            return prescription;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RxID
        {
            get
            {
                return _RxID;
            }
            set
            {
                if (_RxID != value)
                {
                    OnRxIDChanging(value);
                    ReportPropertyChanging("RxID");
                    _RxID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RxID");
                    OnRxIDChanged();
                }
            }
        }
        private global::System.Int64 _RxID;
        partial void OnRxIDChanging(global::System.Int64 value);
        partial void OnRxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RxCode
        {
            get
            {
                return _RxCode;
            }
            set
            {
                OnRxCodeChanging(value);
                ReportPropertyChanging("RxCode");
                _RxCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RxCode");
                OnRxCodeChanged();
            }
        }
        private global::System.String _RxCode;
        partial void OnRxCodeChanging(global::System.String value);
        partial void OnRxCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ICD10
        {
            get
            {
                return _ICD10;
            }
            set
            {
                OnICD10Changing(value);
                ReportPropertyChanging("ICD10");
                _ICD10 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICD10");
                OnICD10Changed();
            }
        }
        private global::System.Int64 _ICD10;
        partial void OnICD10Changing(global::System.Int64 value);
        partial void OnICD10Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagDesc
        {
            get
            {
                return _DiagDesc;
            }
            set
            {
                OnDiagDescChanging(value);
                ReportPropertyChanging("DiagDesc");
                _DiagDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagDesc");
                OnDiagDescChanged();
            }
        }
        private global::System.String _DiagDesc;
        partial void OnDiagDescChanging(global::System.String value);
        partial void OnDiagDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedEncnID
        {
            get
            {
                return _MedEncnID;
            }
            set
            {
                OnMedEncnIDChanging(value);
                ReportPropertyChanging("MedEncnID");
                _MedEncnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEncnID");
                OnMedEncnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedEncnID;
        partial void OnMedEncnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedEncnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedEnctrDiagID
        {
            get
            {
                return _MedEnctrDiagID;
            }
            set
            {
                OnMedEnctrDiagIDChanging(value);
                ReportPropertyChanging("MedEnctrDiagID");
                _MedEnctrDiagID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedEnctrDiagID");
                OnMedEnctrDiagIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedEnctrDiagID;
        partial void OnMedEnctrDiagIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedEnctrDiagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MedcnStartDtm
        {
            get
            {
                return _MedcnStartDtm;
            }
            set
            {
                OnMedcnStartDtmChanging(value);
                ReportPropertyChanging("MedcnStartDtm");
                _MedcnStartDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnStartDtm");
                OnMedcnStartDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _MedcnStartDtm;
        partial void OnMedcnStartDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnMedcnStartDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MedcnStopDtm
        {
            get
            {
                return _MedcnStopDtm;
            }
            set
            {
                OnMedcnStopDtmChanging(value);
                ReportPropertyChanging("MedcnStopDtm");
                _MedcnStopDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnStopDtm");
                OnMedcnStopDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _MedcnStopDtm;
        partial void OnMedcnStopDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnMedcnStopDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DrAdvice
        {
            get
            {
                return _DrAdvice;
            }
            set
            {
                OnDrAdviceChanging(value);
                ReportPropertyChanging("DrAdvice");
                _DrAdvice = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DrAdvice");
                OnDrAdviceChanged();
            }
        }
        private global::System.String _DrAdvice;
        partial void OnDrAdviceChanging(global::System.String value);
        partial void OnDrAdviceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReExamDate
        {
            get
            {
                return _ReExamDate;
            }
            set
            {
                OnReExamDateChanging(value);
                ReportPropertyChanging("ReExamDate");
                _ReExamDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReExamDate");
                OnReExamDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReExamDate;
        partial void OnReExamDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReExamDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ApptID
        {
            get
            {
                return _ApptID;
            }
            set
            {
                OnApptIDChanging(value);
                ReportPropertyChanging("ApptID");
                _ApptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApptID");
                OnApptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ApptID;
        partial void OnApptIDChanging(Nullable<global::System.Int64> value);
        partial void OnApptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NeedHoldCnsl
        {
            get
            {
                return _NeedHoldCnsl;
            }
            set
            {
                OnNeedHoldCnslChanging(value);
                ReportPropertyChanging("NeedHoldCnsl");
                _NeedHoldCnsl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NeedHoldCnsl");
                OnNeedHoldCnslChanged();
            }
        }
        private Nullable<global::System.Boolean> _NeedHoldCnsl;
        partial void OnNeedHoldCnslChanging(Nullable<global::System.Boolean> value);
        partial void OnNeedHoldCnslChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String V_PmtMethod
        {
            get
            {
                return _V_PmtMethod;
            }
            set
            {
                OnV_PmtMethodChanging(value);
                ReportPropertyChanging("V_PmtMethod");
                _V_PmtMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("V_PmtMethod");
                OnV_PmtMethodChanged();
            }
        }
        private global::System.String _V_PmtMethod;
        partial void OnV_PmtMethodChanging(global::System.String value);
        partial void OnV_PmtMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String V_PmtStatus
        {
            get
            {
                return _V_PmtStatus;
            }
            set
            {
                OnV_PmtStatusChanging(value);
                ReportPropertyChanging("V_PmtStatus");
                _V_PmtStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("V_PmtStatus");
                OnV_PmtStatusChanged();
            }
        }
        private global::System.String _V_PmtStatus;
        partial void OnV_PmtStatusChanging(global::System.String value);
        partial void OnV_PmtStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ApprovedInsurID
        {
            get
            {
                return _ApprovedInsurID;
            }
            set
            {
                OnApprovedInsurIDChanging(value);
                ReportPropertyChanging("ApprovedInsurID");
                _ApprovedInsurID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ApprovedInsurID");
                OnApprovedInsurIDChanged();
            }
        }
        private global::System.String _ApprovedInsurID;
        partial void OnApprovedInsurIDChanging(global::System.String value);
        partial void OnApprovedInsurIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_RxIssueType
        {
            get
            {
                return _V_RxIssueType;
            }
            set
            {
                OnV_RxIssueTypeChanging(value);
                ReportPropertyChanging("V_RxIssueType");
                _V_RxIssueType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_RxIssueType");
                OnV_RxIssueTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_RxIssueType;
        partial void OnV_RxIssueTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_RxIssueTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_RxStatus
        {
            get
            {
                return _V_RxStatus;
            }
            set
            {
                OnV_RxStatusChanging(value);
                ReportPropertyChanging("V_RxStatus");
                _V_RxStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_RxStatus");
                OnV_RxStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_RxStatus;
        partial void OnV_RxStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_RxStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_RxCatg
        {
            get
            {
                return _V_RxCatg;
            }
            set
            {
                OnV_RxCatgChanging(value);
                ReportPropertyChanging("V_RxCatg");
                _V_RxCatg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_RxCatg");
                OnV_RxCatgChanged();
            }
        }
        private Nullable<global::System.Int64> _V_RxCatg;
        partial void OnV_RxCatgChanging(Nullable<global::System.Int64> value);
        partial void OnV_RxCatgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CureNum
        {
            get
            {
                return _CureNum;
            }
            set
            {
                OnCureNumChanging(value);
                ReportPropertyChanging("CureNum");
                _CureNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CureNum");
                OnCureNumChanged();
            }
        }
        private Nullable<global::System.Byte> _CureNum;
        partial void OnCureNumChanging(Nullable<global::System.Byte> value);
        partial void OnCureNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsStabilityStatus
        {
            get
            {
                return _IsStabilityStatus;
            }
            set
            {
                OnIsStabilityStatusChanging(value);
                ReportPropertyChanging("IsStabilityStatus");
                _IsStabilityStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsStabilityStatus");
                OnIsStabilityStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsStabilityStatus;
        partial void OnIsStabilityStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnIsStabilityStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_Appointment", "Appointment")]
        public Appointment Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Prescription_Appointment", "Appointment").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Prescription_Appointment", "Appointment").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Appointment> AppointmentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Appointment>("SureHisModel.FK_Prescription_Appointment", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Appointment>("SureHisModel.FK_Prescription_Appointment", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_ICD10", "ICD10")]
        public ICD10 ICD101
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_Prescription_ICD10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_Prescription_ICD10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD101Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_Prescription_ICD10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_Prescription_ICD10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalBill_Prescription", "MedicalBill")]
        public EntityCollection<MedicalBill> MedicalBill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalBill>("SureHisModel.FK_MedicalBill_Prescription", "MedicalBill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalBill>("SureHisModel.FK_MedicalBill_Prescription", "MedicalBill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Prescription_MedicalEncounter", "MedicalEncounter")]
        public MedicalEncounter MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_Prescription_MedicalEncounter", "MedicalEncounter").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_Prescription_MedicalEncounter", "MedicalEncounter").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEncounter> MedicalEncounterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEncounter>("SureHisModel.FK_Prescription_MedicalEncounter", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEncounter>("SureHisModel.FK_Prescription_MedicalEncounter", "MedicalEncounter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_Prescription", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_Prescription", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_Prescription", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionHistory_Prescription", "PrescriptionHistory")]
        public EntityCollection<PrescriptionHistory> PrescriptionHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionHistory>("SureHisModel.FK_PrescriptionHistory_Prescription", "PrescriptionHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionHistory>("SureHisModel.FK_PrescriptionHistory_Prescription", "PrescriptionHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RxHoldConsultation_Prescription", "RxHoldConsultation")]
        public EntityCollection<RxHoldConsultation> RxHoldConsultation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RxHoldConsultation>("SureHisModel.FK_RxHoldConsultation_Prescription", "RxHoldConsultation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RxHoldConsultation>("SureHisModel.FK_RxHoldConsultation_Prescription", "RxHoldConsultation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PrescriptionDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrescriptionDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrescriptionDetail object.
        /// </summary>
        /// <param name="rxsID">Initial value of the RxsID property.</param>
        /// <param name="rxID">Initial value of the RxID property.</param>
        /// <param name="medcnNameText">Initial value of the MedcnNameText property.</param>
        /// <param name="medcnDispenseQty">Initial value of the MedcnDispenseQty property.</param>
        public static PrescriptionDetail CreatePrescriptionDetail(global::System.Int64 rxsID, global::System.Int64 rxID, global::System.String medcnNameText, global::System.Double medcnDispenseQty)
        {
            PrescriptionDetail prescriptionDetail = new PrescriptionDetail();
            prescriptionDetail.RxsID = rxsID;
            prescriptionDetail.RxID = rxID;
            prescriptionDetail.MedcnNameText = medcnNameText;
            prescriptionDetail.MedcnDispenseQty = medcnDispenseQty;
            return prescriptionDetail;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RxsID
        {
            get
            {
                return _RxsID;
            }
            set
            {
                if (_RxsID != value)
                {
                    OnRxsIDChanging(value);
                    ReportPropertyChanging("RxsID");
                    _RxsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RxsID");
                    OnRxsIDChanged();
                }
            }
        }
        private global::System.Int64 _RxsID;
        partial void OnRxsIDChanging(global::System.Int64 value);
        partial void OnRxsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RxID
        {
            get
            {
                return _RxID;
            }
            set
            {
                OnRxIDChanging(value);
                ReportPropertyChanging("RxID");
                _RxID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RxID");
                OnRxIDChanged();
            }
        }
        private global::System.Int64 _RxID;
        partial void OnRxIDChanging(global::System.Int64 value);
        partial void OnRxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedcnID
        {
            get
            {
                return _MedcnID;
            }
            set
            {
                OnMedcnIDChanging(value);
                ReportPropertyChanging("MedcnID");
                _MedcnID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnID");
                OnMedcnIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedcnID;
        partial void OnMedcnIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedcnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcnNameText
        {
            get
            {
                return _MedcnNameText;
            }
            set
            {
                OnMedcnNameTextChanging(value);
                ReportPropertyChanging("MedcnNameText");
                _MedcnNameText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedcnNameText");
                OnMedcnNameTextChanged();
            }
        }
        private global::System.String _MedcnNameText;
        partial void OnMedcnNameTextChanging(global::System.String value);
        partial void OnMedcnNameTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcPrincipleName
        {
            get
            {
                return _AcPrincipleName;
            }
            set
            {
                OnAcPrincipleNameChanging(value);
                ReportPropertyChanging("AcPrincipleName");
                _AcPrincipleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcPrincipleName");
                OnAcPrincipleNameChanged();
            }
        }
        private global::System.String _AcPrincipleName;
        partial void OnAcPrincipleNameChanging(global::System.String value);
        partial void OnAcPrincipleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> MedcnDoseQty
        {
            get
            {
                return _MedcnDoseQty;
            }
            set
            {
                OnMedcnDoseQtyChanging(value);
                ReportPropertyChanging("MedcnDoseQty");
                _MedcnDoseQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDoseQty");
                OnMedcnDoseQtyChanged();
            }
        }
        private Nullable<global::System.Double> _MedcnDoseQty;
        partial void OnMedcnDoseQtyChanging(Nullable<global::System.Double> value);
        partial void OnMedcnDoseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnDoseUnitCode
        {
            get
            {
                return _MedcnDoseUnitCode;
            }
            set
            {
                OnMedcnDoseUnitCodeChanging(value);
                ReportPropertyChanging("MedcnDoseUnitCode");
                _MedcnDoseUnitCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDoseUnitCode");
                OnMedcnDoseUnitCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnDoseUnitCode;
        partial void OnMedcnDoseUnitCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnDoseUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminFreqCode
        {
            get
            {
                return _MedcnAdminFreqCode;
            }
            set
            {
                OnMedcnAdminFreqCodeChanging(value);
                ReportPropertyChanging("MedcnAdminFreqCode");
                _MedcnAdminFreqCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminFreqCode");
                OnMedcnAdminFreqCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminFreqCode;
        partial void OnMedcnAdminFreqCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminFreqCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminFreqPerDay
        {
            get
            {
                return _MedcnAdminFreqPerDay;
            }
            set
            {
                OnMedcnAdminFreqPerDayChanging(value);
                ReportPropertyChanging("MedcnAdminFreqPerDay");
                _MedcnAdminFreqPerDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminFreqPerDay");
                OnMedcnAdminFreqPerDayChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminFreqPerDay;
        partial void OnMedcnAdminFreqPerDayChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminFreqPerDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double MedcnDispenseQty
        {
            get
            {
                return _MedcnDispenseQty;
            }
            set
            {
                OnMedcnDispenseQtyChanging(value);
                ReportPropertyChanging("MedcnDispenseQty");
                _MedcnDispenseQty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnDispenseQty");
                OnMedcnDispenseQtyChanged();
            }
        }
        private global::System.Double _MedcnDispenseQty;
        partial void OnMedcnDispenseQtyChanging(global::System.Double value);
        partial void OnMedcnDispenseQtyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> MedcnUsingDuration
        {
            get
            {
                return _MedcnUsingDuration;
            }
            set
            {
                OnMedcnUsingDurationChanging(value);
                ReportPropertyChanging("MedcnUsingDuration");
                _MedcnUsingDuration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnUsingDuration");
                OnMedcnUsingDurationChanged();
            }
        }
        private Nullable<global::System.Byte> _MedcnUsingDuration;
        partial void OnMedcnUsingDurationChanging(Nullable<global::System.Byte> value);
        partial void OnMedcnUsingDurationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnAdminRouteCode
        {
            get
            {
                return _MedcnAdminRouteCode;
            }
            set
            {
                OnMedcnAdminRouteCodeChanging(value);
                ReportPropertyChanging("MedcnAdminRouteCode");
                _MedcnAdminRouteCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnAdminRouteCode");
                OnMedcnAdminRouteCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnAdminRouteCode;
        partial void OnMedcnAdminRouteCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnAdminRouteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MedcnInstructionCode
        {
            get
            {
                return _MedcnInstructionCode;
            }
            set
            {
                OnMedcnInstructionCodeChanging(value);
                ReportPropertyChanging("MedcnInstructionCode");
                _MedcnInstructionCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedcnInstructionCode");
                OnMedcnInstructionCodeChanged();
            }
        }
        private Nullable<global::System.Int16> _MedcnInstructionCode;
        partial void OnMedcnInstructionCodeChanging(Nullable<global::System.Int16> value);
        partial void OnMedcnInstructionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnNoteText
        {
            get
            {
                return _MedcnNoteText;
            }
            set
            {
                OnMedcnNoteTextChanging(value);
                ReportPropertyChanging("MedcnNoteText");
                _MedcnNoteText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnNoteText");
                OnMedcnNoteTextChanged();
            }
        }
        private global::System.String _MedcnNoteText;
        partial void OnMedcnNoteTextChanging(global::System.String value);
        partial void OnMedcnNoteTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtClassID
        {
            get
            {
                return _PtClassID;
            }
            set
            {
                OnPtClassIDChanging(value);
                ReportPropertyChanging("PtClassID");
                _PtClassID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtClassID");
                OnPtClassIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtClassID;
        partial void OnPtClassIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BelongingToHI
        {
            get
            {
                return _BelongingToHI;
            }
            set
            {
                OnBelongingToHIChanging(value);
                ReportPropertyChanging("BelongingToHI");
                _BelongingToHI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BelongingToHI");
                OnBelongingToHIChanged();
            }
        }
        private Nullable<global::System.Boolean> _BelongingToHI;
        partial void OnBelongingToHIChanging(Nullable<global::System.Boolean> value);
        partial void OnBelongingToHIChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_PrescriptionDetail_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_PrescriptionDetail_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_PrescriptionDetail_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_PrescriptionDetail_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionDetail_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionDetail_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionDetail_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("SureHisModel.FK_PrescriptionDetail_Prescription", "Prescription", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm", "refCommonTerm")]
        public refCommonTerm refCommonTerm
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTermReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm")]
        public refCommonTerm refCommonTerm1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm")]
        public refCommonTerm refCommonTerm2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm")]
        public refCommonTerm refCommonTerm3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm3Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "refCommonTerm", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm")]
        public refCommonTerm refCommonTerm4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCommonTerm> refCommonTerm4Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCommonTerm>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "refCommonTerm", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PrescriptionHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrescriptionHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrescriptionHistory object.
        /// </summary>
        /// <param name="keepTrackID">Initial value of the KeepTrackID property.</param>
        /// <param name="presID">Initial value of the PresID property.</param>
        /// <param name="keepTrackDateTime">Initial value of the KeepTrackDateTime property.</param>
        public static PrescriptionHistory CreatePrescriptionHistory(global::System.Int64 keepTrackID, global::System.Int64 presID, global::System.DateTime keepTrackDateTime)
        {
            PrescriptionHistory prescriptionHistory = new PrescriptionHistory();
            prescriptionHistory.KeepTrackID = keepTrackID;
            prescriptionHistory.PresID = presID;
            prescriptionHistory.KeepTrackDateTime = keepTrackDateTime;
            return prescriptionHistory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 KeepTrackID
        {
            get
            {
                return _KeepTrackID;
            }
            set
            {
                if (_KeepTrackID != value)
                {
                    OnKeepTrackIDChanging(value);
                    ReportPropertyChanging("KeepTrackID");
                    _KeepTrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("KeepTrackID");
                    OnKeepTrackIDChanged();
                }
            }
        }
        private global::System.Int64 _KeepTrackID;
        partial void OnKeepTrackIDChanging(global::System.Int64 value);
        partial void OnKeepTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PresID
        {
            get
            {
                return _PresID;
            }
            set
            {
                OnPresIDChanging(value);
                ReportPropertyChanging("PresID");
                _PresID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresID");
                OnPresIDChanged();
            }
        }
        private global::System.Int64 _PresID;
        partial void OnPresIDChanging(global::System.Int64 value);
        partial void OnPresIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime KeepTrackDateTime
        {
            get
            {
                return _KeepTrackDateTime;
            }
            set
            {
                OnKeepTrackDateTimeChanging(value);
                ReportPropertyChanging("KeepTrackDateTime");
                _KeepTrackDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("KeepTrackDateTime");
                OnKeepTrackDateTimeChanged();
            }
        }
        private global::System.DateTime _KeepTrackDateTime;
        partial void OnKeepTrackDateTimeChanging(global::System.DateTime value);
        partial void OnKeepTrackDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuthorID
        {
            get
            {
                return _AuthorID;
            }
            set
            {
                OnAuthorIDChanging(value);
                ReportPropertyChanging("AuthorID");
                _AuthorID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuthorID");
                OnAuthorIDChanged();
            }
        }
        private global::System.String _AuthorID;
        partial void OnAuthorIDChanging(global::System.String value);
        partial void OnAuthorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatorID
        {
            get
            {
                return _CreatorID;
            }
            set
            {
                OnCreatorIDChanging(value);
                ReportPropertyChanging("CreatorID");
                _CreatorID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatorID");
                OnCreatorIDChanged();
            }
        }
        private global::System.String _CreatorID;
        partial void OnCreatorIDChanging(global::System.String value);
        partial void OnCreatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IssuerID
        {
            get
            {
                return _IssuerID;
            }
            set
            {
                OnIssuerIDChanging(value);
                ReportPropertyChanging("IssuerID");
                _IssuerID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IssuerID");
                OnIssuerIDChanged();
            }
        }
        private global::System.String _IssuerID;
        partial void OnIssuerIDChanging(global::System.String value);
        partial void OnIssuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChangeNotes
        {
            get
            {
                return _ChangeNotes;
            }
            set
            {
                OnChangeNotesChanging(value);
                ReportPropertyChanging("ChangeNotes");
                _ChangeNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ChangeNotes");
                OnChangeNotesChanged();
            }
        }
        private global::System.String _ChangeNotes;
        partial void OnChangeNotesChanging(global::System.String value);
        partial void OnChangeNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionHistory_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionHistory_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionHistory_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_PrescriptionHistory_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("SureHisModel.FK_PrescriptionHistory_Prescription", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PriceList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PriceList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PriceList object.
        /// </summary>
        /// <param name="priceListID">Initial value of the PriceListID property.</param>
        /// <param name="priceListName">Initial value of the PriceListName property.</param>
        /// <param name="effDate">Initial value of the EffDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static PriceList CreatePriceList(global::System.Int64 priceListID, global::System.String priceListName, global::System.DateTime effDate, global::System.DateTime createdDate)
        {
            PriceList priceList = new PriceList();
            priceList.PriceListID = priceListID;
            priceList.PriceListName = priceListName;
            priceList.EffDate = effDate;
            priceList.CreatedDate = createdDate;
            return priceList;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PriceListID
        {
            get
            {
                return _PriceListID;
            }
            set
            {
                if (_PriceListID != value)
                {
                    OnPriceListIDChanging(value);
                    ReportPropertyChanging("PriceListID");
                    _PriceListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PriceListID");
                    OnPriceListIDChanged();
                }
            }
        }
        private global::System.Int64 _PriceListID;
        partial void OnPriceListIDChanging(global::System.Int64 value);
        partial void OnPriceListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PriceListName
        {
            get
            {
                return _PriceListName;
            }
            set
            {
                OnPriceListNameChanging(value);
                ReportPropertyChanging("PriceListName");
                _PriceListName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PriceListName");
                OnPriceListNameChanged();
            }
        }
        private global::System.String _PriceListName;
        partial void OnPriceListNameChanging(global::System.String value);
        partial void OnPriceListNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssueDate;
        partial void OnIssueDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EffDate
        {
            get
            {
                return _EffDate;
            }
            set
            {
                OnEffDateChanging(value);
                ReportPropertyChanging("EffDate");
                _EffDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffDate");
                OnEffDateChanged();
            }
        }
        private global::System.DateTime _EffDate;
        partial void OnEffDateChanging(global::System.DateTime value);
        partial void OnEffDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpDate
        {
            get
            {
                return _ExpDate;
            }
            set
            {
                OnExpDateChanging(value);
                ReportPropertyChanging("ExpDate");
                _ExpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpDate");
                OnExpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpDate;
        partial void OnExpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _DeptID;
        partial void OnDeptIDChanging(Nullable<global::System.Int64> value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.String _CreatedBy;
        partial void OnCreatedByChanging(global::System.String value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private global::System.String _LastUpdBy;
        partial void OnLastUpdByChanging(global::System.String value);
        partial void OnLastUpdByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugPrice_PriceList", "DrugPrice")]
        public EntityCollection<DrugPrice> DrugPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugPrice>("SureHisModel.FK_DrugPrice_PriceList", "DrugPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugPrice>("SureHisModel.FK_DrugPrice_PriceList", "DrugPrice", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PrivacyClass")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivacyClass : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivacyClass object.
        /// </summary>
        /// <param name="privClssID">Initial value of the PrivClssID property.</param>
        /// <param name="privClssCode">Initial value of the PrivClssCode property.</param>
        /// <param name="privClssName">Initial value of the PrivClssName property.</param>
        /// <param name="policyRule">Initial value of the PolicyRule property.</param>
        public static PrivacyClass CreatePrivacyClass(global::System.Int64 privClssID, global::System.String privClssCode, global::System.String privClssName, global::System.String policyRule)
        {
            PrivacyClass privacyClass = new PrivacyClass();
            privacyClass.PrivClssID = privClssID;
            privacyClass.PrivClssCode = privClssCode;
            privacyClass.PrivClssName = privClssName;
            privacyClass.PolicyRule = policyRule;
            return privacyClass;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PrivClssID
        {
            get
            {
                return _PrivClssID;
            }
            set
            {
                if (_PrivClssID != value)
                {
                    OnPrivClssIDChanging(value);
                    ReportPropertyChanging("PrivClssID");
                    _PrivClssID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivClssID");
                    OnPrivClssIDChanged();
                }
            }
        }
        private global::System.Int64 _PrivClssID;
        partial void OnPrivClssIDChanging(global::System.Int64 value);
        partial void OnPrivClssIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivClssCode
        {
            get
            {
                return _PrivClssCode;
            }
            set
            {
                OnPrivClssCodeChanging(value);
                ReportPropertyChanging("PrivClssCode");
                _PrivClssCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivClssCode");
                OnPrivClssCodeChanged();
            }
        }
        private global::System.String _PrivClssCode;
        partial void OnPrivClssCodeChanging(global::System.String value);
        partial void OnPrivClssCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrivClssName
        {
            get
            {
                return _PrivClssName;
            }
            set
            {
                OnPrivClssNameChanging(value);
                ReportPropertyChanging("PrivClssName");
                _PrivClssName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrivClssName");
                OnPrivClssNameChanged();
            }
        }
        private global::System.String _PrivClssName;
        partial void OnPrivClssNameChanging(global::System.String value);
        partial void OnPrivClssNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PolicyRule
        {
            get
            {
                return _PolicyRule;
            }
            set
            {
                OnPolicyRuleChanging(value);
                ReportPropertyChanging("PolicyRule");
                _PolicyRule = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PolicyRule");
                OnPolicyRuleChanged();
            }
        }
        private global::System.String _PolicyRule;
        partial void OnPolicyRuleChanging(global::System.String value);
        partial void OnPolicyRuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientPVID_PrivacyClass", "PatientPVID")]
        public EntityCollection<PatientPVID> PatientPVID
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientPVID>("SureHisModel.FK_PatientPVID_PrivacyClass", "PatientPVID");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientPVID>("SureHisModel.FK_PatientPVID_PrivacyClass", "PatientPVID", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PrivilegeRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PrivilegeRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PrivilegeRole object.
        /// </summary>
        /// <param name="privilegedRoleID">Initial value of the PrivilegedRoleID property.</param>
        /// <param name="appFuncID">Initial value of the AppFuncID property.</param>
        /// <param name="permVals">Initial value of the PermVals property.</param>
        public static PrivilegeRole CreatePrivilegeRole(global::System.Int64 privilegedRoleID, global::System.Int64 appFuncID, global::System.Byte permVals)
        {
            PrivilegeRole privilegeRole = new PrivilegeRole();
            privilegeRole.PrivilegedRoleID = privilegedRoleID;
            privilegeRole.AppFuncID = appFuncID;
            privilegeRole.PermVals = permVals;
            return privilegeRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PrivilegedRoleID
        {
            get
            {
                return _PrivilegedRoleID;
            }
            set
            {
                if (_PrivilegedRoleID != value)
                {
                    OnPrivilegedRoleIDChanging(value);
                    ReportPropertyChanging("PrivilegedRoleID");
                    _PrivilegedRoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrivilegedRoleID");
                    OnPrivilegedRoleIDChanged();
                }
            }
        }
        private global::System.Int64 _PrivilegedRoleID;
        partial void OnPrivilegedRoleIDChanging(global::System.Int64 value);
        partial void OnPrivilegedRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AppFuncID
        {
            get
            {
                return _AppFuncID;
            }
            set
            {
                OnAppFuncIDChanging(value);
                ReportPropertyChanging("AppFuncID");
                _AppFuncID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppFuncID");
                OnAppFuncIDChanged();
            }
        }
        private global::System.Int64 _AppFuncID;
        partial void OnAppFuncIDChanging(global::System.Int64 value);
        partial void OnAppFuncIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBuiltIn
        {
            get
            {
                return _IsBuiltIn;
            }
            set
            {
                OnIsBuiltInChanging(value);
                ReportPropertyChanging("IsBuiltIn");
                _IsBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBuiltIn");
                OnIsBuiltInChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBuiltIn;
        partial void OnIsBuiltInChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBuiltInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserGroupID
        {
            get
            {
                return _UserGroupID;
            }
            set
            {
                OnUserGroupIDChanging(value);
                ReportPropertyChanging("UserGroupID");
                _UserGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserGroupID");
                OnUserGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _UserGroupID;
        partial void OnUserGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnUserGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PermVals
        {
            get
            {
                return _PermVals;
            }
            set
            {
                OnPermValsChanging(value);
                ReportPropertyChanging("PermVals");
                _PermVals = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermVals");
                OnPermValsChanged();
            }
        }
        private global::System.Byte _PermVals;
        partial void OnPermValsChanging(global::System.Byte value);
        partial void OnPermValsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrivilegeRole_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_PrivilegeRole_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_PrivilegeRole_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_PrivilegeRole_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("SureHisModel.FK_PrivilegeRole_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrivilegeRole_UserGroup", "UserGroup")]
        public UserGroup UserGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_PrivilegeRole_UserGroup", "UserGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_PrivilegeRole_UserGroup", "UserGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserGroup> UserGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_PrivilegeRole_UserGroup", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserGroup>("SureHisModel.FK_PrivilegeRole_UserGroup", "UserGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PromotionPlan")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromotionPlan : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromotionPlan object.
        /// </summary>
        /// <param name="promID">Initial value of the PromID property.</param>
        /// <param name="promName">Initial value of the PromName property.</param>
        /// <param name="promFromDate">Initial value of the PromFromDate property.</param>
        /// <param name="promToDate">Initial value of the PromToDate property.</param>
        public static PromotionPlan CreatePromotionPlan(global::System.Int64 promID, global::System.String promName, global::System.DateTime promFromDate, global::System.DateTime promToDate)
        {
            PromotionPlan promotionPlan = new PromotionPlan();
            promotionPlan.PromID = promID;
            promotionPlan.PromName = promName;
            promotionPlan.PromFromDate = promFromDate;
            promotionPlan.PromToDate = promToDate;
            return promotionPlan;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PromID
        {
            get
            {
                return _PromID;
            }
            set
            {
                if (_PromID != value)
                {
                    OnPromIDChanging(value);
                    ReportPropertyChanging("PromID");
                    _PromID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromID");
                    OnPromIDChanged();
                }
            }
        }
        private global::System.Int64 _PromID;
        partial void OnPromIDChanging(global::System.Int64 value);
        partial void OnPromIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PromName
        {
            get
            {
                return _PromName;
            }
            set
            {
                OnPromNameChanging(value);
                ReportPropertyChanging("PromName");
                _PromName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PromName");
                OnPromNameChanged();
            }
        }
        private global::System.String _PromName;
        partial void OnPromNameChanging(global::System.String value);
        partial void OnPromNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PromFromDate
        {
            get
            {
                return _PromFromDate;
            }
            set
            {
                OnPromFromDateChanging(value);
                ReportPropertyChanging("PromFromDate");
                _PromFromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromFromDate");
                OnPromFromDateChanged();
            }
        }
        private global::System.DateTime _PromFromDate;
        partial void OnPromFromDateChanging(global::System.DateTime value);
        partial void OnPromFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime PromToDate
        {
            get
            {
                return _PromToDate;
            }
            set
            {
                OnPromToDateChanging(value);
                ReportPropertyChanging("PromToDate");
                _PromToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromToDate");
                OnPromToDateChanged();
            }
        }
        private global::System.DateTime _PromToDate;
        partial void OnPromToDateChanging(global::System.DateTime value);
        partial void OnPromToDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PromotionService_PromotionPlan", "PromotionService")]
        public EntityCollection<PromotionService> PromotionService
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PromotionService>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionService");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PromotionService>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionService", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PromotionService")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PromotionService : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PromotionService object.
        /// </summary>
        /// <param name="promSerID">Initial value of the PromSerID property.</param>
        /// <param name="percentDiscount">Initial value of the PercentDiscount property.</param>
        public static PromotionService CreatePromotionService(global::System.Int64 promSerID, global::System.Double percentDiscount)
        {
            PromotionService promotionService = new PromotionService();
            promotionService.PromSerID = promSerID;
            promotionService.PercentDiscount = percentDiscount;
            return promotionService;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PromSerID
        {
            get
            {
                return _PromSerID;
            }
            set
            {
                if (_PromSerID != value)
                {
                    OnPromSerIDChanging(value);
                    ReportPropertyChanging("PromSerID");
                    _PromSerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PromSerID");
                    OnPromSerIDChanged();
                }
            }
        }
        private global::System.Int64 _PromSerID;
        partial void OnPromSerIDChanging(global::System.Int64 value);
        partial void OnPromSerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double PercentDiscount
        {
            get
            {
                return _PercentDiscount;
            }
            set
            {
                OnPercentDiscountChanging(value);
                ReportPropertyChanging("PercentDiscount");
                _PercentDiscount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PercentDiscount");
                OnPercentDiscountChanged();
            }
        }
        private global::System.Double _PercentDiscount;
        partial void OnPercentDiscountChanging(global::System.Double value);
        partial void OnPercentDiscountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> ApplyOnWithPrice
        {
            get
            {
                return _ApplyOnWithPrice;
            }
            set
            {
                OnApplyOnWithPriceChanging(value);
                ReportPropertyChanging("ApplyOnWithPrice");
                _ApplyOnWithPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplyOnWithPrice");
                OnApplyOnWithPriceChanged();
            }
        }
        private Nullable<global::System.Byte> _ApplyOnWithPrice;
        partial void OnApplyOnWithPriceChanging(Nullable<global::System.Byte> value);
        partial void OnApplyOnWithPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PromID
        {
            get
            {
                return _PromID;
            }
            set
            {
                OnPromIDChanging(value);
                ReportPropertyChanging("PromID");
                _PromID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromID");
                OnPromIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PromID;
        partial void OnPromIDChanging(Nullable<global::System.Int64> value);
        partial void OnPromIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MedSerPkgID
        {
            get
            {
                return _MedSerPkgID;
            }
            set
            {
                OnMedSerPkgIDChanging(value);
                ReportPropertyChanging("MedSerPkgID");
                _MedSerPkgID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MedSerPkgID");
                OnMedSerPkgIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MedSerPkgID;
        partial void OnMedSerPkgIDChanging(Nullable<global::System.Int64> value);
        partial void OnMedSerPkgIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PromotionService_MedicalServicePackage", "MedicalServicePackage")]
        public MedicalServicePackage MedicalServicePackage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_PromotionService_MedicalServicePackage", "MedicalServicePackage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_PromotionService_MedicalServicePackage", "MedicalServicePackage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalServicePackage> MedicalServicePackageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalServicePackage>("SureHisModel.FK_PromotionService_MedicalServicePackage", "MedicalServicePackage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalServicePackage>("SureHisModel.FK_PromotionService_MedicalServicePackage", "MedicalServicePackage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PromotionService_PromotionPlan", "PromotionPlan")]
        public PromotionPlan PromotionPlan
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromotionPlan>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionPlan").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromotionPlan>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionPlan").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PromotionPlan> PromotionPlanReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PromotionPlan>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionPlan");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PromotionPlan>("SureHisModel.FK_PromotionService_PromotionPlan", "PromotionPlan", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ProvidableDrugs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProvidableDrugs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProvidableDrugs object.
        /// </summary>
        /// <param name="provDrugID">Initial value of the ProvDrugID property.</param>
        /// <param name="drugID">Initial value of the DrugID property.</param>
        /// <param name="pharmcID">Initial value of the PharmcID property.</param>
        public static ProvidableDrugs CreateProvidableDrugs(global::System.Int64 provDrugID, global::System.Int64 drugID, global::System.Int64 pharmcID)
        {
            ProvidableDrugs providableDrugs = new ProvidableDrugs();
            providableDrugs.ProvDrugID = provDrugID;
            providableDrugs.DrugID = drugID;
            providableDrugs.PharmcID = pharmcID;
            return providableDrugs;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ProvDrugID
        {
            get
            {
                return _ProvDrugID;
            }
            set
            {
                if (_ProvDrugID != value)
                {
                    OnProvDrugIDChanging(value);
                    ReportPropertyChanging("ProvDrugID");
                    _ProvDrugID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProvDrugID");
                    OnProvDrugIDChanged();
                }
            }
        }
        private global::System.Int64 _ProvDrugID;
        partial void OnProvDrugIDChanging(global::System.Int64 value);
        partial void OnProvDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugID
        {
            get
            {
                return _DrugID;
            }
            set
            {
                OnDrugIDChanging(value);
                ReportPropertyChanging("DrugID");
                _DrugID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DrugID");
                OnDrugIDChanged();
            }
        }
        private global::System.Int64 _DrugID;
        partial void OnDrugIDChanging(global::System.Int64 value);
        partial void OnDrugIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PharmcID
        {
            get
            {
                return _PharmcID;
            }
            set
            {
                OnPharmcIDChanging(value);
                ReportPropertyChanging("PharmcID");
                _PharmcID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PharmcID");
                OnPharmcIDChanged();
            }
        }
        private global::System.Int64 _PharmcID;
        partial void OnPharmcIDChanging(global::System.Int64 value);
        partial void OnPharmcIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> NoEffect
        {
            get
            {
                return _NoEffect;
            }
            set
            {
                OnNoEffectChanging(value);
                ReportPropertyChanging("NoEffect");
                _NoEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoEffect");
                OnNoEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _NoEffect;
        partial void OnNoEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnNoEffectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ProvidableDrugs_Drug", "Drug")]
        public Drug Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_ProvidableDrugs_Drug", "Drug").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_ProvidableDrugs_Drug", "Drug").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drug> DrugReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drug>("SureHisModel.FK_ProvidableDrugs_Drug", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drug>("SureHisModel.FK_ProvidableDrugs_Drug", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany")]
        public PharmaceuticalCompany PharmaceuticalCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PharmaceuticalCompany> PharmaceuticalCompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PharmaceuticalCompany>("SureHisModel.FK_ProvidableDrugs_PharmaceuticalCompany", "PharmaceuticalCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="PtCodeCheckDigitTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PtCodeCheckDigitTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PtCodeCheckDigitTmp object.
        /// </summary>
        /// <param name="ptNum">Initial value of the PtNum property.</param>
        /// <param name="ptCodeCheckDigit">Initial value of the PtCodeCheckDigit property.</param>
        public static PtCodeCheckDigitTmp CreatePtCodeCheckDigitTmp(global::System.Int64 ptNum, global::System.Int64 ptCodeCheckDigit)
        {
            PtCodeCheckDigitTmp ptCodeCheckDigitTmp = new PtCodeCheckDigitTmp();
            ptCodeCheckDigitTmp.PtNum = ptNum;
            ptCodeCheckDigitTmp.PtCodeCheckDigit = ptCodeCheckDigit;
            return ptCodeCheckDigitTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtNum
        {
            get
            {
                return _PtNum;
            }
            set
            {
                if (_PtNum != value)
                {
                    OnPtNumChanging(value);
                    ReportPropertyChanging("PtNum");
                    _PtNum = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtNum");
                    OnPtNumChanged();
                }
            }
        }
        private global::System.Int64 _PtNum;
        partial void OnPtNumChanging(global::System.Int64 value);
        partial void OnPtNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtCodeCheckDigit
        {
            get
            {
                return _PtCodeCheckDigit;
            }
            set
            {
                OnPtCodeCheckDigitChanging(value);
                ReportPropertyChanging("PtCodeCheckDigit");
                _PtCodeCheckDigit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtCodeCheckDigit");
                OnPtCodeCheckDigitChanged();
            }
        }
        private global::System.Int64 _PtCodeCheckDigit;
        partial void OnPtCodeCheckDigitChanging(global::System.Int64 value);
        partial void OnPtCodeCheckDigitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsUsed
        {
            get
            {
                return _IsUsed;
            }
            set
            {
                OnIsUsedChanging(value);
                ReportPropertyChanging("IsUsed");
                _IsUsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsUsed");
                OnIsUsedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsUsed;
        partial void OnIsUsedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsUsedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Quotation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quotation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quotation object.
        /// </summary>
        /// <param name="quotationID">Initial value of the QuotationID property.</param>
        /// <param name="quotationCode">Initial value of the QuotationCode property.</param>
        /// <param name="quotationName">Initial value of the QuotationName property.</param>
        /// <param name="isNHI">Initial value of the IsNHI property.</param>
        /// <param name="validDateFrom">Initial value of the ValidDateFrom property.</param>
        /// <param name="issueDate">Initial value of the IssueDate property.</param>
        /// <param name="curCode">Initial value of the CurCode property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static Quotation CreateQuotation(global::System.Int64 quotationID, global::System.String quotationCode, global::System.String quotationName, global::System.Boolean isNHI, global::System.DateTime validDateFrom, global::System.DateTime issueDate, global::System.String curCode, global::System.Boolean approved, global::System.Boolean stop, global::System.DateTime createdDate)
        {
            Quotation quotation = new Quotation();
            quotation.QuotationID = quotationID;
            quotation.QuotationCode = quotationCode;
            quotation.QuotationName = quotationName;
            quotation.IsNHI = isNHI;
            quotation.ValidDateFrom = validDateFrom;
            quotation.IssueDate = issueDate;
            quotation.CurCode = curCode;
            quotation.Approved = approved;
            quotation.Stop = stop;
            quotation.CreatedDate = createdDate;
            return quotation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QuotationID
        {
            get
            {
                return _QuotationID;
            }
            set
            {
                if (_QuotationID != value)
                {
                    OnQuotationIDChanging(value);
                    ReportPropertyChanging("QuotationID");
                    _QuotationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QuotationID");
                    OnQuotationIDChanged();
                }
            }
        }
        private global::System.Int64 _QuotationID;
        partial void OnQuotationIDChanging(global::System.Int64 value);
        partial void OnQuotationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuotationCode
        {
            get
            {
                return _QuotationCode;
            }
            set
            {
                OnQuotationCodeChanging(value);
                ReportPropertyChanging("QuotationCode");
                _QuotationCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuotationCode");
                OnQuotationCodeChanged();
            }
        }
        private global::System.String _QuotationCode;
        partial void OnQuotationCodeChanging(global::System.String value);
        partial void OnQuotationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuotationName
        {
            get
            {
                return _QuotationName;
            }
            set
            {
                OnQuotationNameChanging(value);
                ReportPropertyChanging("QuotationName");
                _QuotationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuotationName");
                OnQuotationNameChanged();
            }
        }
        private global::System.String _QuotationName;
        partial void OnQuotationNameChanging(global::System.String value);
        partial void OnQuotationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QuotationDesc
        {
            get
            {
                return _QuotationDesc;
            }
            set
            {
                OnQuotationDescChanging(value);
                ReportPropertyChanging("QuotationDesc");
                _QuotationDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QuotationDesc");
                OnQuotationDescChanged();
            }
        }
        private global::System.String _QuotationDesc;
        partial void OnQuotationDescChanging(global::System.String value);
        partial void OnQuotationDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsNHI
        {
            get
            {
                return _IsNHI;
            }
            set
            {
                OnIsNHIChanging(value);
                ReportPropertyChanging("IsNHI");
                _IsNHI = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNHI");
                OnIsNHIChanged();
            }
        }
        private global::System.Boolean _IsNHI;
        partial void OnIsNHIChanging(global::System.Boolean value);
        partial void OnIsNHIChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ValidDateFrom
        {
            get
            {
                return _ValidDateFrom;
            }
            set
            {
                OnValidDateFromChanging(value);
                ReportPropertyChanging("ValidDateFrom");
                _ValidDateFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateFrom");
                OnValidDateFromChanged();
            }
        }
        private global::System.DateTime _ValidDateFrom;
        partial void OnValidDateFromChanging(global::System.DateTime value);
        partial void OnValidDateFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ValidDateTo
        {
            get
            {
                return _ValidDateTo;
            }
            set
            {
                OnValidDateToChanging(value);
                ReportPropertyChanging("ValidDateTo");
                _ValidDateTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ValidDateTo");
                OnValidDateToChanged();
            }
        }
        private Nullable<global::System.DateTime> _ValidDateTo;
        partial void OnValidDateToChanging(Nullable<global::System.DateTime> value);
        partial void OnValidDateToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StrPtClassID
        {
            get
            {
                return _StrPtClassID;
            }
            set
            {
                OnStrPtClassIDChanging(value);
                ReportPropertyChanging("StrPtClassID");
                _StrPtClassID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StrPtClassID");
                OnStrPtClassIDChanged();
            }
        }
        private global::System.String _StrPtClassID;
        partial void OnStrPtClassIDChanging(global::System.String value);
        partial void OnStrPtClassIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime IssueDate
        {
            get
            {
                return _IssueDate;
            }
            set
            {
                OnIssueDateChanging(value);
                ReportPropertyChanging("IssueDate");
                _IssueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueDate");
                OnIssueDateChanged();
            }
        }
        private global::System.DateTime _IssueDate;
        partial void OnIssueDateChanging(global::System.DateTime value);
        partial void OnIssueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCode
        {
            get
            {
                return _CurCode;
            }
            set
            {
                OnCurCodeChanging(value);
                ReportPropertyChanging("CurCode");
                _CurCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurCode");
                OnCurCodeChanged();
            }
        }
        private global::System.String _CurCode;
        partial void OnCurCodeChanging(global::System.String value);
        partial void OnCurCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovedDate
        {
            get
            {
                return _ApprovedDate;
            }
            set
            {
                OnApprovedDateChanging(value);
                ReportPropertyChanging("ApprovedDate");
                _ApprovedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedDate");
                OnApprovedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovedDate;
        partial void OnApprovedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ApprovedBy
        {
            get
            {
                return _ApprovedBy;
            }
            set
            {
                OnApprovedByChanging(value);
                ReportPropertyChanging("ApprovedBy");
                _ApprovedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApprovedBy");
                OnApprovedByChanged();
            }
        }
        private Nullable<global::System.Int64> _ApprovedBy;
        partial void OnApprovedByChanging(Nullable<global::System.Int64> value);
        partial void OnApprovedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int64> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int64> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdDate
        {
            get
            {
                return _LastUpdDate;
            }
            set
            {
                OnLastUpdDateChanging(value);
                ReportPropertyChanging("LastUpdDate");
                _LastUpdDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdDate");
                OnLastUpdDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdDate;
        partial void OnLastUpdDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LastUpdBy
        {
            get
            {
                return _LastUpdBy;
            }
            set
            {
                OnLastUpdByChanging(value);
                ReportPropertyChanging("LastUpdBy");
                _LastUpdBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdBy");
                OnLastUpdByChanged();
            }
        }
        private Nullable<global::System.Int64> _LastUpdBy;
        partial void OnLastUpdByChanging(Nullable<global::System.Int64> value);
        partial void OnLastUpdByChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItems_Quotation", "HIServiceItems")]
        public EntityCollection<HIServiceItems> HIServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HIServiceItems>("SureHisModel.FK_HIServiceItems_Quotation", "HIServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HIServiceItems>("SureHisModel.FK_HIServiceItems_Quotation", "HIServiceItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MOHServiceItems_Quotation", "MOHServiceItems")]
        public EntityCollection<MOHServiceItems> MOHServiceItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MOHServiceItems>("SureHisModel.FK_MOHServiceItems_Quotation", "MOHServiceItems");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MOHServiceItems>("SureHisModel.FK_MOHServiceItems_Quotation", "MOHServiceItems", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Quotation_refCurrency", "refCurrency")]
        public refCurrency refCurrency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCurrency>("SureHisModel.FK_Quotation_refCurrency", "refCurrency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCurrency>("SureHisModel.FK_Quotation_refCurrency", "refCurrency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCurrency> refCurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCurrency>("SureHisModel.FK_Quotation_refCurrency", "refCurrency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCurrency>("SureHisModel.FK_Quotation_refCurrency", "refCurrency", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Realms")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Realms : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Realms object.
        /// </summary>
        /// <param name="realmID">Initial value of the RealmID property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="appFuncID">Initial value of the AppFuncID property.</param>
        public static Realms CreateRealms(global::System.Int64 realmID, global::System.Int64 roleID, global::System.Int64 appFuncID)
        {
            Realms realms = new Realms();
            realms.RealmID = realmID;
            realms.RoleID = roleID;
            realms.AppFuncID = appFuncID;
            return realms;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RealmID
        {
            get
            {
                return _RealmID;
            }
            set
            {
                if (_RealmID != value)
                {
                    OnRealmIDChanging(value);
                    ReportPropertyChanging("RealmID");
                    _RealmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RealmID");
                    OnRealmIDChanged();
                }
            }
        }
        private global::System.Int64 _RealmID;
        partial void OnRealmIDChanging(global::System.Int64 value);
        partial void OnRealmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AppFuncID
        {
            get
            {
                return _AppFuncID;
            }
            set
            {
                OnAppFuncIDChanging(value);
                ReportPropertyChanging("AppFuncID");
                _AppFuncID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AppFuncID");
                OnAppFuncIDChanged();
            }
        }
        private global::System.Int64 _AppFuncID;
        partial void OnAppFuncIDChanging(global::System.Int64 value);
        partial void OnAppFuncIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Realms_Application", "Application")]
        public Application Application
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Realms_Application", "Application").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Realms_Application", "Application").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Application> ApplicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Application>("SureHisModel.FK_Realms_Application", "Application");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Application>("SureHisModel.FK_Realms_Application", "Application", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Realms_refRole", "refRole")]
        public refRole refRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_Realms_refRole", "refRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_Realms_refRole", "refRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refRole> refRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refRole>("SureHisModel.FK_Realms_refRole", "refRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refRole>("SureHisModel.FK_Realms_refRole", "refRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAcademicTile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAcademicTile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAcademicTile object.
        /// </summary>
        /// <param name="academicCode">Initial value of the AcademicCode property.</param>
        /// <param name="academicName">Initial value of the AcademicName property.</param>
        public static refAcademicTile CreaterefAcademicTile(global::System.Int32 academicCode, global::System.String academicName)
        {
            refAcademicTile refAcademicTile = new refAcademicTile();
            refAcademicTile.AcademicCode = academicCode;
            refAcademicTile.AcademicName = academicName;
            return refAcademicTile;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AcademicCode
        {
            get
            {
                return _AcademicCode;
            }
            set
            {
                if (_AcademicCode != value)
                {
                    OnAcademicCodeChanging(value);
                    ReportPropertyChanging("AcademicCode");
                    _AcademicCode = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcademicCode");
                    OnAcademicCodeChanged();
                }
            }
        }
        private global::System.Int32 _AcademicCode;
        partial void OnAcademicCodeChanging(global::System.Int32 value);
        partial void OnAcademicCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AcademicName
        {
            get
            {
                return _AcademicName;
            }
            set
            {
                OnAcademicNameChanging(value);
                ReportPropertyChanging("AcademicName");
                _AcademicName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AcademicName");
                OnAcademicNameChanged();
            }
        }
        private global::System.String _AcademicName;
        partial void OnAcademicNameChanging(global::System.String value);
        partial void OnAcademicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNAcademicName
        {
            get
            {
                return _VNAcademicName;
            }
            set
            {
                OnVNAcademicNameChanging(value);
                ReportPropertyChanging("VNAcademicName");
                _VNAcademicName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNAcademicName");
                OnVNAcademicNameChanged();
            }
        }
        private global::System.String _VNAcademicName;
        partial void OnVNAcademicNameChanging(global::System.String value);
        partial void OnVNAcademicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AcademicDesc
        {
            get
            {
                return _AcademicDesc;
            }
            set
            {
                OnAcademicDescChanging(value);
                ReportPropertyChanging("AcademicDesc");
                _AcademicDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AcademicDesc");
                OnAcademicDescChanged();
            }
        }
        private global::System.String _AcademicDesc;
        partial void OnAcademicDescChanging(global::System.String value);
        partial void OnAcademicDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_refAcademicTile", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SureHisModel.FK_Employee_refAcademicTile", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SureHisModel.FK_Employee_refAcademicTile", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refActiviePrinciple")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refActiviePrinciple : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refActiviePrinciple object.
        /// </summary>
        /// <param name="acPrincipleID">Initial value of the AcPrincipleID property.</param>
        /// <param name="acPrincipleName">Initial value of the AcPrincipleName property.</param>
        /// <param name="aTCCode">Initial value of the ATCCode property.</param>
        public static refActiviePrinciple CreaterefActiviePrinciple(global::System.Int64 acPrincipleID, global::System.String acPrincipleName, global::System.String aTCCode)
        {
            refActiviePrinciple refActiviePrinciple = new refActiviePrinciple();
            refActiviePrinciple.AcPrincipleID = acPrincipleID;
            refActiviePrinciple.AcPrincipleName = acPrincipleName;
            refActiviePrinciple.ATCCode = aTCCode;
            return refActiviePrinciple;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AcPrincipleID
        {
            get
            {
                return _AcPrincipleID;
            }
            set
            {
                if (_AcPrincipleID != value)
                {
                    OnAcPrincipleIDChanging(value);
                    ReportPropertyChanging("AcPrincipleID");
                    _AcPrincipleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AcPrincipleID");
                    OnAcPrincipleIDChanged();
                }
            }
        }
        private global::System.Int64 _AcPrincipleID;
        partial void OnAcPrincipleIDChanging(global::System.Int64 value);
        partial void OnAcPrincipleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AcPrincipleName
        {
            get
            {
                return _AcPrincipleName;
            }
            set
            {
                OnAcPrincipleNameChanging(value);
                ReportPropertyChanging("AcPrincipleName");
                _AcPrincipleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AcPrincipleName");
                OnAcPrincipleNameChanged();
            }
        }
        private global::System.String _AcPrincipleName;
        partial void OnAcPrincipleNameChanging(global::System.String value);
        partial void OnAcPrincipleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ATCCode
        {
            get
            {
                return _ATCCode;
            }
            set
            {
                OnATCCodeChanging(value);
                ReportPropertyChanging("ATCCode");
                _ATCCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ATCCode");
                OnATCCodeChanged();
            }
        }
        private global::System.String _ATCCode;
        partial void OnATCCodeChanging(global::System.String value);
        partial void OnATCCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AcPrincDrug_refActiviePrinciple", "AcPrincDrug")]
        public EntityCollection<AcPrincDrug> AcPrincDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AcPrincDrug>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "AcPrincDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AcPrincDrug>("SureHisModel.FK_AcPrincDrug_refActiviePrinciple", "AcPrincDrug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAdmissionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAdmissionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAdmissionType object.
        /// </summary>
        /// <param name="hCFERecAdmTypeID">Initial value of the HCFERecAdmTypeID property.</param>
        /// <param name="hCFERecAdmissionTypeCode">Initial value of the HCFERecAdmissionTypeCode property.</param>
        /// <param name="hCFERecAdmissionTypeName">Initial value of the HCFERecAdmissionTypeName property.</param>
        public static refAdmissionType CreaterefAdmissionType(global::System.Int64 hCFERecAdmTypeID, global::System.String hCFERecAdmissionTypeCode, global::System.String hCFERecAdmissionTypeName)
        {
            refAdmissionType refAdmissionType = new refAdmissionType();
            refAdmissionType.HCFERecAdmTypeID = hCFERecAdmTypeID;
            refAdmissionType.HCFERecAdmissionTypeCode = hCFERecAdmissionTypeCode;
            refAdmissionType.HCFERecAdmissionTypeName = hCFERecAdmissionTypeName;
            return refAdmissionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCFERecAdmTypeID
        {
            get
            {
                return _HCFERecAdmTypeID;
            }
            set
            {
                if (_HCFERecAdmTypeID != value)
                {
                    OnHCFERecAdmTypeIDChanging(value);
                    ReportPropertyChanging("HCFERecAdmTypeID");
                    _HCFERecAdmTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCFERecAdmTypeID");
                    OnHCFERecAdmTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _HCFERecAdmTypeID;
        partial void OnHCFERecAdmTypeIDChanging(global::System.Int64 value);
        partial void OnHCFERecAdmTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCFERecAdmissionTypeCode
        {
            get
            {
                return _HCFERecAdmissionTypeCode;
            }
            set
            {
                OnHCFERecAdmissionTypeCodeChanging(value);
                ReportPropertyChanging("HCFERecAdmissionTypeCode");
                _HCFERecAdmissionTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCFERecAdmissionTypeCode");
                OnHCFERecAdmissionTypeCodeChanged();
            }
        }
        private global::System.String _HCFERecAdmissionTypeCode;
        partial void OnHCFERecAdmissionTypeCodeChanging(global::System.String value);
        partial void OnHCFERecAdmissionTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCFERecAdmissionTypeName
        {
            get
            {
                return _HCFERecAdmissionTypeName;
            }
            set
            {
                OnHCFERecAdmissionTypeNameChanging(value);
                ReportPropertyChanging("HCFERecAdmissionTypeName");
                _HCFERecAdmissionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCFERecAdmissionTypeName");
                OnHCFERecAdmissionTypeNameChanged();
            }
        }
        private global::System.String _HCFERecAdmissionTypeName;
        partial void OnHCFERecAdmissionTypeNameChanging(global::System.String value);
        partial void OnHCFERecAdmissionTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNHCFERecAdmissionTypeName
        {
            get
            {
                return _VNHCFERecAdmissionTypeName;
            }
            set
            {
                OnVNHCFERecAdmissionTypeNameChanging(value);
                ReportPropertyChanging("VNHCFERecAdmissionTypeName");
                _VNHCFERecAdmissionTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNHCFERecAdmissionTypeName");
                OnVNHCFERecAdmissionTypeNameChanged();
            }
        }
        private global::System.String _VNHCFERecAdmissionTypeName;
        partial void OnVNHCFERecAdmissionTypeNameChanging(global::System.String value);
        partial void OnVNHCFERecAdmissionTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdmissionTypeNotes
        {
            get
            {
                return _AdmissionTypeNotes;
            }
            set
            {
                OnAdmissionTypeNotesChanging(value);
                ReportPropertyChanging("AdmissionTypeNotes");
                _AdmissionTypeNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdmissionTypeNotes");
                OnAdmissionTypeNotesChanged();
            }
        }
        private global::System.String _AdmissionTypeNotes;
        partial void OnAdmissionTypeNotesChanging(global::System.String value);
        partial void OnAdmissionTypeNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmissionType", "HospitalizationHistory")]
        public EntityCollection<HospitalizationHistory> HospitalizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "HospitalizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_refAdmissionType", "HospitalizationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_refAdmissionType", "PatientAdmission")]
        public EntityCollection<PatientAdmission> PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_refAdmissionType", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_refAdmissionType", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAdmReferralType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAdmReferralType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAdmReferralType object.
        /// </summary>
        /// <param name="iAdmReferralTypeID">Initial value of the IAdmReferralTypeID property.</param>
        /// <param name="iAdmReferralTypeCode">Initial value of the IAdmReferralTypeCode property.</param>
        /// <param name="iAdmReferralTypeName">Initial value of the IAdmReferralTypeName property.</param>
        public static refAdmReferralType CreaterefAdmReferralType(global::System.Int64 iAdmReferralTypeID, global::System.String iAdmReferralTypeCode, global::System.String iAdmReferralTypeName)
        {
            refAdmReferralType refAdmReferralType = new refAdmReferralType();
            refAdmReferralType.IAdmReferralTypeID = iAdmReferralTypeID;
            refAdmReferralType.IAdmReferralTypeCode = iAdmReferralTypeCode;
            refAdmReferralType.IAdmReferralTypeName = iAdmReferralTypeName;
            return refAdmReferralType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IAdmReferralTypeID
        {
            get
            {
                return _IAdmReferralTypeID;
            }
            set
            {
                if (_IAdmReferralTypeID != value)
                {
                    OnIAdmReferralTypeIDChanging(value);
                    ReportPropertyChanging("IAdmReferralTypeID");
                    _IAdmReferralTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IAdmReferralTypeID");
                    OnIAdmReferralTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _IAdmReferralTypeID;
        partial void OnIAdmReferralTypeIDChanging(global::System.Int64 value);
        partial void OnIAdmReferralTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IAdmReferralTypeCode
        {
            get
            {
                return _IAdmReferralTypeCode;
            }
            set
            {
                OnIAdmReferralTypeCodeChanging(value);
                ReportPropertyChanging("IAdmReferralTypeCode");
                _IAdmReferralTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IAdmReferralTypeCode");
                OnIAdmReferralTypeCodeChanged();
            }
        }
        private global::System.String _IAdmReferralTypeCode;
        partial void OnIAdmReferralTypeCodeChanging(global::System.String value);
        partial void OnIAdmReferralTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IAdmReferralTypeName
        {
            get
            {
                return _IAdmReferralTypeName;
            }
            set
            {
                OnIAdmReferralTypeNameChanging(value);
                ReportPropertyChanging("IAdmReferralTypeName");
                _IAdmReferralTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IAdmReferralTypeName");
                OnIAdmReferralTypeNameChanged();
            }
        }
        private global::System.String _IAdmReferralTypeName;
        partial void OnIAdmReferralTypeNameChanging(global::System.String value);
        partial void OnIAdmReferralTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNIAdmReferralTypeName
        {
            get
            {
                return _VNIAdmReferralTypeName;
            }
            set
            {
                OnVNIAdmReferralTypeNameChanging(value);
                ReportPropertyChanging("VNIAdmReferralTypeName");
                _VNIAdmReferralTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNIAdmReferralTypeName");
                OnVNIAdmReferralTypeNameChanged();
            }
        }
        private global::System.String _VNIAdmReferralTypeName;
        partial void OnVNIAdmReferralTypeNameChanging(global::System.String value);
        partial void OnVNIAdmReferralTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HospitalizationHistory_refAdmReferralType", "HospitalizationHistory")]
        public EntityCollection<HospitalizationHistory> HospitalizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "HospitalizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HospitalizationHistory>("SureHisModel.FK_HospitalizationHistory_refAdmReferralType", "HospitalizationHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MiscDocuments_refAdmReferralType", "MiscDocuments")]
        public EntityCollection<MiscDocuments> MiscDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MiscDocuments>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "MiscDocuments");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MiscDocuments>("SureHisModel.FK_MiscDocuments_refAdmReferralType", "MiscDocuments", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_refAdmReferralType", "PatientAdmission")]
        public EntityCollection<PatientAdmission> PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_refAdmReferralType", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_refAdmReferralType", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAllergyCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAllergyCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAllergyCategory object.
        /// </summary>
        /// <param name="allgCategoryID">Initial value of the AllgCategoryID property.</param>
        /// <param name="allgCategoryCode">Initial value of the AllgCategoryCode property.</param>
        /// <param name="allgCategoryName">Initial value of the AllgCategoryName property.</param>
        /// <param name="isFhir">Initial value of the IsFhir property.</param>
        public static refAllergyCategory CreaterefAllergyCategory(global::System.Int64 allgCategoryID, global::System.String allgCategoryCode, global::System.String allgCategoryName, global::System.Boolean isFhir)
        {
            refAllergyCategory refAllergyCategory = new refAllergyCategory();
            refAllergyCategory.AllgCategoryID = allgCategoryID;
            refAllergyCategory.AllgCategoryCode = allgCategoryCode;
            refAllergyCategory.AllgCategoryName = allgCategoryName;
            refAllergyCategory.IsFhir = isFhir;
            return refAllergyCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AllgCategoryID
        {
            get
            {
                return _AllgCategoryID;
            }
            set
            {
                if (_AllgCategoryID != value)
                {
                    OnAllgCategoryIDChanging(value);
                    ReportPropertyChanging("AllgCategoryID");
                    _AllgCategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AllgCategoryID");
                    OnAllgCategoryIDChanged();
                }
            }
        }
        private global::System.Int64 _AllgCategoryID;
        partial void OnAllgCategoryIDChanging(global::System.Int64 value);
        partial void OnAllgCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllgCategoryCode
        {
            get
            {
                return _AllgCategoryCode;
            }
            set
            {
                OnAllgCategoryCodeChanging(value);
                ReportPropertyChanging("AllgCategoryCode");
                _AllgCategoryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllgCategoryCode");
                OnAllgCategoryCodeChanged();
            }
        }
        private global::System.String _AllgCategoryCode;
        partial void OnAllgCategoryCodeChanging(global::System.String value);
        partial void OnAllgCategoryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllgCategoryName
        {
            get
            {
                return _AllgCategoryName;
            }
            set
            {
                OnAllgCategoryNameChanging(value);
                ReportPropertyChanging("AllgCategoryName");
                _AllgCategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllgCategoryName");
                OnAllgCategoryNameChanged();
            }
        }
        private global::System.String _AllgCategoryName;
        partial void OnAllgCategoryNameChanging(global::System.String value);
        partial void OnAllgCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNAllgCategoryName
        {
            get
            {
                return _VNAllgCategoryName;
            }
            set
            {
                OnVNAllgCategoryNameChanging(value);
                ReportPropertyChanging("VNAllgCategoryName");
                _VNAllgCategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNAllgCategoryName");
                OnVNAllgCategoryNameChanged();
            }
        }
        private global::System.String _VNAllgCategoryName;
        partial void OnVNAllgCategoryNameChanging(global::System.String value);
        partial void OnVNAllgCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFhir
        {
            get
            {
                return _IsFhir;
            }
            set
            {
                OnIsFhirChanging(value);
                ReportPropertyChanging("IsFhir");
                _IsFhir = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFhir");
                OnIsFhirChanged();
            }
        }
        private global::System.Boolean _IsFhir;
        partial void OnIsFhirChanging(global::System.Boolean value);
        partial void OnIsFhirChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refAllergyIndex_refAllergyCategory", "refAllergyIndex")]
        public EntityCollection<refAllergyIndex> refAllergyIndex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refAllergyIndex>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refAllergyIndex>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyIndex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAllergyIndex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAllergyIndex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAllergyIndex object.
        /// </summary>
        /// <param name="allgIndexID">Initial value of the AllgIndexID property.</param>
        /// <param name="allgIndexName">Initial value of the AllgIndexName property.</param>
        /// <param name="allgCategoryID">Initial value of the AllgCategoryID property.</param>
        /// <param name="h7AllgType">Initial value of the H7AllgType property.</param>
        /// <param name="isFhir">Initial value of the IsFhir property.</param>
        /// <param name="isOther">Initial value of the IsOther property.</param>
        public static refAllergyIndex CreaterefAllergyIndex(global::System.Int64 allgIndexID, global::System.String allgIndexName, global::System.Int64 allgCategoryID, global::System.Int64 h7AllgType, global::System.Boolean isFhir, global::System.Boolean isOther)
        {
            refAllergyIndex refAllergyIndex = new refAllergyIndex();
            refAllergyIndex.AllgIndexID = allgIndexID;
            refAllergyIndex.AllgIndexName = allgIndexName;
            refAllergyIndex.AllgCategoryID = allgCategoryID;
            refAllergyIndex.H7AllgType = h7AllgType;
            refAllergyIndex.IsFhir = isFhir;
            refAllergyIndex.IsOther = isOther;
            return refAllergyIndex;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AllgIndexID
        {
            get
            {
                return _AllgIndexID;
            }
            set
            {
                if (_AllgIndexID != value)
                {
                    OnAllgIndexIDChanging(value);
                    ReportPropertyChanging("AllgIndexID");
                    _AllgIndexID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AllgIndexID");
                    OnAllgIndexIDChanged();
                }
            }
        }
        private global::System.Int64 _AllgIndexID;
        partial void OnAllgIndexIDChanging(global::System.Int64 value);
        partial void OnAllgIndexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AllgIndexName
        {
            get
            {
                return _AllgIndexName;
            }
            set
            {
                OnAllgIndexNameChanging(value);
                ReportPropertyChanging("AllgIndexName");
                _AllgIndexName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AllgIndexName");
                OnAllgIndexNameChanged();
            }
        }
        private global::System.String _AllgIndexName;
        partial void OnAllgIndexNameChanging(global::System.String value);
        partial void OnAllgIndexNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AllgCategoryID
        {
            get
            {
                return _AllgCategoryID;
            }
            set
            {
                OnAllgCategoryIDChanging(value);
                ReportPropertyChanging("AllgCategoryID");
                _AllgCategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AllgCategoryID");
                OnAllgCategoryIDChanged();
            }
        }
        private global::System.Int64 _AllgCategoryID;
        partial void OnAllgCategoryIDChanging(global::System.Int64 value);
        partial void OnAllgCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 H7AllgType
        {
            get
            {
                return _H7AllgType;
            }
            set
            {
                OnH7AllgTypeChanging(value);
                ReportPropertyChanging("H7AllgType");
                _H7AllgType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7AllgType");
                OnH7AllgTypeChanged();
            }
        }
        private global::System.Int64 _H7AllgType;
        partial void OnH7AllgTypeChanging(global::System.Int64 value);
        partial void OnH7AllgTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFhir
        {
            get
            {
                return _IsFhir;
            }
            set
            {
                OnIsFhirChanging(value);
                ReportPropertyChanging("IsFhir");
                _IsFhir = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFhir");
                OnIsFhirChanged();
            }
        }
        private global::System.Boolean _IsFhir;
        partial void OnIsFhirChanging(global::System.Boolean value);
        partial void OnIsFhirChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOther
        {
            get
            {
                return _IsOther;
            }
            set
            {
                OnIsOtherChanging(value);
                ReportPropertyChanging("IsOther");
                _IsOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOther");
                OnIsOtherChanged();
            }
        }
        private global::System.Boolean _IsOther;
        partial void OnIsOtherChanging(global::System.Boolean value);
        partial void OnIsOtherChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AllergyIntolerance_refAllergyIndex", "AllergyIntolerance")]
        public EntityCollection<AllergyIntolerance> AllergyIntolerance
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AllergyIntolerance>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "AllergyIntolerance");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AllergyIntolerance>("SureHisModel.FK_AllergyIntolerance_refAllergyIndex", "AllergyIntolerance", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory")]
        public refAllergyCategory refAllergyCategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyCategory>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyCategory>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refAllergyCategory> refAllergyCategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refAllergyCategory>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refAllergyCategory>("SureHisModel.FK_refAllergyIndex_refAllergyCategory", "refAllergyCategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAnnTemp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAnnTemp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAnnTemp object.
        /// </summary>
        /// <param name="annTempID">Initial value of the AnnTempID property.</param>
        /// <param name="annTempName">Initial value of the AnnTempName property.</param>
        /// <param name="annTempContent">Initial value of the AnnTempContent property.</param>
        /// <param name="v_AnnTempType">Initial value of the V_AnnTempType property.</param>
        public static refAnnTemp CreaterefAnnTemp(global::System.Byte annTempID, global::System.String annTempName, global::System.String annTempContent, global::System.Int64 v_AnnTempType)
        {
            refAnnTemp refAnnTemp = new refAnnTemp();
            refAnnTemp.AnnTempID = annTempID;
            refAnnTemp.AnnTempName = annTempName;
            refAnnTemp.AnnTempContent = annTempContent;
            refAnnTemp.V_AnnTempType = v_AnnTempType;
            return refAnnTemp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte AnnTempID
        {
            get
            {
                return _AnnTempID;
            }
            set
            {
                if (_AnnTempID != value)
                {
                    OnAnnTempIDChanging(value);
                    ReportPropertyChanging("AnnTempID");
                    _AnnTempID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnnTempID");
                    OnAnnTempIDChanged();
                }
            }
        }
        private global::System.Byte _AnnTempID;
        partial void OnAnnTempIDChanging(global::System.Byte value);
        partial void OnAnnTempIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnnTempName
        {
            get
            {
                return _AnnTempName;
            }
            set
            {
                OnAnnTempNameChanging(value);
                ReportPropertyChanging("AnnTempName");
                _AnnTempName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AnnTempName");
                OnAnnTempNameChanged();
            }
        }
        private global::System.String _AnnTempName;
        partial void OnAnnTempNameChanging(global::System.String value);
        partial void OnAnnTempNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnnTempContent
        {
            get
            {
                return _AnnTempContent;
            }
            set
            {
                OnAnnTempContentChanging(value);
                ReportPropertyChanging("AnnTempContent");
                _AnnTempContent = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AnnTempContent");
                OnAnnTempContentChanged();
            }
        }
        private global::System.String _AnnTempContent;
        partial void OnAnnTempContentChanging(global::System.String value);
        partial void OnAnnTempContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_AnnTempType
        {
            get
            {
                return _V_AnnTempType;
            }
            set
            {
                OnV_AnnTempTypeChanging(value);
                ReportPropertyChanging("V_AnnTempType");
                _V_AnnTempType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AnnTempType");
                OnV_AnnTempTypeChanged();
            }
        }
        private global::System.Int64 _V_AnnTempType;
        partial void OnV_AnnTempTypeChanging(global::System.Int64 value);
        partial void OnV_AnnTempTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refAppConfig")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refAppConfig : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refAppConfig object.
        /// </summary>
        /// <param name="configItemID">Initial value of the ConfigItemID property.</param>
        /// <param name="configItemKey">Initial value of the ConfigItemKey property.</param>
        /// <param name="configItemValue">Initial value of the ConfigItemValue property.</param>
        public static refAppConfig CreaterefAppConfig(global::System.Int64 configItemID, global::System.String configItemKey, global::System.String configItemValue)
        {
            refAppConfig refAppConfig = new refAppConfig();
            refAppConfig.ConfigItemID = configItemID;
            refAppConfig.ConfigItemKey = configItemKey;
            refAppConfig.ConfigItemValue = configItemValue;
            return refAppConfig;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ConfigItemID
        {
            get
            {
                return _ConfigItemID;
            }
            set
            {
                if (_ConfigItemID != value)
                {
                    OnConfigItemIDChanging(value);
                    ReportPropertyChanging("ConfigItemID");
                    _ConfigItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigItemID");
                    OnConfigItemIDChanged();
                }
            }
        }
        private global::System.Int64 _ConfigItemID;
        partial void OnConfigItemIDChanging(global::System.Int64 value);
        partial void OnConfigItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigItemKey
        {
            get
            {
                return _ConfigItemKey;
            }
            set
            {
                OnConfigItemKeyChanging(value);
                ReportPropertyChanging("ConfigItemKey");
                _ConfigItemKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigItemKey");
                OnConfigItemKeyChanged();
            }
        }
        private global::System.String _ConfigItemKey;
        partial void OnConfigItemKeyChanging(global::System.String value);
        partial void OnConfigItemKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ConfigItemValue
        {
            get
            {
                return _ConfigItemValue;
            }
            set
            {
                OnConfigItemValueChanging(value);
                ReportPropertyChanging("ConfigItemValue");
                _ConfigItemValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ConfigItemValue");
                OnConfigItemValueChanged();
            }
        }
        private global::System.String _ConfigItemValue;
        partial void OnConfigItemValueChanging(global::System.String value);
        partial void OnConfigItemValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConfigItemNotes
        {
            get
            {
                return _ConfigItemNotes;
            }
            set
            {
                OnConfigItemNotesChanging(value);
                ReportPropertyChanging("ConfigItemNotes");
                _ConfigItemNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConfigItemNotes");
                OnConfigItemNotesChanged();
            }
        }
        private global::System.String _ConfigItemNotes;
        partial void OnConfigItemNotesChanging(global::System.String value);
        partial void OnConfigItemNotesChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refBloodType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refBloodType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refBloodType object.
        /// </summary>
        /// <param name="bloodTypeID">Initial value of the BloodTypeID property.</param>
        /// <param name="ptBloodTypeCode">Initial value of the PtBloodTypeCode property.</param>
        public static refBloodType CreaterefBloodType(global::System.Int64 bloodTypeID, global::System.String ptBloodTypeCode)
        {
            refBloodType refBloodType = new refBloodType();
            refBloodType.BloodTypeID = bloodTypeID;
            refBloodType.PtBloodTypeCode = ptBloodTypeCode;
            return refBloodType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BloodTypeID
        {
            get
            {
                return _BloodTypeID;
            }
            set
            {
                if (_BloodTypeID != value)
                {
                    OnBloodTypeIDChanging(value);
                    ReportPropertyChanging("BloodTypeID");
                    _BloodTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BloodTypeID");
                    OnBloodTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _BloodTypeID;
        partial void OnBloodTypeIDChanging(global::System.Int64 value);
        partial void OnBloodTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtBloodTypeCode
        {
            get
            {
                return _PtBloodTypeCode;
            }
            set
            {
                OnPtBloodTypeCodeChanging(value);
                ReportPropertyChanging("PtBloodTypeCode");
                _PtBloodTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtBloodTypeCode");
                OnPtBloodTypeCodeChanged();
            }
        }
        private global::System.String _PtBloodTypeCode;
        partial void OnPtBloodTypeCodeChanging(global::System.String value);
        partial void OnPtBloodTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CanbeTranfusedTo
        {
            get
            {
                return _CanbeTranfusedTo;
            }
            set
            {
                OnCanbeTranfusedToChanging(value);
                ReportPropertyChanging("CanbeTranfusedTo");
                _CanbeTranfusedTo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CanbeTranfusedTo");
                OnCanbeTranfusedToChanged();
            }
        }
        private global::System.String _CanbeTranfusedTo;
        partial void OnCanbeTranfusedToChanging(global::System.String value);
        partial void OnCanbeTranfusedToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Antibody
        {
            get
            {
                return _Antibody;
            }
            set
            {
                OnAntibodyChanging(value);
                ReportPropertyChanging("Antibody");
                _Antibody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Antibody");
                OnAntibodyChanged();
            }
        }
        private global::System.String _Antibody;
        partial void OnAntibodyChanging(global::System.String value);
        partial void OnAntibodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Antigen
        {
            get
            {
                return _Antigen;
            }
            set
            {
                OnAntigenChanging(value);
                ReportPropertyChanging("Antigen");
                _Antigen = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Antigen");
                OnAntigenChanged();
            }
        }
        private global::System.String _Antigen;
        partial void OnAntigenChanging(global::System.String value);
        partial void OnAntigenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isRhesus
        {
            get
            {
                return _isRhesus;
            }
            set
            {
                OnisRhesusChanging(value);
                ReportPropertyChanging("isRhesus");
                _isRhesus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isRhesus");
                OnisRhesusChanged();
            }
        }
        private Nullable<global::System.Boolean> _isRhesus;
        partial void OnisRhesusChanging(Nullable<global::System.Boolean> value);
        partial void OnisRhesusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Bloodbank_refBloodType", "Bloodbank")]
        public EntityCollection<Bloodbank> Bloodbank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bloodbank>("SureHisModel.FK_Bloodbank_refBloodType", "Bloodbank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bloodbank>("SureHisModel.FK_Bloodbank_refBloodType", "Bloodbank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Donor_refBloodType", "Donor")]
        public EntityCollection<Donor> Donor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Donor>("SureHisModel.FK_Donor_refBloodType", "Donor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Donor>("SureHisModel.FK_Donor_refBloodType", "Donor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_refBloodType", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("SureHisModel.FK_Patient_refBloodType", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("SureHisModel.FK_Patient_refBloodType", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCareerMOH")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCareerMOH : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCareerMOH object.
        /// </summary>
        /// <param name="careerMOHID">Initial value of the CareerMOHID property.</param>
        /// <param name="careerMOHCode">Initial value of the CareerMOHCode property.</param>
        /// <param name="careerName">Initial value of the CareerName property.</param>
        public static refCareerMOH CreaterefCareerMOH(global::System.Int64 careerMOHID, global::System.String careerMOHCode, global::System.String careerName)
        {
            refCareerMOH refCareerMOH = new refCareerMOH();
            refCareerMOH.CareerMOHID = careerMOHID;
            refCareerMOH.CareerMOHCode = careerMOHCode;
            refCareerMOH.CareerName = careerName;
            return refCareerMOH;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CareerMOHID
        {
            get
            {
                return _CareerMOHID;
            }
            set
            {
                if (_CareerMOHID != value)
                {
                    OnCareerMOHIDChanging(value);
                    ReportPropertyChanging("CareerMOHID");
                    _CareerMOHID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CareerMOHID");
                    OnCareerMOHIDChanged();
                }
            }
        }
        private global::System.Int64 _CareerMOHID;
        partial void OnCareerMOHIDChanging(global::System.Int64 value);
        partial void OnCareerMOHIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CareerMOHCode
        {
            get
            {
                return _CareerMOHCode;
            }
            set
            {
                OnCareerMOHCodeChanging(value);
                ReportPropertyChanging("CareerMOHCode");
                _CareerMOHCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CareerMOHCode");
                OnCareerMOHCodeChanged();
            }
        }
        private global::System.String _CareerMOHCode;
        partial void OnCareerMOHCodeChanging(global::System.String value);
        partial void OnCareerMOHCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CareerName
        {
            get
            {
                return _CareerName;
            }
            set
            {
                OnCareerNameChanging(value);
                ReportPropertyChanging("CareerName");
                _CareerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CareerName");
                OnCareerNameChanged();
            }
        }
        private global::System.String _CareerName;
        partial void OnCareerNameChanging(global::System.String value);
        partial void OnCareerNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OccCareerMOH_refCareerMOH", "OccCareerMOH")]
        public EntityCollection<OccCareerMOH> OccCareerMOH
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OccCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "OccCareerMOH");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OccCareerMOH>("SureHisModel.FK_OccCareerMOH_refCareerMOH", "OccCareerMOH", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Patient_refCareerMOH", "Patient")]
        public EntityCollection<Patient> Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Patient>("SureHisModel.FK_Patient_refCareerMOH", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Patient>("SureHisModel.FK_Patient_refCareerMOH", "Patient", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCertification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCertification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCertification object.
        /// </summary>
        /// <param name="certificateID">Initial value of the CertificateID property.</param>
        /// <param name="certificateCode">Initial value of the CertificateCode property.</param>
        /// <param name="certificateName">Initial value of the CertificateName property.</param>
        public static refCertification CreaterefCertification(global::System.Int64 certificateID, global::System.String certificateCode, global::System.String certificateName)
        {
            refCertification refCertification = new refCertification();
            refCertification.CertificateID = certificateID;
            refCertification.CertificateCode = certificateCode;
            refCertification.CertificateName = certificateName;
            return refCertification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 CertificateID
        {
            get
            {
                return _CertificateID;
            }
            set
            {
                if (_CertificateID != value)
                {
                    OnCertificateIDChanging(value);
                    ReportPropertyChanging("CertificateID");
                    _CertificateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CertificateID");
                    OnCertificateIDChanged();
                }
            }
        }
        private global::System.Int64 _CertificateID;
        partial void OnCertificateIDChanging(global::System.Int64 value);
        partial void OnCertificateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateCode
        {
            get
            {
                return _CertificateCode;
            }
            set
            {
                OnCertificateCodeChanging(value);
                ReportPropertyChanging("CertificateCode");
                _CertificateCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CertificateCode");
                OnCertificateCodeChanged();
            }
        }
        private global::System.String _CertificateCode;
        partial void OnCertificateCodeChanging(global::System.String value);
        partial void OnCertificateCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateName
        {
            get
            {
                return _CertificateName;
            }
            set
            {
                OnCertificateNameChanging(value);
                ReportPropertyChanging("CertificateName");
                _CertificateName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CertificateName");
                OnCertificateNameChanged();
            }
        }
        private global::System.String _CertificateName;
        partial void OnCertificateNameChanging(global::System.String value);
        partial void OnCertificateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNCertificateName
        {
            get
            {
                return _VNCertificateName;
            }
            set
            {
                OnVNCertificateNameChanging(value);
                ReportPropertyChanging("VNCertificateName");
                _VNCertificateName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNCertificateName");
                OnVNCertificateNameChanged();
            }
        }
        private global::System.String _VNCertificateName;
        partial void OnVNCertificateNameChanging(global::System.String value);
        partial void OnVNCertificateNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_refCertification_", "EduLevel")]
        public EntityCollection<EduLevel> EduLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_refCertification_", "EduLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_refCertification_", "EduLevel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCityProvince")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCityProvince : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCityProvince object.
        /// </summary>
        /// <param name="cityProvinceID">Initial value of the CityProvinceID property.</param>
        /// <param name="cityProvinceName">Initial value of the CityProvinceName property.</param>
        public static refCityProvince CreaterefCityProvince(global::System.String cityProvinceID, global::System.String cityProvinceName)
        {
            refCityProvince refCityProvince = new refCityProvince();
            refCityProvince.CityProvinceID = cityProvinceID;
            refCityProvince.CityProvinceName = cityProvinceName;
            return refCityProvince;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityProvinceID
        {
            get
            {
                return _CityProvinceID;
            }
            set
            {
                if (_CityProvinceID != value)
                {
                    OnCityProvinceIDChanging(value);
                    ReportPropertyChanging("CityProvinceID");
                    _CityProvinceID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CityProvinceID");
                    OnCityProvinceIDChanged();
                }
            }
        }
        private global::System.String _CityProvinceID;
        partial void OnCityProvinceIDChanging(global::System.String value);
        partial void OnCityProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityProvinceName
        {
            get
            {
                return _CityProvinceName;
            }
            set
            {
                OnCityProvinceNameChanging(value);
                ReportPropertyChanging("CityProvinceName");
                _CityProvinceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityProvinceName");
                OnCityProvinceNameChanged();
            }
        }
        private global::System.String _CityProvinceName;
        partial void OnCityProvinceNameChanging(global::System.String value);
        partial void OnCityProvinceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityProviceLevel
        {
            get
            {
                return _CityProviceLevel;
            }
            set
            {
                OnCityProviceLevelChanging(value);
                ReportPropertyChanging("CityProviceLevel");
                _CityProviceLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityProviceLevel");
                OnCityProviceLevelChanged();
            }
        }
        private global::System.String _CityProviceLevel;
        partial void OnCityProviceLevelChanging(global::System.String value);
        partial void OnCityProviceLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_refProvince", "HCProvider")]
        public EntityCollection<HCProvider> HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_refProvince", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_refProvince", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refProvince", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refProvince", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refProvince", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refDistrict_refProvince", "refDistrict")]
        public EntityCollection<refDistrict> refDistrict
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refDistrict>("SureHisModel.FK_refDistrict_refProvince", "refDistrict");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refDistrict>("SureHisModel.FK_refDistrict_refProvince", "refDistrict", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refProvince_refCountry", "refCountry")]
        public refCountry refCountry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_refProvince_refCountry", "refCountry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_refProvince_refCountry", "refCountry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCountry> refCountryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCountry>("SureHisModel.FK_refProvince_refCountry", "refCountry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCountry>("SureHisModel.FK_refProvince_refCountry", "refCountry", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCLMeasurement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCLMeasurement : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCLMeasurement object.
        /// </summary>
        /// <param name="mCLID">Initial value of the MCLID property.</param>
        /// <param name="mCLCode">Initial value of the MCLCode property.</param>
        /// <param name="mCLName">Initial value of the MCLName property.</param>
        public static refCLMeasurement CreaterefCLMeasurement(global::System.Int64 mCLID, global::System.String mCLCode, global::System.String mCLName)
        {
            refCLMeasurement refCLMeasurement = new refCLMeasurement();
            refCLMeasurement.MCLID = mCLID;
            refCLMeasurement.MCLCode = mCLCode;
            refCLMeasurement.MCLName = mCLName;
            return refCLMeasurement;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MCLID
        {
            get
            {
                return _MCLID;
            }
            set
            {
                if (_MCLID != value)
                {
                    OnMCLIDChanging(value);
                    ReportPropertyChanging("MCLID");
                    _MCLID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MCLID");
                    OnMCLIDChanged();
                }
            }
        }
        private global::System.Int64 _MCLID;
        partial void OnMCLIDChanging(global::System.Int64 value);
        partial void OnMCLIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MCLCode
        {
            get
            {
                return _MCLCode;
            }
            set
            {
                OnMCLCodeChanging(value);
                ReportPropertyChanging("MCLCode");
                _MCLCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MCLCode");
                OnMCLCodeChanged();
            }
        }
        private global::System.String _MCLCode;
        partial void OnMCLCodeChanging(global::System.String value);
        partial void OnMCLCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MCLName
        {
            get
            {
                return _MCLName;
            }
            set
            {
                OnMCLNameChanging(value);
                ReportPropertyChanging("MCLName");
                _MCLName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MCLName");
                OnMCLNameChanged();
            }
        }
        private global::System.String _MCLName;
        partial void OnMCLNameChanging(global::System.String value);
        partial void OnMCLNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MCLDesc
        {
            get
            {
                return _MCLDesc;
            }
            set
            {
                OnMCLDescChanging(value);
                ReportPropertyChanging("MCLDesc");
                _MCLDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MCLDesc");
                OnMCLDescChanged();
            }
        }
        private global::System.String _MCLDesc;
        partial void OnMCLDescChanging(global::System.String value);
        partial void OnMCLDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ForClinical
        {
            get
            {
                return _ForClinical;
            }
            set
            {
                OnForClinicalChanging(value);
                ReportPropertyChanging("ForClinical");
                _ForClinical = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ForClinical");
                OnForClinicalChanged();
            }
        }
        private Nullable<global::System.Boolean> _ForClinical;
        partial void OnForClinicalChanging(Nullable<global::System.Boolean> value);
        partial void OnForClinicalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refUnitOfMeasure_refCLMeasurement", "refUnitOfMeasure")]
        public EntityCollection<refUnitOfMeasure> refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refUnitOfMeasure>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refUnitOfMeasure>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refUnitOfMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCommonTerm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCommonTerm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCommonTerm object.
        /// </summary>
        /// <param name="cTermID">Initial value of the CTermID property.</param>
        /// <param name="abbreviation">Initial value of the Abbreviation property.</param>
        /// <param name="v_ComTermCatg">Initial value of the V_ComTermCatg property.</param>
        public static refCommonTerm CreaterefCommonTerm(global::System.Int16 cTermID, global::System.String abbreviation, global::System.Int64 v_ComTermCatg)
        {
            refCommonTerm refCommonTerm = new refCommonTerm();
            refCommonTerm.CTermID = cTermID;
            refCommonTerm.Abbreviation = abbreviation;
            refCommonTerm.V_ComTermCatg = v_ComTermCatg;
            return refCommonTerm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 CTermID
        {
            get
            {
                return _CTermID;
            }
            set
            {
                if (_CTermID != value)
                {
                    OnCTermIDChanging(value);
                    ReportPropertyChanging("CTermID");
                    _CTermID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CTermID");
                    OnCTermIDChanged();
                }
            }
        }
        private global::System.Int16 _CTermID;
        partial void OnCTermIDChanging(global::System.Int16 value);
        partial void OnCTermIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbreviation
        {
            get
            {
                return _Abbreviation;
            }
            set
            {
                OnAbbreviationChanging(value);
                ReportPropertyChanging("Abbreviation");
                _Abbreviation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbreviation");
                OnAbbreviationChanged();
            }
        }
        private global::System.String _Abbreviation;
        partial void OnAbbreviationChanging(global::System.String value);
        partial void OnAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermPhase
        {
            get
            {
                return _TermPhase;
            }
            set
            {
                OnTermPhaseChanging(value);
                ReportPropertyChanging("TermPhase");
                _TermPhase = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermPhase");
                OnTermPhaseChanged();
            }
        }
        private global::System.String _TermPhase;
        partial void OnTermPhaseChanging(global::System.String value);
        partial void OnTermPhaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Meaning
        {
            get
            {
                return _Meaning;
            }
            set
            {
                OnMeaningChanging(value);
                ReportPropertyChanging("Meaning");
                _Meaning = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Meaning");
                OnMeaningChanged();
            }
        }
        private global::System.String _Meaning;
        partial void OnMeaningChanging(global::System.String value);
        partial void OnMeaningChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AbbreviationsVNS
        {
            get
            {
                return _AbbreviationsVNS;
            }
            set
            {
                OnAbbreviationsVNSChanging(value);
                ReportPropertyChanging("AbbreviationsVNS");
                _AbbreviationsVNS = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AbbreviationsVNS");
                OnAbbreviationsVNSChanged();
            }
        }
        private global::System.String _AbbreviationsVNS;
        partial void OnAbbreviationsVNSChanging(global::System.String value);
        partial void OnAbbreviationsVNSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TermPhaseVNs
        {
            get
            {
                return _TermPhaseVNs;
            }
            set
            {
                OnTermPhaseVNsChanging(value);
                ReportPropertyChanging("TermPhaseVNs");
                _TermPhaseVNs = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TermPhaseVNs");
                OnTermPhaseVNsChanged();
            }
        }
        private global::System.String _TermPhaseVNs;
        partial void OnTermPhaseVNsChanging(global::System.String value);
        partial void OnTermPhaseVNsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ComTermCatg
        {
            get
            {
                return _V_ComTermCatg;
            }
            set
            {
                OnV_ComTermCatgChanging(value);
                ReportPropertyChanging("V_ComTermCatg");
                _V_ComTermCatg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ComTermCatg");
                OnV_ComTermCatgChanged();
            }
        }
        private global::System.Int64 _V_ComTermCatg;
        partial void OnV_ComTermCatgChanging(global::System.Int64 value);
        partial void OnV_ComTermCatgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNotActivated
        {
            get
            {
                return _IsNotActivated;
            }
            set
            {
                OnIsNotActivatedChanging(value);
                ReportPropertyChanging("IsNotActivated");
                _IsNotActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNotActivated");
                OnIsNotActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNotActivated;
        partial void OnIsNotActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNotActivatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm", "DrPrescriptionTmps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_02", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_02", "DrPrescriptionTmps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_03", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_03", "DrPrescriptionTmps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_04", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_04", "DrPrescriptionTmps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrPrescriptionTmps_refCommonTerm_05", "DrPrescriptionTmps")]
        public EntityCollection<DrPrescriptionTmps> DrPrescriptionTmps4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "DrPrescriptionTmps");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrPrescriptionTmps>("SureHisModel.FK_DrPrescriptionTmps_refCommonTerm_05", "DrPrescriptionTmps", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_02", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_02", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_03", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_03", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_04", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail3
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_04", "PrescriptionDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrescriptionDetail_refCommonTerm_05", "PrescriptionDetail")]
        public EntityCollection<PrescriptionDetail> PrescriptionDetail4
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "PrescriptionDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrescriptionDetail>("SureHisModel.FK_PrescriptionDetail_refCommonTerm_05", "PrescriptionDetail", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCountry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCountry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCountry object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static refCountry CreaterefCountry(global::System.String countryID, global::System.String countryName)
        {
            refCountry refCountry = new refCountry();
            refCountry.CountryID = countryID;
            refCountry.CountryName = countryName;
            return refCountry;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryDesc
        {
            get
            {
                return _CountryDesc;
            }
            set
            {
                OnCountryDescChanging(value);
                ReportPropertyChanging("CountryDesc");
                _CountryDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryDesc");
                OnCountryDescChanged();
            }
        }
        private global::System.String _CountryDesc;
        partial void OnCountryDescChanging(global::System.String value);
        partial void OnCountryDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DialingCode
        {
            get
            {
                return _DialingCode;
            }
            set
            {
                OnDialingCodeChanging(value);
                ReportPropertyChanging("DialingCode");
                _DialingCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DialingCode");
                OnDialingCodeChanged();
            }
        }
        private global::System.String _DialingCode;
        partial void OnDialingCodeChanging(global::System.String value);
        partial void OnDialingCodeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refCountry", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refCountry", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refCountry", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LotNumber_refCountry", "LotNumber")]
        public EntityCollection<LotNumber> LotNumber
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LotNumber>("SureHisModel.FK_LotNumber_refCountry", "LotNumber");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LotNumber>("SureHisModel.FK_LotNumber_refCountry", "LotNumber", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Organization_refCountry", "Organization")]
        public EntityCollection<Organization> Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("SureHisModel.FK_Organization_refCountry", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("SureHisModel.FK_Organization_refCountry", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refCountry", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refCountry", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refCountry", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refProvince_refCountry", "refCityProvince")]
        public EntityCollection<refCityProvince> refCityProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refCityProvince>("SureHisModel.FK_refProvince_refCountry", "refCityProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refCityProvince>("SureHisModel.FK_refProvince_refCountry", "refCityProvince", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refCurrency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refCurrency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refCurrency object.
        /// </summary>
        /// <param name="curCode">Initial value of the CurCode property.</param>
        /// <param name="curName">Initial value of the CurName property.</param>
        public static refCurrency CreaterefCurrency(global::System.String curCode, global::System.String curName)
        {
            refCurrency refCurrency = new refCurrency();
            refCurrency.CurCode = curCode;
            refCurrency.CurName = curName;
            return refCurrency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurCode
        {
            get
            {
                return _CurCode;
            }
            set
            {
                if (_CurCode != value)
                {
                    OnCurCodeChanging(value);
                    ReportPropertyChanging("CurCode");
                    _CurCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CurCode");
                    OnCurCodeChanged();
                }
            }
        }
        private global::System.String _CurCode;
        partial void OnCurCodeChanging(global::System.String value);
        partial void OnCurCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CurName
        {
            get
            {
                return _CurName;
            }
            set
            {
                OnCurNameChanging(value);
                ReportPropertyChanging("CurName");
                _CurName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CurName");
                OnCurNameChanged();
            }
        }
        private global::System.String _CurName;
        partial void OnCurNameChanging(global::System.String value);
        partial void OnCurNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurDesc
        {
            get
            {
                return _CurDesc;
            }
            set
            {
                OnCurDescChanging(value);
                ReportPropertyChanging("CurDesc");
                _CurDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurDesc");
                OnCurDescChanged();
            }
        }
        private global::System.String _CurDesc;
        partial void OnCurDescChanging(global::System.String value);
        partial void OnCurDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CurNotes
        {
            get
            {
                return _CurNotes;
            }
            set
            {
                OnCurNotesChanging(value);
                ReportPropertyChanging("CurNotes");
                _CurNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CurNotes");
                OnCurNotesChanged();
            }
        }
        private global::System.String _CurNotes;
        partial void OnCurNotesChanging(global::System.String value);
        partial void OnCurNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Quotation_refCurrency", "Quotation")]
        public EntityCollection<Quotation> Quotation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quotation>("SureHisModel.FK_Quotation_refCurrency", "Quotation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quotation>("SureHisModel.FK_Quotation_refCurrency", "Quotation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDepartment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDepartment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDepartment object.
        /// </summary>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        /// <param name="deptName">Initial value of the DeptName property.</param>
        public static refDepartment CreaterefDepartment(global::System.Int64 deptID, global::System.String deptName)
        {
            refDepartment refDepartment = new refDepartment();
            refDepartment.DeptID = deptID;
            refDepartment.DeptName = deptName;
            return refDepartment;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                if (_DeptID != value)
                {
                    OnDeptIDChanging(value);
                    ReportPropertyChanging("DeptID");
                    _DeptID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeptID");
                    OnDeptIDChanged();
                }
            }
        }
        private global::System.Int64 _DeptID;
        partial void OnDeptIDChanging(global::System.Int64 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PDeptD
        {
            get
            {
                return _PDeptD;
            }
            set
            {
                OnPDeptDChanging(value);
                ReportPropertyChanging("PDeptD");
                _PDeptD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PDeptD");
                OnPDeptDChanged();
            }
        }
        private Nullable<global::System.Int64> _PDeptD;
        partial void OnPDeptDChanging(Nullable<global::System.Int64> value);
        partial void OnPDeptDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeptName
        {
            get
            {
                return _DeptName;
            }
            set
            {
                OnDeptNameChanging(value);
                ReportPropertyChanging("DeptName");
                _DeptName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeptName");
                OnDeptNameChanged();
            }
        }
        private global::System.String _DeptName;
        partial void OnDeptNameChanging(global::System.String value);
        partial void OnDeptNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepDescription
        {
            get
            {
                return _DepDescription;
            }
            set
            {
                OnDepDescriptionChanging(value);
                ReportPropertyChanging("DepDescription");
                _DepDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepDescription");
                OnDepDescriptionChanged();
            }
        }
        private global::System.String _DepDescription;
        partial void OnDepDescriptionChanging(global::System.String value);
        partial void OnDepDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MOHDeptCode
        {
            get
            {
                return _MOHDeptCode;
            }
            set
            {
                OnMOHDeptCodeChanging(value);
                ReportPropertyChanging("MOHDeptCode");
                _MOHDeptCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MOHDeptCode");
                OnMOHDeptCodeChanged();
            }
        }
        private global::System.String _MOHDeptCode;
        partial void OnMOHDeptCodeChanging(global::System.String value);
        partial void OnMOHDeptCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HIDeptCode
        {
            get
            {
                return _HIDeptCode;
            }
            set
            {
                OnHIDeptCodeChanging(value);
                ReportPropertyChanging("HIDeptCode");
                _HIDeptCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HIDeptCode");
                OnHIDeptCodeChanged();
            }
        }
        private global::System.String _HIDeptCode;
        partial void OnHIDeptCodeChanging(global::System.String value);
        partial void OnHIDeptCodeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDepreciationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDepreciationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDepreciationType object.
        /// </summary>
        /// <param name="deprecTypeID">Initial value of the DeprecTypeID property.</param>
        /// <param name="deprecTypeName">Initial value of the DeprecTypeName property.</param>
        public static refDepreciationType CreaterefDepreciationType(global::System.Int32 deprecTypeID, global::System.String deprecTypeName)
        {
            refDepreciationType refDepreciationType = new refDepreciationType();
            refDepreciationType.DeprecTypeID = deprecTypeID;
            refDepreciationType.DeprecTypeName = deprecTypeName;
            return refDepreciationType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeprecTypeID
        {
            get
            {
                return _DeprecTypeID;
            }
            set
            {
                if (_DeprecTypeID != value)
                {
                    OnDeprecTypeIDChanging(value);
                    ReportPropertyChanging("DeprecTypeID");
                    _DeprecTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DeprecTypeID");
                    OnDeprecTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DeprecTypeID;
        partial void OnDeprecTypeIDChanging(global::System.Int32 value);
        partial void OnDeprecTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeprecTypeName
        {
            get
            {
                return _DeprecTypeName;
            }
            set
            {
                OnDeprecTypeNameChanging(value);
                ReportPropertyChanging("DeprecTypeName");
                _DeprecTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeprecTypeName");
                OnDeprecTypeNameChanged();
            }
        }
        private global::System.String _DeprecTypeName;
        partial void OnDeprecTypeNameChanging(global::System.String value);
        partial void OnDeprecTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DeprecDesc
        {
            get
            {
                return _DeprecDesc;
            }
            set
            {
                OnDeprecDescChanging(value);
                ReportPropertyChanging("DeprecDesc");
                _DeprecDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DeprecDesc");
                OnDeprecDescChanged();
            }
        }
        private global::System.String _DeprecDesc;
        partial void OnDeprecDescChanging(global::System.String value);
        partial void OnDeprecDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_refDepreciationType", "Resource")]
        public EntityCollection<Resource> Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("SureHisModel.FK_Resource_refDepreciationType", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("SureHisModel.FK_Resource_refDepreciationType", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDiagnosis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDiagnosis : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDiagnosis object.
        /// </summary>
        /// <param name="dxID">Initial value of the DxID property.</param>
        /// <param name="dxCode">Initial value of the DxCode property.</param>
        /// <param name="dxName">Initial value of the DxName property.</param>
        public static refDiagnosis CreaterefDiagnosis(global::System.Int64 dxID, global::System.String dxCode, global::System.String dxName)
        {
            refDiagnosis refDiagnosis = new refDiagnosis();
            refDiagnosis.DxID = dxID;
            refDiagnosis.DxCode = dxCode;
            refDiagnosis.DxName = dxName;
            return refDiagnosis;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DxID
        {
            get
            {
                return _DxID;
            }
            set
            {
                if (_DxID != value)
                {
                    OnDxIDChanging(value);
                    ReportPropertyChanging("DxID");
                    _DxID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DxID");
                    OnDxIDChanged();
                }
            }
        }
        private global::System.Int64 _DxID;
        partial void OnDxIDChanging(global::System.Int64 value);
        partial void OnDxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DxCode
        {
            get
            {
                return _DxCode;
            }
            set
            {
                OnDxCodeChanging(value);
                ReportPropertyChanging("DxCode");
                _DxCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DxCode");
                OnDxCodeChanged();
            }
        }
        private global::System.String _DxCode;
        partial void OnDxCodeChanging(global::System.String value);
        partial void OnDxCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DxName
        {
            get
            {
                return _DxName;
            }
            set
            {
                OnDxNameChanging(value);
                ReportPropertyChanging("DxName");
                _DxName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DxName");
                OnDxNameChanged();
            }
        }
        private global::System.String _DxName;
        partial void OnDxNameChanging(global::System.String value);
        partial void OnDxNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DxDesc
        {
            get
            {
                return _DxDesc;
            }
            set
            {
                OnDxDescChanging(value);
                ReportPropertyChanging("DxDesc");
                _DxDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DxDesc");
                OnDxDescChanged();
            }
        }
        private global::System.String _DxDesc;
        partial void OnDxDescChanging(global::System.String value);
        partial void OnDxDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PtAdmission_reDiagnosis", "PatientAdmission")]
        public EntityCollection<PatientAdmission> PatientAdmission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_reDiagnosis", "PatientAdmission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientAdmission>("SureHisModel.FK_PtAdmission_reDiagnosis", "PatientAdmission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDischargeDisposition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDischargeDisposition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDischargeDisposition object.
        /// </summary>
        /// <param name="hCFEDispDisposID">Initial value of the HCFEDispDisposID property.</param>
        /// <param name="hCFEDispDisposCode">Initial value of the HCFEDispDisposCode property.</param>
        /// <param name="hCFEDispDisposName">Initial value of the HCFEDispDisposName property.</param>
        /// <param name="is7">Initial value of the Is7 property.</param>
        public static refDischargeDisposition CreaterefDischargeDisposition(global::System.Int64 hCFEDispDisposID, global::System.String hCFEDispDisposCode, global::System.String hCFEDispDisposName, global::System.Boolean is7)
        {
            refDischargeDisposition refDischargeDisposition = new refDischargeDisposition();
            refDischargeDisposition.HCFEDispDisposID = hCFEDispDisposID;
            refDischargeDisposition.HCFEDispDisposCode = hCFEDispDisposCode;
            refDischargeDisposition.HCFEDispDisposName = hCFEDispDisposName;
            refDischargeDisposition.Is7 = is7;
            return refDischargeDisposition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCFEDispDisposID
        {
            get
            {
                return _HCFEDispDisposID;
            }
            set
            {
                if (_HCFEDispDisposID != value)
                {
                    OnHCFEDispDisposIDChanging(value);
                    ReportPropertyChanging("HCFEDispDisposID");
                    _HCFEDispDisposID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCFEDispDisposID");
                    OnHCFEDispDisposIDChanged();
                }
            }
        }
        private global::System.Int64 _HCFEDispDisposID;
        partial void OnHCFEDispDisposIDChanging(global::System.Int64 value);
        partial void OnHCFEDispDisposIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispDisposCode
        {
            get
            {
                return _HCFEDispDisposCode;
            }
            set
            {
                OnHCFEDispDisposCodeChanging(value);
                ReportPropertyChanging("HCFEDispDisposCode");
                _HCFEDispDisposCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCFEDispDisposCode");
                OnHCFEDispDisposCodeChanged();
            }
        }
        private global::System.String _HCFEDispDisposCode;
        partial void OnHCFEDispDisposCodeChanging(global::System.String value);
        partial void OnHCFEDispDisposCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispDisposName
        {
            get
            {
                return _HCFEDispDisposName;
            }
            set
            {
                OnHCFEDispDisposNameChanging(value);
                ReportPropertyChanging("HCFEDispDisposName");
                _HCFEDispDisposName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCFEDispDisposName");
                OnHCFEDispDisposNameChanged();
            }
        }
        private global::System.String _HCFEDispDisposName;
        partial void OnHCFEDispDisposNameChanging(global::System.String value);
        partial void OnHCFEDispDisposNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNHCFEDispDisposName
        {
            get
            {
                return _VNHCFEDispDisposName;
            }
            set
            {
                OnVNHCFEDispDisposNameChanging(value);
                ReportPropertyChanging("VNHCFEDispDisposName");
                _VNHCFEDispDisposName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNHCFEDispDisposName");
                OnVNHCFEDispDisposNameChanged();
            }
        }
        private global::System.String _VNHCFEDispDisposName;
        partial void OnVNHCFEDispDisposNameChanging(global::System.String value);
        partial void OnVNHCFEDispDisposNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCFEDispDisposDesc
        {
            get
            {
                return _HCFEDispDisposDesc;
            }
            set
            {
                OnHCFEDispDisposDescChanging(value);
                ReportPropertyChanging("HCFEDispDisposDesc");
                _HCFEDispDisposDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCFEDispDisposDesc");
                OnHCFEDispDisposDescChanged();
            }
        }
        private global::System.String _HCFEDispDisposDesc;
        partial void OnHCFEDispDisposDescChanging(global::System.String value);
        partial void OnHCFEDispDisposDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Is7
        {
            get
            {
                return _Is7;
            }
            set
            {
                OnIs7Changing(value);
                ReportPropertyChanging("Is7");
                _Is7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Is7");
                OnIs7Changed();
            }
        }
        private global::System.Boolean _Is7;
        partial void OnIs7Changing(global::System.Boolean value);
        partial void OnIs7Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Encounter_refDispositionType", "MedicalEncounter")]
        public EntityCollection<MedicalEncounter> MedicalEncounter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalEncounter>("SureHisModel.FK_Encounter_refDispositionType", "MedicalEncounter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalEncounter>("SureHisModel.FK_Encounter_refDispositionType", "MedicalEncounter", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDistrict")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDistrict : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDistrict object.
        /// </summary>
        /// <param name="districtID">Initial value of the DistrictID property.</param>
        /// <param name="districtName">Initial value of the DistrictName property.</param>
        public static refDistrict CreaterefDistrict(global::System.String districtID, global::System.String districtName)
        {
            refDistrict refDistrict = new refDistrict();
            refDistrict.DistrictID = districtID;
            refDistrict.DistrictName = districtName;
            return refDistrict;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                if (_DistrictID != value)
                {
                    OnDistrictIDChanging(value);
                    ReportPropertyChanging("DistrictID");
                    _DistrictID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("DistrictID");
                    OnDistrictIDChanged();
                }
            }
        }
        private global::System.String _DistrictID;
        partial void OnDistrictIDChanging(global::System.String value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DistrictName
        {
            get
            {
                return _DistrictName;
            }
            set
            {
                OnDistrictNameChanging(value);
                ReportPropertyChanging("DistrictName");
                _DistrictName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DistrictName");
                OnDistrictNameChanged();
            }
        }
        private global::System.String _DistrictName;
        partial void OnDistrictNameChanging(global::System.String value);
        partial void OnDistrictNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistrictLevel
        {
            get
            {
                return _DistrictLevel;
            }
            set
            {
                OnDistrictLevelChanging(value);
                ReportPropertyChanging("DistrictLevel");
                _DistrictLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistrictLevel");
                OnDistrictLevelChanged();
            }
        }
        private global::System.String _DistrictLevel;
        partial void OnDistrictLevelChanging(global::System.String value);
        partial void OnDistrictLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CityProvinceID
        {
            get
            {
                return _CityProvinceID;
            }
            set
            {
                OnCityProvinceIDChanging(value);
                ReportPropertyChanging("CityProvinceID");
                _CityProvinceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CityProvinceID");
                OnCityProvinceIDChanged();
            }
        }
        private global::System.String _CityProvinceID;
        partial void OnCityProvinceIDChanging(global::System.String value);
        partial void OnCityProvinceIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refDistrict", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refDistrict", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refDistrict", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refDistrict_refProvince", "refCityProvince")]
        public refCityProvince refCityProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_refDistrict_refProvince", "refCityProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_refDistrict_refProvince", "refCityProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCityProvince> refCityProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCityProvince>("SureHisModel.FK_refDistrict_refProvince", "refCityProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCityProvince>("SureHisModel.FK_refDistrict_refProvince", "refCityProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refWard_refDistrict", "refWard")]
        public EntityCollection<refWard> refWard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refWard>("SureHisModel.FK_refWard_refDistrict", "refWard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refWard>("SureHisModel.FK_refWard_refDistrict", "refWard", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refDrugKind")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refDrugKind : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refDrugKind object.
        /// </summary>
        /// <param name="drugKindID">Initial value of the DrugKindID property.</param>
        /// <param name="drugKindName">Initial value of the DrugKindName property.</param>
        public static refDrugKind CreaterefDrugKind(global::System.Int64 drugKindID, global::System.String drugKindName)
        {
            refDrugKind refDrugKind = new refDrugKind();
            refDrugKind.DrugKindID = drugKindID;
            refDrugKind.DrugKindName = drugKindName;
            return refDrugKind;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DrugKindID
        {
            get
            {
                return _DrugKindID;
            }
            set
            {
                if (_DrugKindID != value)
                {
                    OnDrugKindIDChanging(value);
                    ReportPropertyChanging("DrugKindID");
                    _DrugKindID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DrugKindID");
                    OnDrugKindIDChanged();
                }
            }
        }
        private global::System.Int64 _DrugKindID;
        partial void OnDrugKindIDChanging(global::System.Int64 value);
        partial void OnDrugKindIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DrugKindName
        {
            get
            {
                return _DrugKindName;
            }
            set
            {
                OnDrugKindNameChanging(value);
                ReportPropertyChanging("DrugKindName");
                _DrugKindName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DrugKindName");
                OnDrugKindNameChanged();
            }
        }
        private global::System.String _DrugKindName;
        partial void OnDrugKindNameChanging(global::System.String value);
        partial void OnDrugKindNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PDrugKindID
        {
            get
            {
                return _PDrugKindID;
            }
            set
            {
                OnPDrugKindIDChanging(value);
                ReportPropertyChanging("PDrugKindID");
                _PDrugKindID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PDrugKindID");
                OnPDrugKindIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PDrugKindID;
        partial void OnPDrugKindIDChanging(Nullable<global::System.Int64> value);
        partial void OnPDrugKindIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_DrugKind", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_DrugKind", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_DrugKind", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refDrugKind_refDrugKind", "refDrugKind1")]
        public EntityCollection<refDrugKind> refDrugKind1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refDrugKind_refDrugKind", "refDrugKind")]
        public refDrugKind refDrugKind2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDrugKind> refDrugKind2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDrugKind>("SureHisModel.FK_refDrugKind_refDrugKind", "refDrugKind", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refEducationalLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refEducationalLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refEducationalLevel object.
        /// </summary>
        /// <param name="persEduLevelID">Initial value of the PersEduLevelID property.</param>
        /// <param name="persEducationalLevelCode">Initial value of the PersEducationalLevelCode property.</param>
        /// <param name="persEducationalLevelName">Initial value of the PersEducationalLevelName property.</param>
        public static refEducationalLevel CreaterefEducationalLevel(global::System.Int64 persEduLevelID, global::System.String persEducationalLevelCode, global::System.String persEducationalLevelName)
        {
            refEducationalLevel refEducationalLevel = new refEducationalLevel();
            refEducationalLevel.PersEduLevelID = persEduLevelID;
            refEducationalLevel.PersEducationalLevelCode = persEducationalLevelCode;
            refEducationalLevel.PersEducationalLevelName = persEducationalLevelName;
            return refEducationalLevel;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersEduLevelID
        {
            get
            {
                return _PersEduLevelID;
            }
            set
            {
                if (_PersEduLevelID != value)
                {
                    OnPersEduLevelIDChanging(value);
                    ReportPropertyChanging("PersEduLevelID");
                    _PersEduLevelID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersEduLevelID");
                    OnPersEduLevelIDChanged();
                }
            }
        }
        private global::System.Int64 _PersEduLevelID;
        partial void OnPersEduLevelIDChanging(global::System.Int64 value);
        partial void OnPersEduLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersEducationalLevelCode
        {
            get
            {
                return _PersEducationalLevelCode;
            }
            set
            {
                OnPersEducationalLevelCodeChanging(value);
                ReportPropertyChanging("PersEducationalLevelCode");
                _PersEducationalLevelCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersEducationalLevelCode");
                OnPersEducationalLevelCodeChanged();
            }
        }
        private global::System.String _PersEducationalLevelCode;
        partial void OnPersEducationalLevelCodeChanging(global::System.String value);
        partial void OnPersEducationalLevelCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersEducationalLevelName
        {
            get
            {
                return _PersEducationalLevelName;
            }
            set
            {
                OnPersEducationalLevelNameChanging(value);
                ReportPropertyChanging("PersEducationalLevelName");
                _PersEducationalLevelName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersEducationalLevelName");
                OnPersEducationalLevelNameChanged();
            }
        }
        private global::System.String _PersEducationalLevelName;
        partial void OnPersEducationalLevelNameChanging(global::System.String value);
        partial void OnPersEducationalLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPersEducationalLevelName
        {
            get
            {
                return _VNPersEducationalLevelName;
            }
            set
            {
                OnVNPersEducationalLevelNameChanging(value);
                ReportPropertyChanging("VNPersEducationalLevelName");
                _VNPersEducationalLevelName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPersEducationalLevelName");
                OnVNPersEducationalLevelNameChanged();
            }
        }
        private global::System.String _VNPersEducationalLevelName;
        partial void OnVNPersEducationalLevelNameChanging(global::System.String value);
        partial void OnVNPersEducationalLevelNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refEducationalLevel", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refEducationalLevel", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refEducationalLevel", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refElthnic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refElthnic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refElthnic object.
        /// </summary>
        /// <param name="ethnicID">Initial value of the EthnicID property.</param>
        /// <param name="ethnicName">Initial value of the EthnicName property.</param>
        /// <param name="ptEthnicGroupID">Initial value of the PtEthnicGroupID property.</param>
        public static refElthnic CreaterefElthnic(global::System.Int64 ethnicID, global::System.String ethnicName, global::System.Int64 ptEthnicGroupID)
        {
            refElthnic refElthnic = new refElthnic();
            refElthnic.EthnicID = ethnicID;
            refElthnic.EthnicName = ethnicName;
            refElthnic.PtEthnicGroupID = ptEthnicGroupID;
            return refElthnic;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EthnicID
        {
            get
            {
                return _EthnicID;
            }
            set
            {
                if (_EthnicID != value)
                {
                    OnEthnicIDChanging(value);
                    ReportPropertyChanging("EthnicID");
                    _EthnicID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EthnicID");
                    OnEthnicIDChanged();
                }
            }
        }
        private global::System.Int64 _EthnicID;
        partial void OnEthnicIDChanging(global::System.Int64 value);
        partial void OnEthnicIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EthnicCode
        {
            get
            {
                return _EthnicCode;
            }
            set
            {
                OnEthnicCodeChanging(value);
                ReportPropertyChanging("EthnicCode");
                _EthnicCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EthnicCode");
                OnEthnicCodeChanged();
            }
        }
        private global::System.String _EthnicCode;
        partial void OnEthnicCodeChanging(global::System.String value);
        partial void OnEthnicCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EthnicName
        {
            get
            {
                return _EthnicName;
            }
            set
            {
                OnEthnicNameChanging(value);
                ReportPropertyChanging("EthnicName");
                _EthnicName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EthnicName");
                OnEthnicNameChanged();
            }
        }
        private global::System.String _EthnicName;
        partial void OnEthnicNameChanging(global::System.String value);
        partial void OnEthnicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNEthnicName
        {
            get
            {
                return _VNEthnicName;
            }
            set
            {
                OnVNEthnicNameChanging(value);
                ReportPropertyChanging("VNEthnicName");
                _VNEthnicName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNEthnicName");
                OnVNEthnicNameChanged();
            }
        }
        private global::System.String _VNEthnicName;
        partial void OnVNEthnicNameChanging(global::System.String value);
        partial void OnVNEthnicNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtEthnicGroupID
        {
            get
            {
                return _PtEthnicGroupID;
            }
            set
            {
                OnPtEthnicGroupIDChanging(value);
                ReportPropertyChanging("PtEthnicGroupID");
                _PtEthnicGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtEthnicGroupID");
                OnPtEthnicGroupIDChanged();
            }
        }
        private global::System.Int64 _PtEthnicGroupID;
        partial void OnPtEthnicGroupIDChanging(global::System.Int64 value);
        partial void OnPtEthnicGroupIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refElthnic", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refElthnic", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refElthnic", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refElthnic_refEthnicGroup", "refEthnicGroup")]
        public refEthnicGroup refEthnicGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEthnicGroup>("SureHisModel.FK_refElthnic_refEthnicGroup", "refEthnicGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEthnicGroup>("SureHisModel.FK_refElthnic_refEthnicGroup", "refEthnicGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refEthnicGroup> refEthnicGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refEthnicGroup>("SureHisModel.FK_refElthnic_refEthnicGroup", "refEthnicGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refEthnicGroup>("SureHisModel.FK_refElthnic_refEthnicGroup", "refEthnicGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refEthnicGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refEthnicGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refEthnicGroup object.
        /// </summary>
        /// <param name="ptEthnicGroupID">Initial value of the PtEthnicGroupID property.</param>
        /// <param name="ptEthnicGroupCode">Initial value of the PtEthnicGroupCode property.</param>
        /// <param name="ptEthnicGroupName">Initial value of the PtEthnicGroupName property.</param>
        public static refEthnicGroup CreaterefEthnicGroup(global::System.Int64 ptEthnicGroupID, global::System.String ptEthnicGroupCode, global::System.String ptEthnicGroupName)
        {
            refEthnicGroup refEthnicGroup = new refEthnicGroup();
            refEthnicGroup.PtEthnicGroupID = ptEthnicGroupID;
            refEthnicGroup.PtEthnicGroupCode = ptEthnicGroupCode;
            refEthnicGroup.PtEthnicGroupName = ptEthnicGroupName;
            return refEthnicGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtEthnicGroupID
        {
            get
            {
                return _PtEthnicGroupID;
            }
            set
            {
                if (_PtEthnicGroupID != value)
                {
                    OnPtEthnicGroupIDChanging(value);
                    ReportPropertyChanging("PtEthnicGroupID");
                    _PtEthnicGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtEthnicGroupID");
                    OnPtEthnicGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _PtEthnicGroupID;
        partial void OnPtEthnicGroupIDChanging(global::System.Int64 value);
        partial void OnPtEthnicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtEthnicGroupCode
        {
            get
            {
                return _PtEthnicGroupCode;
            }
            set
            {
                OnPtEthnicGroupCodeChanging(value);
                ReportPropertyChanging("PtEthnicGroupCode");
                _PtEthnicGroupCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtEthnicGroupCode");
                OnPtEthnicGroupCodeChanged();
            }
        }
        private global::System.String _PtEthnicGroupCode;
        partial void OnPtEthnicGroupCodeChanging(global::System.String value);
        partial void OnPtEthnicGroupCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtEthnicGroupName
        {
            get
            {
                return _PtEthnicGroupName;
            }
            set
            {
                OnPtEthnicGroupNameChanging(value);
                ReportPropertyChanging("PtEthnicGroupName");
                _PtEthnicGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtEthnicGroupName");
                OnPtEthnicGroupNameChanged();
            }
        }
        private global::System.String _PtEthnicGroupName;
        partial void OnPtEthnicGroupNameChanging(global::System.String value);
        partial void OnPtEthnicGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPtEthnicGroupName
        {
            get
            {
                return _VNPtEthnicGroupName;
            }
            set
            {
                OnVNPtEthnicGroupNameChanging(value);
                ReportPropertyChanging("VNPtEthnicGroupName");
                _VNPtEthnicGroupName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPtEthnicGroupName");
                OnVNPtEthnicGroupNameChanged();
            }
        }
        private global::System.String _VNPtEthnicGroupName;
        partial void OnVNPtEthnicGroupNameChanging(global::System.String value);
        partial void OnVNPtEthnicGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PPtEthnicGroupID
        {
            get
            {
                return _PPtEthnicGroupID;
            }
            set
            {
                OnPPtEthnicGroupIDChanging(value);
                ReportPropertyChanging("PPtEthnicGroupID");
                _PPtEthnicGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PPtEthnicGroupID");
                OnPPtEthnicGroupIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PPtEthnicGroupID;
        partial void OnPPtEthnicGroupIDChanging(Nullable<global::System.Int64> value);
        partial void OnPPtEthnicGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private Nullable<global::System.Int16> _Level;
        partial void OnLevelChanging(Nullable<global::System.Int16> value);
        partial void OnLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refElthnic_refEthnicGroup", "refElthnic")]
        public EntityCollection<refElthnic> refElthnic
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refElthnic>("SureHisModel.FK_refElthnic_refEthnicGroup", "refElthnic");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refElthnic>("SureHisModel.FK_refElthnic_refEthnicGroup", "refElthnic", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refExamAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refExamAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refExamAction object.
        /// </summary>
        /// <param name="examActID">Initial value of the ExamActID property.</param>
        /// <param name="examActName">Initial value of the ExamActName property.</param>
        public static refExamAction CreaterefExamAction(global::System.Int64 examActID, global::System.String examActName)
        {
            refExamAction refExamAction = new refExamAction();
            refExamAction.ExamActID = examActID;
            refExamAction.ExamActName = examActName;
            return refExamAction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExamActID
        {
            get
            {
                return _ExamActID;
            }
            set
            {
                if (_ExamActID != value)
                {
                    OnExamActIDChanging(value);
                    ReportPropertyChanging("ExamActID");
                    _ExamActID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ExamActID");
                    OnExamActIDChanged();
                }
            }
        }
        private global::System.Int64 _ExamActID;
        partial void OnExamActIDChanging(global::System.Int64 value);
        partial void OnExamActIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExamActCode
        {
            get
            {
                return _ExamActCode;
            }
            set
            {
                OnExamActCodeChanging(value);
                ReportPropertyChanging("ExamActCode");
                _ExamActCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExamActCode");
                OnExamActCodeChanged();
            }
        }
        private global::System.String _ExamActCode;
        partial void OnExamActCodeChanging(global::System.String value);
        partial void OnExamActCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExamActName
        {
            get
            {
                return _ExamActName;
            }
            set
            {
                OnExamActNameChanging(value);
                ReportPropertyChanging("ExamActName");
                _ExamActName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ExamActName");
                OnExamActNameChanged();
            }
        }
        private global::System.String _ExamActName;
        partial void OnExamActNameChanging(global::System.String value);
        partial void OnExamActNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNExamActName
        {
            get
            {
                return _VNExamActName;
            }
            set
            {
                OnVNExamActNameChanging(value);
                ReportPropertyChanging("VNExamActName");
                _VNExamActName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNExamActName");
                OnVNExamActNameChanged();
            }
        }
        private global::System.String _VNExamActName;
        partial void OnVNExamActNameChanging(global::System.String value);
        partial void OnVNExamActNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsExclusionZone
        {
            get
            {
                return _IsExclusionZone;
            }
            set
            {
                OnIsExclusionZoneChanging(value);
                ReportPropertyChanging("IsExclusionZone");
                _IsExclusionZone = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExclusionZone");
                OnIsExclusionZoneChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsExclusionZone;
        partial void OnIsExclusionZoneChanging(Nullable<global::System.Boolean> value);
        partial void OnIsExclusionZoneChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BodyRegion_refExamAction", "BodyRegion")]
        public EntityCollection<BodyRegion> BodyRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_refExamAction", "BodyRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BodyRegion>("SureHisModel.FK_BodyRegion_refExamAction", "BodyRegion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refExamObservation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refExamObservation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refExamObservation object.
        /// </summary>
        /// <param name="hExmFindingID">Initial value of the HExmFindingID property.</param>
        /// <param name="hExmFindingCode">Initial value of the HExmFindingCode property.</param>
        /// <param name="hExmFindingName">Initial value of the HExmFindingName property.</param>
        /// <param name="examActID">Initial value of the ExamActID property.</param>
        public static refExamObservation CreaterefExamObservation(global::System.Int64 hExmFindingID, global::System.String hExmFindingCode, global::System.String hExmFindingName, global::System.Int64 examActID)
        {
            refExamObservation refExamObservation = new refExamObservation();
            refExamObservation.HExmFindingID = hExmFindingID;
            refExamObservation.HExmFindingCode = hExmFindingCode;
            refExamObservation.HExmFindingName = hExmFindingName;
            refExamObservation.ExamActID = examActID;
            return refExamObservation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HExmFindingID
        {
            get
            {
                return _HExmFindingID;
            }
            set
            {
                if (_HExmFindingID != value)
                {
                    OnHExmFindingIDChanging(value);
                    ReportPropertyChanging("HExmFindingID");
                    _HExmFindingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HExmFindingID");
                    OnHExmFindingIDChanged();
                }
            }
        }
        private global::System.Int64 _HExmFindingID;
        partial void OnHExmFindingIDChanging(global::System.Int64 value);
        partial void OnHExmFindingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HExmFindingCode
        {
            get
            {
                return _HExmFindingCode;
            }
            set
            {
                OnHExmFindingCodeChanging(value);
                ReportPropertyChanging("HExmFindingCode");
                _HExmFindingCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HExmFindingCode");
                OnHExmFindingCodeChanged();
            }
        }
        private global::System.String _HExmFindingCode;
        partial void OnHExmFindingCodeChanging(global::System.String value);
        partial void OnHExmFindingCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HExmFindingName
        {
            get
            {
                return _HExmFindingName;
            }
            set
            {
                OnHExmFindingNameChanging(value);
                ReportPropertyChanging("HExmFindingName");
                _HExmFindingName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HExmFindingName");
                OnHExmFindingNameChanged();
            }
        }
        private global::System.String _HExmFindingName;
        partial void OnHExmFindingNameChanging(global::System.String value);
        partial void OnHExmFindingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNHExmFindingName
        {
            get
            {
                return _VNHExmFindingName;
            }
            set
            {
                OnVNHExmFindingNameChanging(value);
                ReportPropertyChanging("VNHExmFindingName");
                _VNHExmFindingName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNHExmFindingName");
                OnVNHExmFindingNameChanged();
            }
        }
        private global::System.String _VNHExmFindingName;
        partial void OnVNHExmFindingNameChanging(global::System.String value);
        partial void OnVNHExmFindingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ExamActID
        {
            get
            {
                return _ExamActID;
            }
            set
            {
                OnExamActIDChanging(value);
                ReportPropertyChanging("ExamActID");
                _ExamActID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExamActID");
                OnExamActIDChanged();
            }
        }
        private global::System.Int64 _ExamActID;
        partial void OnExamActIDChanging(global::System.Int64 value);
        partial void OnExamActIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SymptomID
        {
            get
            {
                return _SymptomID;
            }
            set
            {
                OnSymptomIDChanging(value);
                ReportPropertyChanging("SymptomID");
                _SymptomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SymptomID");
                OnSymptomIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SymptomID;
        partial void OnSymptomIDChanging(Nullable<global::System.Int64> value);
        partial void OnSymptomIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PhysicalExamination_RefExamObservation", "PhysicalExamination")]
        public EntityCollection<PhysicalExamination> PhysicalExamination
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PhysicalExamination>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "PhysicalExamination");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PhysicalExamination>("SureHisModel.FK_PhysicalExamination_RefExamObservation", "PhysicalExamination", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refExamObservation_refProblem", "refProblem")]
        public refProblem refProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_refExamObservation_refProblem", "refProblem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_refExamObservation_refProblem", "refProblem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refProblem> refProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_refExamObservation_refProblem", "refProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refProblem>("SureHisModel.FK_refExamObservation_refProblem", "refProblem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refFAMRelationship")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refFAMRelationship : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refFAMRelationship object.
        /// </summary>
        /// <param name="fAMMbrRelUD">Initial value of the FAMMbrRelUD property.</param>
        /// <param name="fAMMbrRelationshipCode">Initial value of the FAMMbrRelationshipCode property.</param>
        /// <param name="fAMMbrRelationshipName">Initial value of the FAMMbrRelationshipName property.</param>
        public static refFAMRelationship CreaterefFAMRelationship(global::System.Int64 fAMMbrRelUD, global::System.String fAMMbrRelationshipCode, global::System.String fAMMbrRelationshipName)
        {
            refFAMRelationship refFAMRelationship = new refFAMRelationship();
            refFAMRelationship.FAMMbrRelUD = fAMMbrRelUD;
            refFAMRelationship.FAMMbrRelationshipCode = fAMMbrRelationshipCode;
            refFAMRelationship.FAMMbrRelationshipName = fAMMbrRelationshipName;
            return refFAMRelationship;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 FAMMbrRelUD
        {
            get
            {
                return _FAMMbrRelUD;
            }
            set
            {
                if (_FAMMbrRelUD != value)
                {
                    OnFAMMbrRelUDChanging(value);
                    ReportPropertyChanging("FAMMbrRelUD");
                    _FAMMbrRelUD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FAMMbrRelUD");
                    OnFAMMbrRelUDChanged();
                }
            }
        }
        private global::System.Int64 _FAMMbrRelUD;
        partial void OnFAMMbrRelUDChanging(global::System.Int64 value);
        partial void OnFAMMbrRelUDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrRelationshipCode
        {
            get
            {
                return _FAMMbrRelationshipCode;
            }
            set
            {
                OnFAMMbrRelationshipCodeChanging(value);
                ReportPropertyChanging("FAMMbrRelationshipCode");
                _FAMMbrRelationshipCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAMMbrRelationshipCode");
                OnFAMMbrRelationshipCodeChanged();
            }
        }
        private global::System.String _FAMMbrRelationshipCode;
        partial void OnFAMMbrRelationshipCodeChanging(global::System.String value);
        partial void OnFAMMbrRelationshipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FAMMbrRelationshipName
        {
            get
            {
                return _FAMMbrRelationshipName;
            }
            set
            {
                OnFAMMbrRelationshipNameChanging(value);
                ReportPropertyChanging("FAMMbrRelationshipName");
                _FAMMbrRelationshipName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FAMMbrRelationshipName");
                OnFAMMbrRelationshipNameChanged();
            }
        }
        private global::System.String _FAMMbrRelationshipName;
        partial void OnFAMMbrRelationshipNameChanging(global::System.String value);
        partial void OnFAMMbrRelationshipNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNFAMMbrRelationshipName
        {
            get
            {
                return _VNFAMMbrRelationshipName;
            }
            set
            {
                OnVNFAMMbrRelationshipNameChanging(value);
                ReportPropertyChanging("VNFAMMbrRelationshipName");
                _VNFAMMbrRelationshipName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNFAMMbrRelationshipName");
                OnVNFAMMbrRelationshipNameChanged();
            }
        }
        private global::System.String _VNFAMMbrRelationshipName;
        partial void OnVNFAMMbrRelationshipNameChanging(global::System.String value);
        partial void OnVNFAMMbrRelationshipNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_FamilyHistory_refFAMRelationship", "FamilyHistory")]
        public EntityCollection<FamilyHistory> FamilyHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FamilyHistory>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "FamilyHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FamilyHistory>("SureHisModel.FK_FamilyHistory_refFAMRelationship", "FamilyHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_NextOfKins_refFAMRelationship", "NextOfKins")]
        public EntityCollection<NextOfKins> NextOfKins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NextOfKins>("SureHisModel.FK_NextOfKins_refFAMRelationship", "NextOfKins");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NextOfKins>("SureHisModel.FK_NextOfKins_refFAMRelationship", "NextOfKins", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_refFAMRelationship", "PastPersonHistory")]
        public EntityCollection<PastPersonHistory> PastPersonHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "PastPersonHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_refFAMRelationship", "PastPersonHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refHL7")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refHL7 : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refHL7 object.
        /// </summary>
        /// <param name="h7ID">Initial value of the H7ID property.</param>
        /// <param name="objName">Initial value of the ObjName property.</param>
        /// <param name="objCode">Initial value of the ObjCode property.</param>
        /// <param name="objValue">Initial value of the ObjValue property.</param>
        public static refHL7 CreaterefHL7(global::System.Int64 h7ID, global::System.String objName, global::System.String objCode, global::System.String objValue)
        {
            refHL7 refHL7 = new refHL7();
            refHL7.H7ID = h7ID;
            refHL7.ObjName = objName;
            refHL7.ObjCode = objCode;
            refHL7.ObjValue = objValue;
            return refHL7;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 H7ID
        {
            get
            {
                return _H7ID;
            }
            set
            {
                if (_H7ID != value)
                {
                    OnH7IDChanging(value);
                    ReportPropertyChanging("H7ID");
                    _H7ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("H7ID");
                    OnH7IDChanged();
                }
            }
        }
        private global::System.Int64 _H7ID;
        partial void OnH7IDChanging(global::System.Int64 value);
        partial void OnH7IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjName
        {
            get
            {
                return _ObjName;
            }
            set
            {
                OnObjNameChanging(value);
                ReportPropertyChanging("ObjName");
                _ObjName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjName");
                OnObjNameChanged();
            }
        }
        private global::System.String _ObjName;
        partial void OnObjNameChanging(global::System.String value);
        partial void OnObjNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjCode
        {
            get
            {
                return _ObjCode;
            }
            set
            {
                OnObjCodeChanging(value);
                ReportPropertyChanging("ObjCode");
                _ObjCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjCode");
                OnObjCodeChanged();
            }
        }
        private global::System.String _ObjCode;
        partial void OnObjCodeChanging(global::System.String value);
        partial void OnObjCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjValue
        {
            get
            {
                return _ObjValue;
            }
            set
            {
                OnObjValueChanging(value);
                ReportPropertyChanging("ObjValue");
                _ObjValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjValue");
                OnObjValueChanged();
            }
        }
        private global::System.String _ObjValue;
        partial void OnObjValueChanging(global::System.String value);
        partial void OnObjValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjValueVN
        {
            get
            {
                return _ObjValueVN;
            }
            set
            {
                OnObjValueVNChanging(value);
                ReportPropertyChanging("ObjValueVN");
                _ObjValueVN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjValueVN");
                OnObjValueVNChanged();
            }
        }
        private global::System.String _ObjValueVN;
        partial void OnObjValueVNChanging(global::System.String value);
        partial void OnObjValueVNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjNotes
        {
            get
            {
                return _ObjNotes;
            }
            set
            {
                OnObjNotesChanging(value);
                ReportPropertyChanging("ObjNotes");
                _ObjNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjNotes");
                OnObjNotesChanged();
            }
        }
        private global::System.String _ObjNotes;
        partial void OnObjNotesChanging(global::System.String value);
        partial void OnObjNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Ordinal
        {
            get
            {
                return _Ordinal;
            }
            set
            {
                OnOrdinalChanging(value);
                ReportPropertyChanging("Ordinal");
                _Ordinal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordinal");
                OnOrdinalChanged();
            }
        }
        private Nullable<global::System.Byte> _Ordinal;
        partial void OnOrdinalChanging(Nullable<global::System.Byte> value);
        partial void OnOrdinalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                OnIsActivatedChanging(value);
                ReportPropertyChanging("IsActivated");
                _IsActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActivated");
                OnIsActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActivated;
        partial void OnIsActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActivatedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refHumanLanguage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refHumanLanguage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refHumanLanguage object.
        /// </summary>
        /// <param name="hLID">Initial value of the HLID property.</param>
        /// <param name="hLCode">Initial value of the HLCode property.</param>
        /// <param name="hLName">Initial value of the HLName property.</param>
        public static refHumanLanguage CreaterefHumanLanguage(global::System.Int64 hLID, global::System.String hLCode, global::System.String hLName)
        {
            refHumanLanguage refHumanLanguage = new refHumanLanguage();
            refHumanLanguage.HLID = hLID;
            refHumanLanguage.HLCode = hLCode;
            refHumanLanguage.HLName = hLName;
            return refHumanLanguage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HLID
        {
            get
            {
                return _HLID;
            }
            set
            {
                if (_HLID != value)
                {
                    OnHLIDChanging(value);
                    ReportPropertyChanging("HLID");
                    _HLID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HLID");
                    OnHLIDChanged();
                }
            }
        }
        private global::System.Int64 _HLID;
        partial void OnHLIDChanging(global::System.Int64 value);
        partial void OnHLIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HLCode
        {
            get
            {
                return _HLCode;
            }
            set
            {
                OnHLCodeChanging(value);
                ReportPropertyChanging("HLCode");
                _HLCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HLCode");
                OnHLCodeChanged();
            }
        }
        private global::System.String _HLCode;
        partial void OnHLCodeChanging(global::System.String value);
        partial void OnHLCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HLName
        {
            get
            {
                return _HLName;
            }
            set
            {
                OnHLNameChanging(value);
                ReportPropertyChanging("HLName");
                _HLName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HLName");
                OnHLNameChanged();
            }
        }
        private global::System.String _HLName;
        partial void OnHLNameChanging(global::System.String value);
        partial void OnHLNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_LanguageLevel_refHumanLanguage", "LanguageLevel")]
        public EntityCollection<LanguageLevel> LanguageLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LanguageLevel>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "LanguageLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LanguageLevel>("SureHisModel.FK_LanguageLevel_refHumanLanguage", "LanguageLevel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refImmunization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refImmunization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refImmunization object.
        /// </summary>
        /// <param name="immID">Initial value of the ImmID property.</param>
        /// <param name="immText">Initial value of the ImmText property.</param>
        /// <param name="isOther">Initial value of the IsOther property.</param>
        public static refImmunization CreaterefImmunization(global::System.Int64 immID, global::System.String immText, global::System.Boolean isOther)
        {
            refImmunization refImmunization = new refImmunization();
            refImmunization.ImmID = immID;
            refImmunization.ImmText = immText;
            refImmunization.IsOther = isOther;
            return refImmunization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ImmID
        {
            get
            {
                return _ImmID;
            }
            set
            {
                if (_ImmID != value)
                {
                    OnImmIDChanging(value);
                    ReportPropertyChanging("ImmID");
                    _ImmID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ImmID");
                    OnImmIDChanged();
                }
            }
        }
        private global::System.Int64 _ImmID;
        partial void OnImmIDChanging(global::System.Int64 value);
        partial void OnImmIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ImmText
        {
            get
            {
                return _ImmText;
            }
            set
            {
                OnImmTextChanging(value);
                ReportPropertyChanging("ImmText");
                _ImmText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ImmText");
                OnImmTextChanged();
            }
        }
        private global::System.String _ImmText;
        partial void OnImmTextChanging(global::System.String value);
        partial void OnImmTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOther
        {
            get
            {
                return _IsOther;
            }
            set
            {
                OnIsOtherChanging(value);
                ReportPropertyChanging("IsOther");
                _IsOther = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOther");
                OnIsOtherChanged();
            }
        }
        private global::System.Boolean _IsOther;
        partial void OnIsOtherChanging(global::System.Boolean value);
        partial void OnIsOtherChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ImmunizationHistory_refImmunization", "ImmunizationHistory")]
        public EntityCollection<ImmunizationHistory> ImmunizationHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImmunizationHistory>("SureHisModel.FK_ImmunizationHistory_refImmunization", "ImmunizationHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImmunizationHistory>("SureHisModel.FK_ImmunizationHistory_refImmunization", "ImmunizationHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refInstUniversity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refInstUniversity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refInstUniversity object.
        /// </summary>
        /// <param name="institudeID">Initial value of the InstitudeID property.</param>
        /// <param name="insUniversityCode">Initial value of the InsUniversityCode property.</param>
        /// <param name="nameOfInstitudeUniversity">Initial value of the NameOfInstitudeUniversity property.</param>
        public static refInstUniversity CreaterefInstUniversity(global::System.Int64 institudeID, global::System.String insUniversityCode, global::System.String nameOfInstitudeUniversity)
        {
            refInstUniversity refInstUniversity = new refInstUniversity();
            refInstUniversity.InstitudeID = institudeID;
            refInstUniversity.InsUniversityCode = insUniversityCode;
            refInstUniversity.NameOfInstitudeUniversity = nameOfInstitudeUniversity;
            return refInstUniversity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 InstitudeID
        {
            get
            {
                return _InstitudeID;
            }
            set
            {
                if (_InstitudeID != value)
                {
                    OnInstitudeIDChanging(value);
                    ReportPropertyChanging("InstitudeID");
                    _InstitudeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InstitudeID");
                    OnInstitudeIDChanged();
                }
            }
        }
        private global::System.Int64 _InstitudeID;
        partial void OnInstitudeIDChanging(global::System.Int64 value);
        partial void OnInstitudeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InsUniversityCode
        {
            get
            {
                return _InsUniversityCode;
            }
            set
            {
                OnInsUniversityCodeChanging(value);
                ReportPropertyChanging("InsUniversityCode");
                _InsUniversityCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsUniversityCode");
                OnInsUniversityCodeChanged();
            }
        }
        private global::System.String _InsUniversityCode;
        partial void OnInsUniversityCodeChanging(global::System.String value);
        partial void OnInsUniversityCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameOfInstitudeUniversity
        {
            get
            {
                return _NameOfInstitudeUniversity;
            }
            set
            {
                OnNameOfInstitudeUniversityChanging(value);
                ReportPropertyChanging("NameOfInstitudeUniversity");
                _NameOfInstitudeUniversity = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameOfInstitudeUniversity");
                OnNameOfInstitudeUniversityChanged();
            }
        }
        private global::System.String _NameOfInstitudeUniversity;
        partial void OnNameOfInstitudeUniversityChanging(global::System.String value);
        partial void OnNameOfInstitudeUniversityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Abbrev
        {
            get
            {
                return _Abbrev;
            }
            set
            {
                OnAbbrevChanging(value);
                ReportPropertyChanging("Abbrev");
                _Abbrev = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Abbrev");
                OnAbbrevChanged();
            }
        }
        private global::System.String _Abbrev;
        partial void OnAbbrevChanging(global::System.String value);
        partial void OnAbbrevChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private global::System.String _CountryID;
        partial void OnCountryIDChanging(global::System.String value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_UniversityLevel
        {
            get
            {
                return _V_UniversityLevel;
            }
            set
            {
                OnV_UniversityLevelChanging(value);
                ReportPropertyChanging("V_UniversityLevel");
                _V_UniversityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_UniversityLevel");
                OnV_UniversityLevelChanged();
            }
        }
        private Nullable<global::System.Int64> _V_UniversityLevel;
        partial void OnV_UniversityLevelChanging(Nullable<global::System.Int64> value);
        partial void OnV_UniversityLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EduLevel_refInstUniversity", "EduLevel")]
        public EntityCollection<EduLevel> EduLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_refInstUniversity", "EduLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EduLevel>("SureHisModel.FK_EduLevel_refInstUniversity", "EduLevel", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refInsurKind")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refInsurKind : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refInsurKind object.
        /// </summary>
        /// <param name="insurKindID">Initial value of the InsurKindID property.</param>
        /// <param name="insurKindName">Initial value of the InsurKindName property.</param>
        public static refInsurKind CreaterefInsurKind(global::System.String insurKindID, global::System.String insurKindName)
        {
            refInsurKind refInsurKind = new refInsurKind();
            refInsurKind.InsurKindID = insurKindID;
            refInsurKind.InsurKindName = insurKindName;
            return refInsurKind;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InsurKindID
        {
            get
            {
                return _InsurKindID;
            }
            set
            {
                if (_InsurKindID != value)
                {
                    OnInsurKindIDChanging(value);
                    ReportPropertyChanging("InsurKindID");
                    _InsurKindID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("InsurKindID");
                    OnInsurKindIDChanged();
                }
            }
        }
        private global::System.String _InsurKindID;
        partial void OnInsurKindIDChanging(global::System.String value);
        partial void OnInsurKindIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InsurKindName
        {
            get
            {
                return _InsurKindName;
            }
            set
            {
                OnInsurKindNameChanging(value);
                ReportPropertyChanging("InsurKindName");
                _InsurKindName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InsurKindName");
                OnInsurKindNameChanged();
            }
        }
        private global::System.String _InsurKindName;
        partial void OnInsurKindNameChanging(global::System.String value);
        partial void OnInsurKindNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_InsurKind", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_InsurKind", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_InsurKind", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refInternalReceiptType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refInternalReceiptType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refInternalReceiptType object.
        /// </summary>
        /// <param name="intRcptTypeID">Initial value of the IntRcptTypeID property.</param>
        /// <param name="intRcptTypeName">Initial value of the IntRcptTypeName property.</param>
        public static refInternalReceiptType CreaterefInternalReceiptType(global::System.Byte intRcptTypeID, global::System.String intRcptTypeName)
        {
            refInternalReceiptType refInternalReceiptType = new refInternalReceiptType();
            refInternalReceiptType.IntRcptTypeID = intRcptTypeID;
            refInternalReceiptType.IntRcptTypeName = intRcptTypeName;
            return refInternalReceiptType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte IntRcptTypeID
        {
            get
            {
                return _IntRcptTypeID;
            }
            set
            {
                if (_IntRcptTypeID != value)
                {
                    OnIntRcptTypeIDChanging(value);
                    ReportPropertyChanging("IntRcptTypeID");
                    _IntRcptTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IntRcptTypeID");
                    OnIntRcptTypeIDChanged();
                }
            }
        }
        private global::System.Byte _IntRcptTypeID;
        partial void OnIntRcptTypeIDChanging(global::System.Byte value);
        partial void OnIntRcptTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IntRcptTypeName
        {
            get
            {
                return _IntRcptTypeName;
            }
            set
            {
                OnIntRcptTypeNameChanging(value);
                ReportPropertyChanging("IntRcptTypeName");
                _IntRcptTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IntRcptTypeName");
                OnIntRcptTypeNameChanged();
            }
        }
        private global::System.String _IntRcptTypeName;
        partial void OnIntRcptTypeNameChanging(global::System.String value);
        partial void OnIntRcptTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> DebitOrCredit
        {
            get
            {
                return _DebitOrCredit;
            }
            set
            {
                OnDebitOrCreditChanging(value);
                ReportPropertyChanging("DebitOrCredit");
                _DebitOrCredit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DebitOrCredit");
                OnDebitOrCreditChanged();
            }
        }
        private Nullable<global::System.Boolean> _DebitOrCredit;
        partial void OnDebitOrCreditChanging(Nullable<global::System.Boolean> value);
        partial void OnDebitOrCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvTmpURL
        {
            get
            {
                return _InvTmpURL;
            }
            set
            {
                OnInvTmpURLChanging(value);
                ReportPropertyChanging("InvTmpURL");
                _InvTmpURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvTmpURL");
                OnInvTmpURLChanged();
            }
        }
        private global::System.String _InvTmpURL;
        partial void OnInvTmpURLChanging(global::System.String value);
        partial void OnInvTmpURLChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refItemType object.
        /// </summary>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        /// <param name="itemTypeName">Initial value of the ItemTypeName property.</param>
        public static refItemType CreaterefItemType(global::System.Int64 itemTypeID, global::System.String itemTypeName)
        {
            refItemType refItemType = new refItemType();
            refItemType.ItemTypeID = itemTypeID;
            refItemType.ItemTypeName = itemTypeName;
            return refItemType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                if (_ItemTypeID != value)
                {
                    OnItemTypeIDChanging(value);
                    ReportPropertyChanging("ItemTypeID");
                    _ItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeID");
                    OnItemTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Int64 value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeName
        {
            get
            {
                return _ItemTypeName;
            }
            set
            {
                OnItemTypeNameChanging(value);
                ReportPropertyChanging("ItemTypeName");
                _ItemTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ItemTypeName");
                OnItemTypeNameChanged();
            }
        }
        private global::System.String _ItemTypeName;
        partial void OnItemTypeNameChanging(global::System.String value);
        partial void OnItemTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ItemTypeDesc
        {
            get
            {
                return _ItemTypeDesc;
            }
            set
            {
                OnItemTypeDescChanging(value);
                ReportPropertyChanging("ItemTypeDesc");
                _ItemTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ItemTypeDesc");
                OnItemTypeDescChanged();
            }
        }
        private global::System.String _ItemTypeDesc;
        partial void OnItemTypeDescChanging(global::System.String value);
        partial void OnItemTypeDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DocItem_refItemType", "DocItem")]
        public EntityCollection<DocItem> DocItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DocItem>("SureHisModel.FK_DocItem_refItemType", "DocItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DocItem>("SureHisModel.FK_DocItem_refItemType", "DocItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refJobBand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refJobBand : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refJobBand object.
        /// </summary>
        /// <param name="jBID">Initial value of the JBID property.</param>
        /// <param name="jBName">Initial value of the JBName property.</param>
        public static refJobBand CreaterefJobBand(global::System.Int64 jBID, global::System.String jBName)
        {
            refJobBand refJobBand = new refJobBand();
            refJobBand.JBID = jBID;
            refJobBand.JBName = jBName;
            return refJobBand;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JBID
        {
            get
            {
                return _JBID;
            }
            set
            {
                if (_JBID != value)
                {
                    OnJBIDChanging(value);
                    ReportPropertyChanging("JBID");
                    _JBID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JBID");
                    OnJBIDChanged();
                }
            }
        }
        private global::System.Int64 _JBID;
        partial void OnJBIDChanging(global::System.Int64 value);
        partial void OnJBIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JBName
        {
            get
            {
                return _JBName;
            }
            set
            {
                OnJBNameChanging(value);
                ReportPropertyChanging("JBName");
                _JBName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JBName");
                OnJBNameChanged();
            }
        }
        private global::System.String _JBName;
        partial void OnJBNameChanging(global::System.String value);
        partial void OnJBNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JBDesc
        {
            get
            {
                return _JBDesc;
            }
            set
            {
                OnJBDescChanging(value);
                ReportPropertyChanging("JBDesc");
                _JBDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JBDesc");
                OnJBDescChanged();
            }
        }
        private global::System.String _JBDesc;
        partial void OnJBDescChanging(global::System.String value);
        partial void OnJBDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refJobTitle_refJobBand", "refJobTitle")]
        public EntityCollection<refJobTitle> refJobTitle
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refJobTitle>("SureHisModel.FK_refJobTitle_refJobBand", "refJobTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refJobTitle>("SureHisModel.FK_refJobTitle_refJobBand", "refJobTitle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refJobTitle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refJobTitle : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refJobTitle object.
        /// </summary>
        /// <param name="jTID">Initial value of the JTID property.</param>
        /// <param name="jTCode">Initial value of the JTCode property.</param>
        /// <param name="jTName">Initial value of the JTName property.</param>
        public static refJobTitle CreaterefJobTitle(global::System.Int64 jTID, global::System.String jTCode, global::System.String jTName)
        {
            refJobTitle refJobTitle = new refJobTitle();
            refJobTitle.JTID = jTID;
            refJobTitle.JTCode = jTCode;
            refJobTitle.JTName = jTName;
            return refJobTitle;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PJTID
        {
            get
            {
                return _PJTID;
            }
            set
            {
                OnPJTIDChanging(value);
                ReportPropertyChanging("PJTID");
                _PJTID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PJTID");
                OnPJTIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PJTID;
        partial void OnPJTIDChanging(Nullable<global::System.Int64> value);
        partial void OnPJTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 JTID
        {
            get
            {
                return _JTID;
            }
            set
            {
                if (_JTID != value)
                {
                    OnJTIDChanging(value);
                    ReportPropertyChanging("JTID");
                    _JTID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JTID");
                    OnJTIDChanged();
                }
            }
        }
        private global::System.Int64 _JTID;
        partial void OnJTIDChanging(global::System.Int64 value);
        partial void OnJTIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JTCode
        {
            get
            {
                return _JTCode;
            }
            set
            {
                OnJTCodeChanging(value);
                ReportPropertyChanging("JTCode");
                _JTCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JTCode");
                OnJTCodeChanged();
            }
        }
        private global::System.String _JTCode;
        partial void OnJTCodeChanging(global::System.String value);
        partial void OnJTCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JTName
        {
            get
            {
                return _JTName;
            }
            set
            {
                OnJTNameChanging(value);
                ReportPropertyChanging("JTName");
                _JTName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JTName");
                OnJTNameChanged();
            }
        }
        private global::System.String _JTName;
        partial void OnJTNameChanging(global::System.String value);
        partial void OnJTNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JTDef
        {
            get
            {
                return _JTDef;
            }
            set
            {
                OnJTDefChanging(value);
                ReportPropertyChanging("JTDef");
                _JTDef = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JTDef");
                OnJTDefChanged();
            }
        }
        private global::System.String _JTDef;
        partial void OnJTDefChanging(global::System.String value);
        partial void OnJTDefChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JTResp
        {
            get
            {
                return _JTResp;
            }
            set
            {
                OnJTRespChanging(value);
                ReportPropertyChanging("JTResp");
                _JTResp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JTResp");
                OnJTRespChanged();
            }
        }
        private global::System.String _JTResp;
        partial void OnJTRespChanging(global::System.String value);
        partial void OnJTRespChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JTScopeDesc
        {
            get
            {
                return _JTScopeDesc;
            }
            set
            {
                OnJTScopeDescChanging(value);
                ReportPropertyChanging("JTScopeDesc");
                _JTScopeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JTScopeDesc");
                OnJTScopeDescChanged();
            }
        }
        private global::System.String _JTScopeDesc;
        partial void OnJTScopeDescChanging(global::System.String value);
        partial void OnJTScopeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> JBID
        {
            get
            {
                return _JBID;
            }
            set
            {
                OnJBIDChanging(value);
                ReportPropertyChanging("JBID");
                _JBID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JBID");
                OnJBIDChanged();
            }
        }
        private Nullable<global::System.Int64> _JBID;
        partial void OnJBIDChanging(Nullable<global::System.Int64> value);
        partial void OnJBIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Employee_refJobTitle", "Employee")]
        public EntityCollection<Employee> Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Employee>("SureHisModel.FK_Employee_refJobTitle", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Employee>("SureHisModel.FK_Employee_refJobTitle", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_JobModel_refJobTitle", "JobModel")]
        public EntityCollection<JobModel> JobModel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobModel>("SureHisModel.FK_JobModel_refJobTitle", "JobModel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobModel>("SureHisModel.FK_JobModel_refJobTitle", "JobModel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refJobTitle_refJobBand", "refJobBand")]
        public refJobBand refJobBand
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobBand>("SureHisModel.FK_refJobTitle_refJobBand", "refJobBand").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobBand>("SureHisModel.FK_refJobTitle_refJobBand", "refJobBand").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refJobBand> refJobBandReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobBand>("SureHisModel.FK_refJobTitle_refJobBand", "refJobBand");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refJobBand>("SureHisModel.FK_refJobTitle_refJobBand", "refJobBand", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refJobTitle_refJobTitle", "refJobTitle1")]
        public EntityCollection<refJobTitle> refJobTitle1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refJobTitle_refJobTitle", "refJobTitle")]
        public refJobTitle refJobTitle2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refJobTitle> refJobTitle2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refJobTitle>("SureHisModel.FK_refJobTitle_refJobTitle", "refJobTitle", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refLimVitalSign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refLimVitalSign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refLimVitalSign object.
        /// </summary>
        /// <param name="limVitID">Initial value of the LimVitID property.</param>
        /// <param name="vitSignCode">Initial value of the VitSignCode property.</param>
        /// <param name="ageOnly">Initial value of the AgeOnly property.</param>
        public static refLimVitalSign CreaterefLimVitalSign(global::System.Int64 limVitID, global::System.Int64 vitSignCode, global::System.Boolean ageOnly)
        {
            refLimVitalSign refLimVitalSign = new refLimVitalSign();
            refLimVitalSign.LimVitID = limVitID;
            refLimVitalSign.VitSignCode = vitSignCode;
            refLimVitalSign.AgeOnly = ageOnly;
            return refLimVitalSign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LimVitID
        {
            get
            {
                return _LimVitID;
            }
            set
            {
                if (_LimVitID != value)
                {
                    OnLimVitIDChanging(value);
                    ReportPropertyChanging("LimVitID");
                    _LimVitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LimVitID");
                    OnLimVitIDChanged();
                }
            }
        }
        private global::System.Int64 _LimVitID;
        partial void OnLimVitIDChanging(global::System.Int64 value);
        partial void OnLimVitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VitSignCode
        {
            get
            {
                return _VitSignCode;
            }
            set
            {
                OnVitSignCodeChanging(value);
                ReportPropertyChanging("VitSignCode");
                _VitSignCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VitSignCode");
                OnVitSignCodeChanged();
            }
        }
        private global::System.Int64 _VitSignCode;
        partial void OnVitSignCodeChanging(global::System.Int64 value);
        partial void OnVitSignCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersGenderCode
        {
            get
            {
                return _PersGenderCode;
            }
            set
            {
                OnPersGenderCodeChanging(value);
                ReportPropertyChanging("PersGenderCode");
                _PersGenderCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersGenderCode");
                OnPersGenderCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _PersGenderCode;
        partial void OnPersGenderCodeChanging(Nullable<global::System.Int64> value);
        partial void OnPersGenderCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AgeOnly
        {
            get
            {
                return _AgeOnly;
            }
            set
            {
                OnAgeOnlyChanging(value);
                ReportPropertyChanging("AgeOnly");
                _AgeOnly = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AgeOnly");
                OnAgeOnlyChanged();
            }
        }
        private global::System.Boolean _AgeOnly;
        partial void OnAgeOnlyChanging(global::System.Boolean value);
        partial void OnAgeOnlyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MinAge
        {
            get
            {
                return _MinAge;
            }
            set
            {
                OnMinAgeChanging(value);
                ReportPropertyChanging("MinAge");
                _MinAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinAge");
                OnMinAgeChanged();
            }
        }
        private Nullable<global::System.Int16> _MinAge;
        partial void OnMinAgeChanging(Nullable<global::System.Int16> value);
        partial void OnMinAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> MaxAge
        {
            get
            {
                return _MaxAge;
            }
            set
            {
                OnMaxAgeChanging(value);
                ReportPropertyChanging("MaxAge");
                _MaxAge = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxAge");
                OnMaxAgeChanged();
            }
        }
        private Nullable<global::System.Int16> _MaxAge;
        partial void OnMaxAgeChanging(Nullable<global::System.Int16> value);
        partial void OnMaxAgeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MinLim
        {
            get
            {
                return _MinLim;
            }
            set
            {
                OnMinLimChanging(value);
                ReportPropertyChanging("MinLim");
                _MinLim = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinLim");
                OnMinLimChanged();
            }
        }
        private Nullable<global::System.Single> _MinLim;
        partial void OnMinLimChanging(Nullable<global::System.Single> value);
        partial void OnMinLimChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> MaxLim
        {
            get
            {
                return _MaxLim;
            }
            set
            {
                OnMaxLimChanging(value);
                ReportPropertyChanging("MaxLim");
                _MaxLim = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxLim");
                OnMaxLimChanged();
            }
        }
        private Nullable<global::System.Single> _MaxLim;
        partial void OnMaxLimChanging(Nullable<global::System.Single> value);
        partial void OnMaxLimChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> VitSignUnitCode
        {
            get
            {
                return _VitSignUnitCode;
            }
            set
            {
                OnVitSignUnitCodeChanging(value);
                ReportPropertyChanging("VitSignUnitCode");
                _VitSignUnitCode = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VitSignUnitCode");
                OnVitSignUnitCodeChanged();
            }
        }
        private Nullable<global::System.Int64> _VitSignUnitCode;
        partial void OnVitSignUnitCodeChanging(Nullable<global::System.Int64> value);
        partial void OnVitSignUnitCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_LimVitType
        {
            get
            {
                return _V_LimVitType;
            }
            set
            {
                OnV_LimVitTypeChanging(value);
                ReportPropertyChanging("V_LimVitType");
                _V_LimVitType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_LimVitType");
                OnV_LimVitTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_LimVitType;
        partial void OnV_LimVitTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_LimVitTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_VitStandType
        {
            get
            {
                return _V_VitStandType;
            }
            set
            {
                OnV_VitStandTypeChanging(value);
                ReportPropertyChanging("V_VitStandType");
                _V_VitStandType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_VitStandType");
                OnV_VitStandTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_VitStandType;
        partial void OnV_VitStandTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_VitStandTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refPersGender", "refPersGender")]
        public refPersGender refPersGender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_refLimVitalSign_refPersGender", "refPersGender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_refLimVitalSign_refPersGender", "refPersGender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPersGender> refPersGenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_refLimVitalSign_refPersGender", "refPersGender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPersGender>("SureHisModel.FK_refLimVitalSign_refPersGender", "refPersGender", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure")]
        public refUnitOfMeasure refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refUnitOfMeasure> refUnitOfMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refUnitOfMeasure>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refUnitOfMeasure>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refUnitOfMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refVitalSign", "refVitalSign")]
        public refVitalSign refVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refVitalSign").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refVitalSign").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refVitalSign> refVitalSignReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refVitalSign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refLookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refLookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refLookup object.
        /// </summary>
        /// <param name="lookupID">Initial value of the LookupID property.</param>
        /// <param name="isBuiltin">Initial value of the isBuiltin property.</param>
        /// <param name="objectName">Initial value of the ObjectName property.</param>
        /// <param name="objectValue">Initial value of the ObjectValue property.</param>
        /// <param name="ordinal">Initial value of the Ordinal property.</param>
        public static refLookup CreaterefLookup(global::System.Int64 lookupID, global::System.Boolean isBuiltin, global::System.String objectName, global::System.String objectValue, global::System.Byte ordinal)
        {
            refLookup refLookup = new refLookup();
            refLookup.LookupID = lookupID;
            refLookup.isBuiltin = isBuiltin;
            refLookup.ObjectName = objectName;
            refLookup.ObjectValue = objectValue;
            refLookup.Ordinal = ordinal;
            return refLookup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LookupID
        {
            get
            {
                return _LookupID;
            }
            set
            {
                if (_LookupID != value)
                {
                    OnLookupIDChanging(value);
                    ReportPropertyChanging("LookupID");
                    _LookupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LookupID");
                    OnLookupIDChanged();
                }
            }
        }
        private global::System.Int64 _LookupID;
        partial void OnLookupIDChanging(global::System.Int64 value);
        partial void OnLookupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isBuiltin
        {
            get
            {
                return _isBuiltin;
            }
            set
            {
                OnisBuiltinChanging(value);
                ReportPropertyChanging("isBuiltin");
                _isBuiltin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isBuiltin");
                OnisBuiltinChanged();
            }
        }
        private global::System.Boolean _isBuiltin;
        partial void OnisBuiltinChanging(global::System.Boolean value);
        partial void OnisBuiltinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectName
        {
            get
            {
                return _ObjectName;
            }
            set
            {
                OnObjectNameChanging(value);
                ReportPropertyChanging("ObjectName");
                _ObjectName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectName");
                OnObjectNameChanged();
            }
        }
        private global::System.String _ObjectName;
        partial void OnObjectNameChanging(global::System.String value);
        partial void OnObjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ObjectValue
        {
            get
            {
                return _ObjectValue;
            }
            set
            {
                OnObjectValueChanging(value);
                ReportPropertyChanging("ObjectValue");
                _ObjectValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ObjectValue");
                OnObjectValueChanged();
            }
        }
        private global::System.String _ObjectValue;
        partial void OnObjectValueChanging(global::System.String value);
        partial void OnObjectValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNObjectValue
        {
            get
            {
                return _VNObjectValue;
            }
            set
            {
                OnVNObjectValueChanging(value);
                ReportPropertyChanging("VNObjectValue");
                _VNObjectValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNObjectValue");
                OnVNObjectValueChanged();
            }
        }
        private global::System.String _VNObjectValue;
        partial void OnVNObjectValueChanging(global::System.String value);
        partial void OnVNObjectValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ObjectNotes
        {
            get
            {
                return _ObjectNotes;
            }
            set
            {
                OnObjectNotesChanging(value);
                ReportPropertyChanging("ObjectNotes");
                _ObjectNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ObjectNotes");
                OnObjectNotesChanged();
            }
        }
        private global::System.String _ObjectNotes;
        partial void OnObjectNotesChanging(global::System.String value);
        partial void OnObjectNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isActivated
        {
            get
            {
                return _isActivated;
            }
            set
            {
                OnisActivatedChanging(value);
                ReportPropertyChanging("isActivated");
                _isActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isActivated");
                OnisActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isActivated;
        partial void OnisActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnisActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Ordinal
        {
            get
            {
                return _Ordinal;
            }
            set
            {
                OnOrdinalChanging(value);
                ReportPropertyChanging("Ordinal");
                _Ordinal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordinal");
                OnOrdinalChanged();
            }
        }
        private global::System.Byte _Ordinal;
        partial void OnOrdinalChanging(global::System.Byte value);
        partial void OnOrdinalChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedcnAdminRoute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedcnAdminRoute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedcnAdminRoute object.
        /// </summary>
        /// <param name="medcnAdminRouteCode">Initial value of the MedcnAdminRouteCode property.</param>
        public static refMedcnAdminRoute CreaterefMedcnAdminRoute(global::System.String medcnAdminRouteCode)
        {
            refMedcnAdminRoute refMedcnAdminRoute = new refMedcnAdminRoute();
            refMedcnAdminRoute.MedcnAdminRouteCode = medcnAdminRouteCode;
            return refMedcnAdminRoute;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcnAdminRouteCode
        {
            get
            {
                return _MedcnAdminRouteCode;
            }
            set
            {
                if (_MedcnAdminRouteCode != value)
                {
                    OnMedcnAdminRouteCodeChanging(value);
                    ReportPropertyChanging("MedcnAdminRouteCode");
                    _MedcnAdminRouteCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MedcnAdminRouteCode");
                    OnMedcnAdminRouteCodeChanged();
                }
            }
        }
        private global::System.String _MedcnAdminRouteCode;
        partial void OnMedcnAdminRouteCodeChanging(global::System.String value);
        partial void OnMedcnAdminRouteCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedcnAdminRouteName
        {
            get
            {
                return _MedcnAdminRouteName;
            }
            set
            {
                OnMedcnAdminRouteNameChanging(value);
                ReportPropertyChanging("MedcnAdminRouteName");
                _MedcnAdminRouteName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedcnAdminRouteName");
                OnMedcnAdminRouteNameChanged();
            }
        }
        private global::System.String _MedcnAdminRouteName;
        partial void OnMedcnAdminRouteNameChanging(global::System.String value);
        partial void OnMedcnAdminRouteNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refMedcnAdminRoute", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refMedcnAdminRoute", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refMedcnAdminRoute", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedcnVehicleForm")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedcnVehicleForm : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedcnVehicleForm object.
        /// </summary>
        /// <param name="medcnVehicleFormCode">Initial value of the MedcnVehicleFormCode property.</param>
        /// <param name="medcnVehicleFormName">Initial value of the MedcnVehicleFormName property.</param>
        public static refMedcnVehicleForm CreaterefMedcnVehicleForm(global::System.String medcnVehicleFormCode, global::System.String medcnVehicleFormName)
        {
            refMedcnVehicleForm refMedcnVehicleForm = new refMedcnVehicleForm();
            refMedcnVehicleForm.MedcnVehicleFormCode = medcnVehicleFormCode;
            refMedcnVehicleForm.MedcnVehicleFormName = medcnVehicleFormName;
            return refMedcnVehicleForm;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcnVehicleFormCode
        {
            get
            {
                return _MedcnVehicleFormCode;
            }
            set
            {
                if (_MedcnVehicleFormCode != value)
                {
                    OnMedcnVehicleFormCodeChanging(value);
                    ReportPropertyChanging("MedcnVehicleFormCode");
                    _MedcnVehicleFormCode = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MedcnVehicleFormCode");
                    OnMedcnVehicleFormCodeChanged();
                }
            }
        }
        private global::System.String _MedcnVehicleFormCode;
        partial void OnMedcnVehicleFormCodeChanging(global::System.String value);
        partial void OnMedcnVehicleFormCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedcnVehicleFormName
        {
            get
            {
                return _MedcnVehicleFormName;
            }
            set
            {
                OnMedcnVehicleFormNameChanging(value);
                ReportPropertyChanging("MedcnVehicleFormName");
                _MedcnVehicleFormName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedcnVehicleFormName");
                OnMedcnVehicleFormNameChanged();
            }
        }
        private global::System.String _MedcnVehicleFormName;
        partial void OnMedcnVehicleFormNameChanging(global::System.String value);
        partial void OnMedcnVehicleFormNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refMedcnVehicleForm", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refMedcnVehicleForm", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refMedcnVehicleForm", "Drug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedEquipResourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedEquipResourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedEquipResourceType object.
        /// </summary>
        /// <param name="mDRscTypeID">Initial value of the MDRscTypeID property.</param>
        /// <param name="mDRscTypeName">Initial value of the MDRscTypeName property.</param>
        public static refMedEquipResourceType CreaterefMedEquipResourceType(global::System.Int64 mDRscTypeID, global::System.String mDRscTypeName)
        {
            refMedEquipResourceType refMedEquipResourceType = new refMedEquipResourceType();
            refMedEquipResourceType.MDRscTypeID = mDRscTypeID;
            refMedEquipResourceType.MDRscTypeName = mDRscTypeName;
            return refMedEquipResourceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PMDRscTypeID
        {
            get
            {
                return _PMDRscTypeID;
            }
            set
            {
                OnPMDRscTypeIDChanging(value);
                ReportPropertyChanging("PMDRscTypeID");
                _PMDRscTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PMDRscTypeID");
                OnPMDRscTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PMDRscTypeID;
        partial void OnPMDRscTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnPMDRscTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MDRscTypeID
        {
            get
            {
                return _MDRscTypeID;
            }
            set
            {
                if (_MDRscTypeID != value)
                {
                    OnMDRscTypeIDChanging(value);
                    ReportPropertyChanging("MDRscTypeID");
                    _MDRscTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MDRscTypeID");
                    OnMDRscTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _MDRscTypeID;
        partial void OnMDRscTypeIDChanging(global::System.Int64 value);
        partial void OnMDRscTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MDRscTypeName
        {
            get
            {
                return _MDRscTypeName;
            }
            set
            {
                OnMDRscTypeNameChanging(value);
                ReportPropertyChanging("MDRscTypeName");
                _MDRscTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MDRscTypeName");
                OnMDRscTypeNameChanged();
            }
        }
        private global::System.String _MDRscTypeName;
        partial void OnMDRscTypeNameChanging(global::System.String value);
        partial void OnMDRscTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MDRscTypeDesc
        {
            get
            {
                return _MDRscTypeDesc;
            }
            set
            {
                OnMDRscTypeDescChanging(value);
                ReportPropertyChanging("MDRscTypeDesc");
                _MDRscTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MDRscTypeDesc");
                OnMDRscTypeDescChanged();
            }
        }
        private global::System.String _MDRscTypeDesc;
        partial void OnMDRscTypeDescChanging(global::System.String value);
        partial void OnMDRscTypeDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType1")]
        public EntityCollection<refMedEquipResourceType> refMedEquipResourceType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType")]
        public refMedEquipResourceType refMedEquipResourceType2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedEquipResourceType> refMedEquipResourceType2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedEquipResourceType>("SureHisModel.FK_refMedEquipResourceType_refMedEquipResourceType", "refMedEquipResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_refMedEquipResourceType", "Resource")]
        public EntityCollection<Resource> Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("SureHisModel.FK_Resource_refMedEquipResourceType", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("SureHisModel.FK_Resource_refMedEquipResourceType", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedHisIndex")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedHisIndex : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedHisIndex object.
        /// </summary>
        /// <param name="mHIndexID">Initial value of the MHIndexID property.</param>
        /// <param name="mHIndexName">Initial value of the MHIndexName property.</param>
        /// <param name="isPastHis">Initial value of the IsPastHis property.</param>
        public static refMedHisIndex CreaterefMedHisIndex(global::System.Int64 mHIndexID, global::System.String mHIndexName, global::System.Boolean isPastHis)
        {
            refMedHisIndex refMedHisIndex = new refMedHisIndex();
            refMedHisIndex.MHIndexID = mHIndexID;
            refMedHisIndex.MHIndexName = mHIndexName;
            refMedHisIndex.IsPastHis = isPastHis;
            return refMedHisIndex;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MHIndexID
        {
            get
            {
                return _MHIndexID;
            }
            set
            {
                if (_MHIndexID != value)
                {
                    OnMHIndexIDChanging(value);
                    ReportPropertyChanging("MHIndexID");
                    _MHIndexID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MHIndexID");
                    OnMHIndexIDChanged();
                }
            }
        }
        private global::System.Int64 _MHIndexID;
        partial void OnMHIndexIDChanging(global::System.Int64 value);
        partial void OnMHIndexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MHIndexName
        {
            get
            {
                return _MHIndexName;
            }
            set
            {
                OnMHIndexNameChanging(value);
                ReportPropertyChanging("MHIndexName");
                _MHIndexName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MHIndexName");
                OnMHIndexNameChanged();
            }
        }
        private global::System.String _MHIndexName;
        partial void OnMHIndexNameChanging(global::System.String value);
        partial void OnMHIndexNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPastHis
        {
            get
            {
                return _IsPastHis;
            }
            set
            {
                OnIsPastHisChanging(value);
                ReportPropertyChanging("IsPastHis");
                _IsPastHis = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPastHis");
                OnIsPastHisChanged();
            }
        }
        private global::System.Boolean _IsPastHis;
        partial void OnIsPastHisChanging(global::System.Boolean value);
        partial void OnIsPastHisChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PastPersonHistory_refMedHisIndex", "PastPersonHistory")]
        public EntityCollection<PastPersonHistory> PastPersonHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "PastPersonHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PastPersonHistory>("SureHisModel.FK_PastPersonHistory_refMedHisIndex", "PastPersonHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refSocialHisSeverity_refMedHisIndex", "refSocialHisSeverity")]
        public EntityCollection<refSocialHisSeverity> refSocialHisSeverity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refSocialHisSeverity>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refSocialHisSeverity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refSocialHisSeverity>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refSocialHisSeverity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedicalCondition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedicalCondition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedicalCondition object.
        /// </summary>
        /// <param name="mCID">Initial value of the MCID property.</param>
        /// <param name="mCDescription">Initial value of the MCDescription property.</param>
        public static refMedicalCondition CreaterefMedicalCondition(global::System.Int64 mCID, global::System.String mCDescription)
        {
            refMedicalCondition refMedicalCondition = new refMedicalCondition();
            refMedicalCondition.MCID = mCID;
            refMedicalCondition.MCDescription = mCDescription;
            return refMedicalCondition;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MCID
        {
            get
            {
                return _MCID;
            }
            set
            {
                if (_MCID != value)
                {
                    OnMCIDChanging(value);
                    ReportPropertyChanging("MCID");
                    _MCID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MCID");
                    OnMCIDChanged();
                }
            }
        }
        private global::System.Int64 _MCID;
        partial void OnMCIDChanging(global::System.Int64 value);
        partial void OnMCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MCDescription
        {
            get
            {
                return _MCDescription;
            }
            set
            {
                OnMCDescriptionChanging(value);
                ReportPropertyChanging("MCDescription");
                _MCDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MCDescription");
                OnMCDescriptionChanged();
            }
        }
        private global::System.String _MCDescription;
        partial void OnMCDescriptionChanging(global::System.String value);
        partial void OnMCDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedConditionType
        {
            get
            {
                return _MedConditionType;
            }
            set
            {
                OnMedConditionTypeChanging(value);
                ReportPropertyChanging("MedConditionType");
                _MedConditionType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedConditionType");
                OnMedConditionTypeChanged();
            }
        }
        private global::System.String _MedConditionType;
        partial void OnMedConditionTypeChanging(global::System.String value);
        partial void OnMedConditionTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DonorMedicalConditions_refMedicalConditions", "DonorMedicalConditions")]
        public EntityCollection<DonorMedicalConditions> DonorMedicalConditions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DonorMedicalConditions>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "DonorMedicalConditions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DonorMedicalConditions>("SureHisModel.FK_DonorMedicalConditions_refMedicalConditions", "DonorMedicalConditions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalConditionRecord_refMedicalCondition", "MedicalConditionRecord")]
        public EntityCollection<MedicalConditionRecord> MedicalConditionRecord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalConditionRecord>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "MedicalConditionRecord");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalConditionRecord>("SureHisModel.FK_MedicalConditionRecord_refMedicalCondition", "MedicalConditionRecord", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refMedicalServiceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refMedicalServiceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refMedicalServiceType object.
        /// </summary>
        /// <param name="medSerTypeID">Initial value of the MedSerTypeID property.</param>
        /// <param name="medSerTypeCode">Initial value of the MedSerTypeCode property.</param>
        /// <param name="medSerTypeName">Initial value of the MedSerTypeName property.</param>
        public static refMedicalServiceType CreaterefMedicalServiceType(global::System.Int64 medSerTypeID, global::System.String medSerTypeCode, global::System.String medSerTypeName)
        {
            refMedicalServiceType refMedicalServiceType = new refMedicalServiceType();
            refMedicalServiceType.MedSerTypeID = medSerTypeID;
            refMedicalServiceType.MedSerTypeCode = medSerTypeCode;
            refMedicalServiceType.MedSerTypeName = medSerTypeName;
            return refMedicalServiceType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MedSerTypeID
        {
            get
            {
                return _MedSerTypeID;
            }
            set
            {
                if (_MedSerTypeID != value)
                {
                    OnMedSerTypeIDChanging(value);
                    ReportPropertyChanging("MedSerTypeID");
                    _MedSerTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MedSerTypeID");
                    OnMedSerTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _MedSerTypeID;
        partial void OnMedSerTypeIDChanging(global::System.Int64 value);
        partial void OnMedSerTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerTypeCode
        {
            get
            {
                return _MedSerTypeCode;
            }
            set
            {
                OnMedSerTypeCodeChanging(value);
                ReportPropertyChanging("MedSerTypeCode");
                _MedSerTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerTypeCode");
                OnMedSerTypeCodeChanged();
            }
        }
        private global::System.String _MedSerTypeCode;
        partial void OnMedSerTypeCodeChanging(global::System.String value);
        partial void OnMedSerTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedSerTypeName
        {
            get
            {
                return _MedSerTypeName;
            }
            set
            {
                OnMedSerTypeNameChanging(value);
                ReportPropertyChanging("MedSerTypeName");
                _MedSerTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedSerTypeName");
                OnMedSerTypeNameChanged();
            }
        }
        private global::System.String _MedSerTypeName;
        partial void OnMedSerTypeNameChanging(global::System.String value);
        partial void OnMedSerTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MedSerTypeDesc
        {
            get
            {
                return _MedSerTypeDesc;
            }
            set
            {
                OnMedSerTypeDescChanging(value);
                ReportPropertyChanging("MedSerTypeDesc");
                _MedSerTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MedSerTypeDesc");
                OnMedSerTypeDescChanged();
            }
        }
        private global::System.String _MedSerTypeDesc;
        partial void OnMedSerTypeDescChanging(global::System.String value);
        partial void OnMedSerTypeDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_MedSerTypeStatus
        {
            get
            {
                return _V_MedSerTypeStatus;
            }
            set
            {
                OnV_MedSerTypeStatusChanging(value);
                ReportPropertyChanging("V_MedSerTypeStatus");
                _V_MedSerTypeStatus = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedSerTypeStatus");
                OnV_MedSerTypeStatusChanged();
            }
        }
        private Nullable<global::System.Int64> _V_MedSerTypeStatus;
        partial void OnV_MedSerTypeStatusChanging(Nullable<global::System.Int64> value);
        partial void OnV_MedSerTypeStatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HIServiceItem_refMedicalServiceType", "HIServiceItem")]
        public EntityCollection<HIServiceItem> HIServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HIServiceItem>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "HIServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HIServiceItem>("SureHisModel.FK_HIServiceItem_refMedicalServiceType", "HIServiceItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalServiceItems_refMedicalServiceTypes", "MedicalServiceItem")]
        public EntityCollection<MedicalServiceItem> MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalServiceItem>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalServiceItem>("SureHisModel.FK_MedicalServiceItems_refMedicalServiceTypes", "MedicalServiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refOccupation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refOccupation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refOccupation object.
        /// </summary>
        /// <param name="occupationID">Initial value of the OccupationID property.</param>
        /// <param name="occupationCode">Initial value of the OccupationCode property.</param>
        /// <param name="occupationTitle">Initial value of the OccupationTitle property.</param>
        public static refOccupation CreaterefOccupation(global::System.Int64 occupationID, global::System.String occupationCode, global::System.String occupationTitle)
        {
            refOccupation refOccupation = new refOccupation();
            refOccupation.OccupationID = occupationID;
            refOccupation.OccupationCode = occupationCode;
            refOccupation.OccupationTitle = occupationTitle;
            return refOccupation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OccupationID
        {
            get
            {
                return _OccupationID;
            }
            set
            {
                if (_OccupationID != value)
                {
                    OnOccupationIDChanging(value);
                    ReportPropertyChanging("OccupationID");
                    _OccupationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OccupationID");
                    OnOccupationIDChanged();
                }
            }
        }
        private global::System.Int64 _OccupationID;
        partial void OnOccupationIDChanging(global::System.Int64 value);
        partial void OnOccupationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OccupationCode
        {
            get
            {
                return _OccupationCode;
            }
            set
            {
                OnOccupationCodeChanging(value);
                ReportPropertyChanging("OccupationCode");
                _OccupationCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OccupationCode");
                OnOccupationCodeChanged();
            }
        }
        private global::System.String _OccupationCode;
        partial void OnOccupationCodeChanging(global::System.String value);
        partial void OnOccupationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OccupationTitle
        {
            get
            {
                return _OccupationTitle;
            }
            set
            {
                OnOccupationTitleChanging(value);
                ReportPropertyChanging("OccupationTitle");
                _OccupationTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OccupationTitle");
                OnOccupationTitleChanged();
            }
        }
        private global::System.String _OccupationTitle;
        partial void OnOccupationTitleChanging(global::System.String value);
        partial void OnOccupationTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNOccupationTitle
        {
            get
            {
                return _VNOccupationTitle;
            }
            set
            {
                OnVNOccupationTitleChanging(value);
                ReportPropertyChanging("VNOccupationTitle");
                _VNOccupationTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNOccupationTitle");
                OnVNOccupationTitleChanged();
            }
        }
        private global::System.String _VNOccupationTitle;
        partial void OnVNOccupationTitleChanging(global::System.String value);
        partial void OnVNOccupationTitleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OccCareerMOH_refOccupation", "OccCareerMOH")]
        public EntityCollection<OccCareerMOH> OccCareerMOH
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OccCareerMOH>("SureHisModel.FK_OccCareerMOH_refOccupation", "OccCareerMOH");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OccCareerMOH>("SureHisModel.FK_OccCareerMOH_refOccupation", "OccCareerMOH", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refPermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refPermission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refPermission object.
        /// </summary>
        /// <param name="permItemID">Initial value of the PermItemID property.</param>
        /// <param name="permName">Initial value of the PermName property.</param>
        /// <param name="permVal">Initial value of the PermVal property.</param>
        public static refPermission CreaterefPermission(global::System.Int64 permItemID, global::System.String permName, global::System.Byte permVal)
        {
            refPermission refPermission = new refPermission();
            refPermission.PermItemID = permItemID;
            refPermission.PermName = permName;
            refPermission.PermVal = permVal;
            return refPermission;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PermItemID
        {
            get
            {
                return _PermItemID;
            }
            set
            {
                if (_PermItemID != value)
                {
                    OnPermItemIDChanging(value);
                    ReportPropertyChanging("PermItemID");
                    _PermItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PermItemID");
                    OnPermItemIDChanged();
                }
            }
        }
        private global::System.Int64 _PermItemID;
        partial void OnPermItemIDChanging(global::System.Int64 value);
        partial void OnPermItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PermName
        {
            get
            {
                return _PermName;
            }
            set
            {
                OnPermNameChanging(value);
                ReportPropertyChanging("PermName");
                _PermName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PermName");
                OnPermNameChanged();
            }
        }
        private global::System.String _PermName;
        partial void OnPermNameChanging(global::System.String value);
        partial void OnPermNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PermVal
        {
            get
            {
                return _PermVal;
            }
            set
            {
                OnPermValChanging(value);
                ReportPropertyChanging("PermVal");
                _PermVal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PermVal");
                OnPermValChanged();
            }
        }
        private global::System.Byte _PermVal;
        partial void OnPermValChanging(global::System.Byte value);
        partial void OnPermValChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNotEffect
        {
            get
            {
                return _IsNotEffect;
            }
            set
            {
                OnIsNotEffectChanging(value);
                ReportPropertyChanging("IsNotEffect");
                _IsNotEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNotEffect");
                OnIsNotEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNotEffect;
        partial void OnIsNotEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNotEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Ordinal
        {
            get
            {
                return _Ordinal;
            }
            set
            {
                OnOrdinalChanging(value);
                ReportPropertyChanging("Ordinal");
                _Ordinal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ordinal");
                OnOrdinalChanged();
            }
        }
        private Nullable<global::System.Byte> _Ordinal;
        partial void OnOrdinalChanging(Nullable<global::System.Byte> value);
        partial void OnOrdinalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetRolePermission_refPermission", "ASPNetRolePermission")]
        public EntityCollection<ASPNetRolePermission> ASPNetRolePermission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetRolePermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "ASPNetRolePermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetRolePermission>("SureHisModel.FK_ASPNetRolePermission_refPermission", "ASPNetRolePermission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refPersGender")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refPersGender : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refPersGender object.
        /// </summary>
        /// <param name="persGenderID">Initial value of the PersGenderID property.</param>
        /// <param name="persGenderCode">Initial value of the PersGenderCode property.</param>
        /// <param name="persGenderName">Initial value of the PersGenderName property.</param>
        public static refPersGender CreaterefPersGender(global::System.Int64 persGenderID, global::System.String persGenderCode, global::System.String persGenderName)
        {
            refPersGender refPersGender = new refPersGender();
            refPersGender.PersGenderID = persGenderID;
            refPersGender.PersGenderCode = persGenderCode;
            refPersGender.PersGenderName = persGenderName;
            return refPersGender;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersGenderID
        {
            get
            {
                return _PersGenderID;
            }
            set
            {
                if (_PersGenderID != value)
                {
                    OnPersGenderIDChanging(value);
                    ReportPropertyChanging("PersGenderID");
                    _PersGenderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersGenderID");
                    OnPersGenderIDChanged();
                }
            }
        }
        private global::System.Int64 _PersGenderID;
        partial void OnPersGenderIDChanging(global::System.Int64 value);
        partial void OnPersGenderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersGenderCode
        {
            get
            {
                return _PersGenderCode;
            }
            set
            {
                OnPersGenderCodeChanging(value);
                ReportPropertyChanging("PersGenderCode");
                _PersGenderCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersGenderCode");
                OnPersGenderCodeChanged();
            }
        }
        private global::System.String _PersGenderCode;
        partial void OnPersGenderCodeChanging(global::System.String value);
        partial void OnPersGenderCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersGenderName
        {
            get
            {
                return _PersGenderName;
            }
            set
            {
                OnPersGenderNameChanging(value);
                ReportPropertyChanging("PersGenderName");
                _PersGenderName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersGenderName");
                OnPersGenderNameChanged();
            }
        }
        private global::System.String _PersGenderName;
        partial void OnPersGenderNameChanging(global::System.String value);
        partial void OnPersGenderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPersGenderName
        {
            get
            {
                return _VNPersGenderName;
            }
            set
            {
                OnVNPersGenderNameChanging(value);
                ReportPropertyChanging("VNPersGenderName");
                _VNPersGenderName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPersGenderName");
                OnVNPersGenderNameChanged();
            }
        }
        private global::System.String _VNPersGenderName;
        partial void OnVNPersGenderNameChanging(global::System.String value);
        partial void OnVNPersGenderNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersGender", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refPersGender", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refPersGender", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refPersGender", "refLimVitalSign")]
        public EntityCollection<refLimVitalSign> refLimVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refPersGender", "refLimVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refPersGender", "refLimVitalSign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegistrationInfo_refPersGender", "RegistrationInfo")]
        public EntityCollection<RegistrationInfo> RegistrationInfo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegistrationInfo>("SureHisModel.FK_RegistrationInfo_refPersGender", "RegistrationInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegistrationInfo>("SureHisModel.FK_RegistrationInfo_refPersGender", "RegistrationInfo", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refPersMaritalStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refPersMaritalStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refPersMaritalStatus object.
        /// </summary>
        /// <param name="persMaritalStatusID">Initial value of the PersMaritalStatusID property.</param>
        /// <param name="persMaritalStatusCode">Initial value of the PersMaritalStatusCode property.</param>
        /// <param name="persMaritalStatusName">Initial value of the PersMaritalStatusName property.</param>
        public static refPersMaritalStatus CreaterefPersMaritalStatus(global::System.Int64 persMaritalStatusID, global::System.String persMaritalStatusCode, global::System.String persMaritalStatusName)
        {
            refPersMaritalStatus refPersMaritalStatus = new refPersMaritalStatus();
            refPersMaritalStatus.PersMaritalStatusID = persMaritalStatusID;
            refPersMaritalStatus.PersMaritalStatusCode = persMaritalStatusCode;
            refPersMaritalStatus.PersMaritalStatusName = persMaritalStatusName;
            return refPersMaritalStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersMaritalStatusID
        {
            get
            {
                return _PersMaritalStatusID;
            }
            set
            {
                if (_PersMaritalStatusID != value)
                {
                    OnPersMaritalStatusIDChanging(value);
                    ReportPropertyChanging("PersMaritalStatusID");
                    _PersMaritalStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersMaritalStatusID");
                    OnPersMaritalStatusIDChanged();
                }
            }
        }
        private global::System.Int64 _PersMaritalStatusID;
        partial void OnPersMaritalStatusIDChanging(global::System.Int64 value);
        partial void OnPersMaritalStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersMaritalStatusCode
        {
            get
            {
                return _PersMaritalStatusCode;
            }
            set
            {
                OnPersMaritalStatusCodeChanging(value);
                ReportPropertyChanging("PersMaritalStatusCode");
                _PersMaritalStatusCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersMaritalStatusCode");
                OnPersMaritalStatusCodeChanged();
            }
        }
        private global::System.String _PersMaritalStatusCode;
        partial void OnPersMaritalStatusCodeChanging(global::System.String value);
        partial void OnPersMaritalStatusCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersMaritalStatusName
        {
            get
            {
                return _PersMaritalStatusName;
            }
            set
            {
                OnPersMaritalStatusNameChanging(value);
                ReportPropertyChanging("PersMaritalStatusName");
                _PersMaritalStatusName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersMaritalStatusName");
                OnPersMaritalStatusNameChanged();
            }
        }
        private global::System.String _PersMaritalStatusName;
        partial void OnPersMaritalStatusNameChanging(global::System.String value);
        partial void OnPersMaritalStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPersMaritalStatusName
        {
            get
            {
                return _VNPersMaritalStatusName;
            }
            set
            {
                OnVNPersMaritalStatusNameChanging(value);
                ReportPropertyChanging("VNPersMaritalStatusName");
                _VNPersMaritalStatusName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPersMaritalStatusName");
                OnVNPersMaritalStatusNameChanged();
            }
        }
        private global::System.String _VNPersMaritalStatusName;
        partial void OnVNPersMaritalStatusNameChanging(global::System.String value);
        partial void OnVNPersMaritalStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> is7
        {
            get
            {
                return _is7;
            }
            set
            {
                Onis7Changing(value);
                ReportPropertyChanging("is7");
                _is7 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("is7");
                Onis7Changed();
            }
        }
        private Nullable<global::System.Boolean> _is7;
        partial void Onis7Changing(Nullable<global::System.Boolean> value);
        partial void Onis7Changed();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersMaritalStatus", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refPersMaritalStatus", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refPersMaritalStatus", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refPersRace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refPersRace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refPersRace object.
        /// </summary>
        /// <param name="persRaceID">Initial value of the PersRaceID property.</param>
        /// <param name="persRaceCode">Initial value of the PersRaceCode property.</param>
        /// <param name="persRaceName">Initial value of the PersRaceName property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static refPersRace CreaterefPersRace(global::System.Int64 persRaceID, global::System.String persRaceCode, global::System.String persRaceName, global::System.Int16 level)
        {
            refPersRace refPersRace = new refPersRace();
            refPersRace.PersRaceID = persRaceID;
            refPersRace.PersRaceCode = persRaceCode;
            refPersRace.PersRaceName = persRaceName;
            refPersRace.Level = level;
            return refPersRace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PersRaceID
        {
            get
            {
                return _PersRaceID;
            }
            set
            {
                if (_PersRaceID != value)
                {
                    OnPersRaceIDChanging(value);
                    ReportPropertyChanging("PersRaceID");
                    _PersRaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersRaceID");
                    OnPersRaceIDChanged();
                }
            }
        }
        private global::System.Int64 _PersRaceID;
        partial void OnPersRaceIDChanging(global::System.Int64 value);
        partial void OnPersRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersRaceCode
        {
            get
            {
                return _PersRaceCode;
            }
            set
            {
                OnPersRaceCodeChanging(value);
                ReportPropertyChanging("PersRaceCode");
                _PersRaceCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersRaceCode");
                OnPersRaceCodeChanged();
            }
        }
        private global::System.String _PersRaceCode;
        partial void OnPersRaceCodeChanging(global::System.String value);
        partial void OnPersRaceCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PersRaceName
        {
            get
            {
                return _PersRaceName;
            }
            set
            {
                OnPersRaceNameChanging(value);
                ReportPropertyChanging("PersRaceName");
                _PersRaceName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PersRaceName");
                OnPersRaceNameChanged();
            }
        }
        private global::System.String _PersRaceName;
        partial void OnPersRaceNameChanging(global::System.String value);
        partial void OnPersRaceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPersRaceName
        {
            get
            {
                return _VNPersRaceName;
            }
            set
            {
                OnVNPersRaceNameChanging(value);
                ReportPropertyChanging("VNPersRaceName");
                _VNPersRaceName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPersRaceName");
                OnVNPersRaceNameChanged();
            }
        }
        private global::System.String _VNPersRaceName;
        partial void OnVNPersRaceNameChanging(global::System.String value);
        partial void OnVNPersRaceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PPersRaceID
        {
            get
            {
                return _PPersRaceID;
            }
            set
            {
                OnPPersRaceIDChanging(value);
                ReportPropertyChanging("PPersRaceID");
                _PPersRaceID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PPersRaceID");
                OnPPersRaceIDChanged();
            }
        }
        private global::System.String _PPersRaceID;
        partial void OnPPersRaceIDChanging(global::System.String value);
        partial void OnPPersRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int16 _Level;
        partial void OnLevelChanging(global::System.Int16 value);
        partial void OnLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refPersRace", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refPersRace", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refPersRace", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refProblem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refProblem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refProblem object.
        /// </summary>
        /// <param name="pHProbId">Initial value of the PHProbId property.</param>
        /// <param name="pHProbCode">Initial value of the PHProbCode property.</param>
        /// <param name="pHProbTitleText">Initial value of the PHProbTitleText property.</param>
        public static refProblem CreaterefProblem(global::System.Int64 pHProbId, global::System.String pHProbCode, global::System.String pHProbTitleText)
        {
            refProblem refProblem = new refProblem();
            refProblem.PHProbId = pHProbId;
            refProblem.PHProbCode = pHProbCode;
            refProblem.PHProbTitleText = pHProbTitleText;
            return refProblem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PHProbId
        {
            get
            {
                return _PHProbId;
            }
            set
            {
                if (_PHProbId != value)
                {
                    OnPHProbIdChanging(value);
                    ReportPropertyChanging("PHProbId");
                    _PHProbId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PHProbId");
                    OnPHProbIdChanged();
                }
            }
        }
        private global::System.Int64 _PHProbId;
        partial void OnPHProbIdChanging(global::System.Int64 value);
        partial void OnPHProbIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PHProbCode
        {
            get
            {
                return _PHProbCode;
            }
            set
            {
                OnPHProbCodeChanging(value);
                ReportPropertyChanging("PHProbCode");
                _PHProbCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PHProbCode");
                OnPHProbCodeChanged();
            }
        }
        private global::System.String _PHProbCode;
        partial void OnPHProbCodeChanging(global::System.String value);
        partial void OnPHProbCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PHProbTitleText
        {
            get
            {
                return _PHProbTitleText;
            }
            set
            {
                OnPHProbTitleTextChanging(value);
                ReportPropertyChanging("PHProbTitleText");
                _PHProbTitleText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PHProbTitleText");
                OnPHProbTitleTextChanged();
            }
        }
        private global::System.String _PHProbTitleText;
        partial void OnPHProbTitleTextChanging(global::System.String value);
        partial void OnPHProbTitleTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProbLatin
        {
            get
            {
                return _ProbLatin;
            }
            set
            {
                OnProbLatinChanging(value);
                ReportPropertyChanging("ProbLatin");
                _ProbLatin = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProbLatin");
                OnProbLatinChanged();
            }
        }
        private global::System.String _ProbLatin;
        partial void OnProbLatinChanging(global::System.String value);
        partial void OnProbLatinChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProbDesc
        {
            get
            {
                return _ProbDesc;
            }
            set
            {
                OnProbDescChanging(value);
                ReportPropertyChanging("ProbDesc");
                _ProbDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProbDesc");
                OnProbDescChanged();
            }
        }
        private global::System.String _ProbDesc;
        partial void OnProbDescChanging(global::System.String value);
        partial void OnProbDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> H7PHProbType
        {
            get
            {
                return _H7PHProbType;
            }
            set
            {
                OnH7PHProbTypeChanging(value);
                ReportPropertyChanging("H7PHProbType");
                _H7PHProbType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("H7PHProbType");
                OnH7PHProbTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _H7PHProbType;
        partial void OnH7PHProbTypeChanging(Nullable<global::System.Int64> value);
        partial void OnH7PHProbTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientProblem_RefProblem", "PatientProblem")]
        public EntityCollection<PatientProblem> PatientProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientProblem>("SureHisModel.FK_PatientProblem_RefProblem", "PatientProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientProblem>("SureHisModel.FK_PatientProblem_RefProblem", "PatientProblem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refExamObservation_refProblem", "refExamObservation")]
        public EntityCollection<refExamObservation> refExamObservation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refExamObservation>("SureHisModel.FK_refExamObservation_refProblem", "refExamObservation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refExamObservation>("SureHisModel.FK_refExamObservation_refProblem", "refExamObservation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SymptomIndicator_refProblem", "SymptomIndicator")]
        public EntityCollection<SymptomIndicator> SymptomIndicator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SymptomIndicator>("SureHisModel.FK_SymptomIndicator_refProblem", "SymptomIndicator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SymptomIndicator>("SureHisModel.FK_SymptomIndicator_refProblem", "SymptomIndicator", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refProviderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refProviderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refProviderType object.
        /// </summary>
        /// <param name="hCPrvProviderTypeID">Initial value of the HCPrvProviderTypeID property.</param>
        /// <param name="hCPrvProviderTypeName">Initial value of the HCPrvProviderTypeName property.</param>
        public static refProviderType CreaterefProviderType(global::System.Int64 hCPrvProviderTypeID, global::System.String hCPrvProviderTypeName)
        {
            refProviderType refProviderType = new refProviderType();
            refProviderType.HCPrvProviderTypeID = hCPrvProviderTypeID;
            refProviderType.HCPrvProviderTypeName = hCPrvProviderTypeName;
            return refProviderType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HCPrvProviderTypeID
        {
            get
            {
                return _HCPrvProviderTypeID;
            }
            set
            {
                if (_HCPrvProviderTypeID != value)
                {
                    OnHCPrvProviderTypeIDChanging(value);
                    ReportPropertyChanging("HCPrvProviderTypeID");
                    _HCPrvProviderTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HCPrvProviderTypeID");
                    OnHCPrvProviderTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _HCPrvProviderTypeID;
        partial void OnHCPrvProviderTypeIDChanging(global::System.Int64 value);
        partial void OnHCPrvProviderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PPrvTypeID
        {
            get
            {
                return _PPrvTypeID;
            }
            set
            {
                OnPPrvTypeIDChanging(value);
                ReportPropertyChanging("PPrvTypeID");
                _PPrvTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PPrvTypeID");
                OnPPrvTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PPrvTypeID;
        partial void OnPPrvTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnPPrvTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PPrvTypeCode
        {
            get
            {
                return _PPrvTypeCode;
            }
            set
            {
                OnPPrvTypeCodeChanging(value);
                ReportPropertyChanging("PPrvTypeCode");
                _PPrvTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PPrvTypeCode");
                OnPPrvTypeCodeChanged();
            }
        }
        private global::System.String _PPrvTypeCode;
        partial void OnPPrvTypeCodeChanging(global::System.String value);
        partial void OnPPrvTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HCPrvProviderTypeCode
        {
            get
            {
                return _HCPrvProviderTypeCode;
            }
            set
            {
                OnHCPrvProviderTypeCodeChanging(value);
                ReportPropertyChanging("HCPrvProviderTypeCode");
                _HCPrvProviderTypeCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HCPrvProviderTypeCode");
                OnHCPrvProviderTypeCodeChanged();
            }
        }
        private global::System.String _HCPrvProviderTypeCode;
        partial void OnHCPrvProviderTypeCodeChanging(global::System.String value);
        partial void OnHCPrvProviderTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HCPrvProviderTypeName
        {
            get
            {
                return _HCPrvProviderTypeName;
            }
            set
            {
                OnHCPrvProviderTypeNameChanging(value);
                ReportPropertyChanging("HCPrvProviderTypeName");
                _HCPrvProviderTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HCPrvProviderTypeName");
                OnHCPrvProviderTypeNameChanged();
            }
        }
        private global::System.String _HCPrvProviderTypeName;
        partial void OnHCPrvProviderTypeNameChanging(global::System.String value);
        partial void OnHCPrvProviderTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNonIndividual
        {
            get
            {
                return _IsNonIndividual;
            }
            set
            {
                OnIsNonIndividualChanging(value);
                ReportPropertyChanging("IsNonIndividual");
                _IsNonIndividual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNonIndividual");
                OnIsNonIndividualChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNonIndividual;
        partial void OnIsNonIndividualChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNonIndividualChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HCProvider_refProviderType", "HCProvider")]
        public EntityCollection<HCProvider> HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_refProviderType", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HCProvider>("SureHisModel.FK_HCProvider_refProviderType", "HCProvider", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refQualification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refQualification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refQualification object.
        /// </summary>
        /// <param name="qualID">Initial value of the QualID property.</param>
        /// <param name="qualTitle">Initial value of the QualTitle property.</param>
        public static refQualification CreaterefQualification(global::System.Int64 qualID, global::System.String qualTitle)
        {
            refQualification refQualification = new refQualification();
            refQualification.QualID = qualID;
            refQualification.QualTitle = qualTitle;
            return refQualification;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 QualID
        {
            get
            {
                return _QualID;
            }
            set
            {
                if (_QualID != value)
                {
                    OnQualIDChanging(value);
                    ReportPropertyChanging("QualID");
                    _QualID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("QualID");
                    OnQualIDChanged();
                }
            }
        }
        private global::System.Int64 _QualID;
        partial void OnQualIDChanging(global::System.Int64 value);
        partial void OnQualIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualCode
        {
            get
            {
                return _QualCode;
            }
            set
            {
                OnQualCodeChanging(value);
                ReportPropertyChanging("QualCode");
                _QualCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QualCode");
                OnQualCodeChanged();
            }
        }
        private global::System.String _QualCode;
        partial void OnQualCodeChanging(global::System.String value);
        partial void OnQualCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QualTitle
        {
            get
            {
                return _QualTitle;
            }
            set
            {
                OnQualTitleChanging(value);
                ReportPropertyChanging("QualTitle");
                _QualTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QualTitle");
                OnQualTitleChanged();
            }
        }
        private global::System.String _QualTitle;
        partial void OnQualTitleChanging(global::System.String value);
        partial void OnQualTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNQualTitle
        {
            get
            {
                return _VNQualTitle;
            }
            set
            {
                OnVNQualTitleChanging(value);
                ReportPropertyChanging("VNQualTitle");
                _VNQualTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNQualTitle");
                OnVNQualTitleChanged();
            }
        }
        private global::System.String _VNQualTitle;
        partial void OnVNQualTitleChanging(global::System.String value);
        partial void OnVNQualTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String QualDesc
        {
            get
            {
                return _QualDesc;
            }
            set
            {
                OnQualDescChanging(value);
                ReportPropertyChanging("QualDesc");
                _QualDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("QualDesc");
                OnQualDescChanged();
            }
        }
        private global::System.String _QualDesc;
        partial void OnQualDescChanging(global::System.String value);
        partial void OnQualDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdvancedSpecialist_refQualification", "AdvancedSpecialist")]
        public EntityCollection<AdvancedSpecialist> AdvancedSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdvancedSpecialist>("SureHisModel.FK_AdvancedSpecialist_refQualification", "AdvancedSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdvancedSpecialist>("SureHisModel.FK_AdvancedSpecialist_refQualification", "AdvancedSpecialist", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refReligion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refReligion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refReligion object.
        /// </summary>
        /// <param name="ptReligionID">Initial value of the PtReligionID property.</param>
        /// <param name="ptReligionCode">Initial value of the PtReligionCode property.</param>
        /// <param name="ptReligionName">Initial value of the PtReligionName property.</param>
        public static refReligion CreaterefReligion(global::System.Int64 ptReligionID, global::System.String ptReligionCode, global::System.String ptReligionName)
        {
            refReligion refReligion = new refReligion();
            refReligion.PtReligionID = ptReligionID;
            refReligion.PtReligionCode = ptReligionCode;
            refReligion.PtReligionName = ptReligionName;
            return refReligion;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtReligionID
        {
            get
            {
                return _PtReligionID;
            }
            set
            {
                if (_PtReligionID != value)
                {
                    OnPtReligionIDChanging(value);
                    ReportPropertyChanging("PtReligionID");
                    _PtReligionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtReligionID");
                    OnPtReligionIDChanged();
                }
            }
        }
        private global::System.Int64 _PtReligionID;
        partial void OnPtReligionIDChanging(global::System.Int64 value);
        partial void OnPtReligionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtReligionCode
        {
            get
            {
                return _PtReligionCode;
            }
            set
            {
                OnPtReligionCodeChanging(value);
                ReportPropertyChanging("PtReligionCode");
                _PtReligionCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtReligionCode");
                OnPtReligionCodeChanged();
            }
        }
        private global::System.String _PtReligionCode;
        partial void OnPtReligionCodeChanging(global::System.String value);
        partial void OnPtReligionCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PtReligionName
        {
            get
            {
                return _PtReligionName;
            }
            set
            {
                OnPtReligionNameChanging(value);
                ReportPropertyChanging("PtReligionName");
                _PtReligionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PtReligionName");
                OnPtReligionNameChanged();
            }
        }
        private global::System.String _PtReligionName;
        partial void OnPtReligionNameChanging(global::System.String value);
        partial void OnPtReligionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNPtReligionName
        {
            get
            {
                return _VNPtReligionName;
            }
            set
            {
                OnVNPtReligionNameChanging(value);
                ReportPropertyChanging("VNPtReligionName");
                _VNPtReligionName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNPtReligionName");
                OnVNPtReligionNameChanged();
            }
        }
        private global::System.String _VNPtReligionName;
        partial void OnVNPtReligionNameChanging(global::System.String value);
        partial void OnVNPtReligionNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refReligion", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refReligion", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refReligion", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refRole object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleCode">Initial value of the RoleCode property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDescription">Initial value of the RoleDescription property.</param>
        /// <param name="isInternalRole">Initial value of the IsInternalRole property.</param>
        /// <param name="isBuiltIn">Initial value of the isBuiltIn property.</param>
        public static refRole CreaterefRole(global::System.Int64 roleID, global::System.String roleCode, global::System.String roleName, global::System.String roleDescription, global::System.Boolean isInternalRole, global::System.Boolean isBuiltIn)
        {
            refRole refRole = new refRole();
            refRole.RoleID = roleID;
            refRole.RoleCode = roleCode;
            refRole.RoleName = roleName;
            refRole.RoleDescription = roleDescription;
            refRole.IsInternalRole = isInternalRole;
            refRole.isBuiltIn = isBuiltIn;
            return refRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int64 _RoleID;
        partial void OnRoleIDChanging(global::System.Int64 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleCode
        {
            get
            {
                return _RoleCode;
            }
            set
            {
                OnRoleCodeChanging(value);
                ReportPropertyChanging("RoleCode");
                _RoleCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleCode");
                OnRoleCodeChanged();
            }
        }
        private global::System.String _RoleCode;
        partial void OnRoleCodeChanging(global::System.String value);
        partial void OnRoleCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsInternalRole
        {
            get
            {
                return _IsInternalRole;
            }
            set
            {
                OnIsInternalRoleChanging(value);
                ReportPropertyChanging("IsInternalRole");
                _IsInternalRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsInternalRole");
                OnIsInternalRoleChanged();
            }
        }
        private global::System.Boolean _IsInternalRole;
        partial void OnIsInternalRoleChanging(global::System.Boolean value);
        partial void OnIsInternalRoleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean isBuiltIn
        {
            get
            {
                return _isBuiltIn;
            }
            set
            {
                OnisBuiltInChanging(value);
                ReportPropertyChanging("isBuiltIn");
                _isBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isBuiltIn");
                OnisBuiltInChanged();
            }
        }
        private global::System.Boolean _isBuiltIn;
        partial void OnisBuiltInChanging(global::System.Boolean value);
        partial void OnisBuiltInChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_refRole", "OpSkedDistibution")]
        public EntityCollection<OpSkedDistibution> OpSkedDistibution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_refRole", "OpSkedDistibution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_refRole", "OpSkedDistibution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PersonRole_refRole", "PersonRole")]
        public EntityCollection<PersonRole> PersonRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonRole>("SureHisModel.FK_PersonRole_refRole", "PersonRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonRole>("SureHisModel.FK_PersonRole_refRole", "PersonRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Realms_refRole", "Realms")]
        public EntityCollection<Realms> Realms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Realms>("SureHisModel.FK_Realms_refRole", "Realms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Realms>("SureHisModel.FK_Realms_refRole", "Realms", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refShelfDrugLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refShelfDrugLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refShelfDrugLocation object.
        /// </summary>
        /// <param name="sdlID">Initial value of the SdlID property.</param>
        /// <param name="sdlName">Initial value of the SdlName property.</param>
        /// <param name="length">Initial value of the Length property.</param>
        /// <param name="width">Initial value of the Width property.</param>
        /// <param name="height">Initial value of the Height property.</param>
        public static refShelfDrugLocation CreaterefShelfDrugLocation(global::System.Int64 sdlID, global::System.String sdlName, global::System.Decimal length, global::System.Decimal width, global::System.Decimal height)
        {
            refShelfDrugLocation refShelfDrugLocation = new refShelfDrugLocation();
            refShelfDrugLocation.SdlID = sdlID;
            refShelfDrugLocation.SdlName = sdlName;
            refShelfDrugLocation.Length = length;
            refShelfDrugLocation.Width = width;
            refShelfDrugLocation.Height = height;
            return refShelfDrugLocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SdlID
        {
            get
            {
                return _SdlID;
            }
            set
            {
                if (_SdlID != value)
                {
                    OnSdlIDChanging(value);
                    ReportPropertyChanging("SdlID");
                    _SdlID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SdlID");
                    OnSdlIDChanged();
                }
            }
        }
        private global::System.Int64 _SdlID;
        partial void OnSdlIDChanging(global::System.Int64 value);
        partial void OnSdlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SdlName
        {
            get
            {
                return _SdlName;
            }
            set
            {
                OnSdlNameChanging(value);
                ReportPropertyChanging("SdlName");
                _SdlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SdlName");
                OnSdlNameChanged();
            }
        }
        private global::System.String _SdlName;
        partial void OnSdlNameChanging(global::System.String value);
        partial void OnSdlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SdlDescription
        {
            get
            {
                return _SdlDescription;
            }
            set
            {
                OnSdlDescriptionChanging(value);
                ReportPropertyChanging("SdlDescription");
                _SdlDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SdlDescription");
                OnSdlDescriptionChanged();
            }
        }
        private global::System.String _SdlDescription;
        partial void OnSdlDescriptionChanging(global::System.String value);
        partial void OnSdlDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private global::System.Decimal _Length;
        partial void OnLengthChanging(global::System.Decimal value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Width
        {
            get
            {
                return _Width;
            }
            set
            {
                OnWidthChanging(value);
                ReportPropertyChanging("Width");
                _Width = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Width");
                OnWidthChanged();
            }
        }
        private global::System.Decimal _Width;
        partial void OnWidthChanging(global::System.Decimal value);
        partial void OnWidthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Height
        {
            get
            {
                return _Height;
            }
            set
            {
                OnHeightChanging(value);
                ReportPropertyChanging("Height");
                _Height = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Height");
                OnHeightChanged();
            }
        }
        private global::System.Decimal _Height;
        partial void OnHeightChanging(global::System.Decimal value);
        partial void OnHeightChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_refShelfDrugLocation", "InOutwardDrug")]
        public EntityCollection<InOutwardDrug> InOutwardDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "InOutwardDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_refShelfDrugLocation", "InOutwardDrug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refShift")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refShift : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refShift object.
        /// </summary>
        /// <param name="sID">Initial value of the SID property.</param>
        /// <param name="shiftCode">Initial value of the ShiftCode property.</param>
        /// <param name="shiftName">Initial value of the ShiftName property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        /// <param name="shiftIdx">Initial value of the ShiftIdx property.</param>
        public static refShift CreaterefShift(global::System.Int64 sID, global::System.String shiftCode, global::System.String shiftName, global::System.TimeSpan startTime, global::System.TimeSpan endTime, global::System.Byte shiftIdx)
        {
            refShift refShift = new refShift();
            refShift.SID = sID;
            refShift.ShiftCode = shiftCode;
            refShift.ShiftName = shiftName;
            refShift.StartTime = startTime;
            refShift.EndTime = endTime;
            refShift.ShiftIdx = shiftIdx;
            return refShift;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                if (_SID != value)
                {
                    OnSIDChanging(value);
                    ReportPropertyChanging("SID");
                    _SID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SID");
                    OnSIDChanged();
                }
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShiftCode
        {
            get
            {
                return _ShiftCode;
            }
            set
            {
                OnShiftCodeChanging(value);
                ReportPropertyChanging("ShiftCode");
                _ShiftCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShiftCode");
                OnShiftCodeChanged();
            }
        }
        private global::System.String _ShiftCode;
        partial void OnShiftCodeChanging(global::System.String value);
        partial void OnShiftCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ShiftName
        {
            get
            {
                return _ShiftName;
            }
            set
            {
                OnShiftNameChanging(value);
                ReportPropertyChanging("ShiftName");
                _ShiftName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ShiftName");
                OnShiftNameChanged();
            }
        }
        private global::System.String _ShiftName;
        partial void OnShiftNameChanging(global::System.String value);
        partial void OnShiftNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShiftDesc
        {
            get
            {
                return _ShiftDesc;
            }
            set
            {
                OnShiftDescChanging(value);
                ReportPropertyChanging("ShiftDesc");
                _ShiftDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShiftDesc");
                OnShiftDescChanged();
            }
        }
        private global::System.String _ShiftDesc;
        partial void OnShiftDescChanging(global::System.String value);
        partial void OnShiftDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AMPM
        {
            get
            {
                return _AMPM;
            }
            set
            {
                OnAMPMChanging(value);
                ReportPropertyChanging("AMPM");
                _AMPM = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AMPM");
                OnAMPMChanged();
            }
        }
        private global::System.String _AMPM;
        partial void OnAMPMChanging(global::System.String value);
        partial void OnAMPMChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isNotEffect
        {
            get
            {
                return _isNotEffect;
            }
            set
            {
                OnisNotEffectChanging(value);
                ReportPropertyChanging("isNotEffect");
                _isNotEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isNotEffect");
                OnisNotEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _isNotEffect;
        partial void OnisNotEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnisNotEffectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte ShiftIdx
        {
            get
            {
                return _ShiftIdx;
            }
            set
            {
                OnShiftIdxChanging(value);
                ReportPropertyChanging("ShiftIdx");
                _ShiftIdx = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShiftIdx");
                OnShiftIdxChanged();
            }
        }
        private global::System.Byte _ShiftIdx;
        partial void OnShiftIdxChanging(global::System.Byte value);
        partial void OnShiftIdxChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Operations_refShift", "Operations")]
        public EntityCollection<Operations> Operations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Operations>("SureHisModel.FK_Operations_refShift", "Operations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Operations>("SureHisModel.FK_Operations_refShift", "Operations", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refTimeFrame_refShift", "refTimeFrame")]
        public EntityCollection<refTimeFrame> refTimeFrame
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refTimeFrame>("SureHisModel.FK_refTimeFrame_refShift", "refTimeFrame");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refTimeFrame>("SureHisModel.FK_refTimeFrame_refShift", "refTimeFrame", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_refShift", "WorkingSchedule")]
        public EntityCollection<WorkingSchedule> WorkingSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_refShift", "WorkingSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WorkingSchedule>("SureHisModel.FK_WorkingSchedule_refShift", "WorkingSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refSIPrefix")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refSIPrefix : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refSIPrefix object.
        /// </summary>
        /// <param name="prefID">Initial value of the PrefID property.</param>
        /// <param name="prefix">Initial value of the Prefix property.</param>
        /// <param name="symbol">Initial value of the Symbol property.</param>
        /// <param name="factor">Initial value of the Factor property.</param>
        public static refSIPrefix CreaterefSIPrefix(global::System.Byte prefID, global::System.String prefix, global::System.String symbol, global::System.Double factor)
        {
            refSIPrefix refSIPrefix = new refSIPrefix();
            refSIPrefix.PrefID = prefID;
            refSIPrefix.Prefix = prefix;
            refSIPrefix.Symbol = symbol;
            refSIPrefix.Factor = factor;
            return refSIPrefix;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte PrefID
        {
            get
            {
                return _PrefID;
            }
            set
            {
                if (_PrefID != value)
                {
                    OnPrefIDChanging(value);
                    ReportPropertyChanging("PrefID");
                    _PrefID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PrefID");
                    OnPrefIDChanged();
                }
            }
        }
        private global::System.Byte _PrefID;
        partial void OnPrefIDChanging(global::System.Byte value);
        partial void OnPrefIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prefix
        {
            get
            {
                return _Prefix;
            }
            set
            {
                OnPrefixChanging(value);
                ReportPropertyChanging("Prefix");
                _Prefix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prefix");
                OnPrefixChanged();
            }
        }
        private global::System.String _Prefix;
        partial void OnPrefixChanging(global::System.String value);
        partial void OnPrefixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Factor
        {
            get
            {
                return _Factor;
            }
            set
            {
                OnFactorChanging(value);
                ReportPropertyChanging("Factor");
                _Factor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Factor");
                OnFactorChanged();
            }
        }
        private global::System.Double _Factor;
        partial void OnFactorChanging(global::System.Double value);
        partial void OnFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refUnitOfMeasure_SIPrefix", "refUnitOfMeasure")]
        public EntityCollection<refUnitOfMeasure> refUnitOfMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refUnitOfMeasure>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refUnitOfMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refUnitOfMeasure>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refUnitOfMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refSocialHisSeverity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refSocialHisSeverity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refSocialHisSeverity object.
        /// </summary>
        /// <param name="sHSeverityID">Initial value of the SHSeverityID property.</param>
        /// <param name="mHIndexID">Initial value of the MHIndexID property.</param>
        /// <param name="v_SHSeverity">Initial value of the V_SHSeverity property.</param>
        public static refSocialHisSeverity CreaterefSocialHisSeverity(global::System.Int64 sHSeverityID, global::System.Int64 mHIndexID, global::System.Int64 v_SHSeverity)
        {
            refSocialHisSeverity refSocialHisSeverity = new refSocialHisSeverity();
            refSocialHisSeverity.SHSeverityID = sHSeverityID;
            refSocialHisSeverity.MHIndexID = mHIndexID;
            refSocialHisSeverity.V_SHSeverity = v_SHSeverity;
            return refSocialHisSeverity;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SHSeverityID
        {
            get
            {
                return _SHSeverityID;
            }
            set
            {
                if (_SHSeverityID != value)
                {
                    OnSHSeverityIDChanging(value);
                    ReportPropertyChanging("SHSeverityID");
                    _SHSeverityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHSeverityID");
                    OnSHSeverityIDChanged();
                }
            }
        }
        private global::System.Int64 _SHSeverityID;
        partial void OnSHSeverityIDChanging(global::System.Int64 value);
        partial void OnSHSeverityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MHIndexID
        {
            get
            {
                return _MHIndexID;
            }
            set
            {
                OnMHIndexIDChanging(value);
                ReportPropertyChanging("MHIndexID");
                _MHIndexID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MHIndexID");
                OnMHIndexIDChanged();
            }
        }
        private global::System.Int64 _MHIndexID;
        partial void OnMHIndexIDChanging(global::System.Int64 value);
        partial void OnMHIndexIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_SHSeverity
        {
            get
            {
                return _V_SHSeverity;
            }
            set
            {
                OnV_SHSeverityChanging(value);
                ReportPropertyChanging("V_SHSeverity");
                _V_SHSeverity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_SHSeverity");
                OnV_SHSeverityChanged();
            }
        }
        private global::System.Int64 _V_SHSeverity;
        partial void OnV_SHSeverityChanging(global::System.Int64 value);
        partial void OnV_SHSeverityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex")]
        public refMedHisIndex refMedHisIndex
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedHisIndex> refMedHisIndexReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedHisIndex>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedHisIndex>("SureHisModel.FK_refSocialHisSeverity_refMedHisIndex", "refMedHisIndex", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refSpecimenType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refSpecimenType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refSpecimenType object.
        /// </summary>
        /// <param name="specTypeID">Initial value of the SpecTypeID property.</param>
        /// <param name="specTypeCode">Initial value of the SpecTypeCode property.</param>
        /// <param name="specTypeName">Initial value of the SpecTypeName property.</param>
        public static refSpecimenType CreaterefSpecimenType(global::System.Int64 specTypeID, global::System.String specTypeCode, global::System.String specTypeName)
        {
            refSpecimenType refSpecimenType = new refSpecimenType();
            refSpecimenType.SpecTypeID = specTypeID;
            refSpecimenType.SpecTypeCode = specTypeCode;
            refSpecimenType.SpecTypeName = specTypeName;
            return refSpecimenType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SpecTypeID
        {
            get
            {
                return _SpecTypeID;
            }
            set
            {
                if (_SpecTypeID != value)
                {
                    OnSpecTypeIDChanging(value);
                    ReportPropertyChanging("SpecTypeID");
                    _SpecTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecTypeID");
                    OnSpecTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _SpecTypeID;
        partial void OnSpecTypeIDChanging(global::System.Int64 value);
        partial void OnSpecTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecTypeCode
        {
            get
            {
                return _SpecTypeCode;
            }
            set
            {
                OnSpecTypeCodeChanging(value);
                ReportPropertyChanging("SpecTypeCode");
                _SpecTypeCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecTypeCode");
                OnSpecTypeCodeChanged();
            }
        }
        private global::System.String _SpecTypeCode;
        partial void OnSpecTypeCodeChanging(global::System.String value);
        partial void OnSpecTypeCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SpecTypeName
        {
            get
            {
                return _SpecTypeName;
            }
            set
            {
                OnSpecTypeNameChanging(value);
                ReportPropertyChanging("SpecTypeName");
                _SpecTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SpecTypeName");
                OnSpecTypeNameChanged();
            }
        }
        private global::System.String _SpecTypeName;
        partial void OnSpecTypeNameChanging(global::System.String value);
        partial void OnSpecTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecTypeDesc
        {
            get
            {
                return _SpecTypeDesc;
            }
            set
            {
                OnSpecTypeDescChanging(value);
                ReportPropertyChanging("SpecTypeDesc");
                _SpecTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecTypeDesc");
                OnSpecTypeDescChanged();
            }
        }
        private global::System.String _SpecTypeDesc;
        partial void OnSpecTypeDescChanging(global::System.String value);
        partial void OnSpecTypeDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalTest_refSpecimenType", "MedicalTestProcedure")]
        public EntityCollection<MedicalTestProcedure> MedicalTestProcedure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalTestProcedure>("SureHisModel.FK_MedicalTest_refSpecimenType", "MedicalTestProcedure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalTestProcedure>("SureHisModel.FK_MedicalTest_refSpecimenType", "MedicalTestProcedure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_refSpecimenType", "PatientSpecimen")]
        public EntityCollection<PatientSpecimen> PatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "PatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_refSpecimenType", "PatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refStoreHouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refStoreHouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refStoreHouse object.
        /// </summary>
        /// <param name="storeHouseID">Initial value of the StoreHouseID property.</param>
        /// <param name="storeHouseName">Initial value of the StoreHouseName property.</param>
        /// <param name="isMain">Initial value of the IsMain property.</param>
        /// <param name="stop">Initial value of the Stop property.</param>
        public static refStoreHouse CreaterefStoreHouse(global::System.Int64 storeHouseID, global::System.String storeHouseName, global::System.Boolean isMain, global::System.Boolean stop)
        {
            refStoreHouse refStoreHouse = new refStoreHouse();
            refStoreHouse.StoreHouseID = storeHouseID;
            refStoreHouse.StoreHouseName = storeHouseName;
            refStoreHouse.IsMain = isMain;
            refStoreHouse.Stop = stop;
            return refStoreHouse;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StoreHouseID
        {
            get
            {
                return _StoreHouseID;
            }
            set
            {
                if (_StoreHouseID != value)
                {
                    OnStoreHouseIDChanging(value);
                    ReportPropertyChanging("StoreHouseID");
                    _StoreHouseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StoreHouseID");
                    OnStoreHouseIDChanged();
                }
            }
        }
        private global::System.Int64 _StoreHouseID;
        partial void OnStoreHouseIDChanging(global::System.Int64 value);
        partial void OnStoreHouseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StoreHouseName
        {
            get
            {
                return _StoreHouseName;
            }
            set
            {
                OnStoreHouseNameChanging(value);
                ReportPropertyChanging("StoreHouseName");
                _StoreHouseName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StoreHouseName");
                OnStoreHouseNameChanged();
            }
        }
        private global::System.String _StoreHouseName;
        partial void OnStoreHouseNameChanging(global::System.String value);
        partial void OnStoreHouseNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMain
        {
            get
            {
                return _IsMain;
            }
            set
            {
                OnIsMainChanging(value);
                ReportPropertyChanging("IsMain");
                _IsMain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMain");
                OnIsMainChanged();
            }
        }
        private global::System.Boolean _IsMain;
        partial void OnIsMainChanging(global::System.Boolean value);
        partial void OnIsMainChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Stop
        {
            get
            {
                return _Stop;
            }
            set
            {
                OnStopChanging(value);
                ReportPropertyChanging("Stop");
                _Stop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Stop");
                OnStopChanged();
            }
        }
        private global::System.Boolean _Stop;
        partial void OnStopChanging(global::System.Boolean value);
        partial void OnStopChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InOutwardDrug_refStoreHouse", "InOutwardDrug")]
        public EntityCollection<InOutwardDrug> InOutwardDrug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "InOutwardDrug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InOutwardDrug>("SureHisModel.FK_InOutwardDrug_refStoreHouse", "InOutwardDrug", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refTimeFrame")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refTimeFrame : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refTimeFrame object.
        /// </summary>
        /// <param name="tFID">Initial value of the TFID property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        /// <param name="startTime">Initial value of the StartTime property.</param>
        /// <param name="endTime">Initial value of the EndTime property.</param>
        public static refTimeFrame CreaterefTimeFrame(global::System.Int16 tFID, global::System.Int64 sID, global::System.TimeSpan startTime, global::System.TimeSpan endTime)
        {
            refTimeFrame refTimeFrame = new refTimeFrame();
            refTimeFrame.TFID = tFID;
            refTimeFrame.SID = sID;
            refTimeFrame.StartTime = startTime;
            refTimeFrame.EndTime = endTime;
            return refTimeFrame;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 TFID
        {
            get
            {
                return _TFID;
            }
            set
            {
                if (_TFID != value)
                {
                    OnTFIDChanging(value);
                    ReportPropertyChanging("TFID");
                    _TFID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TFID");
                    OnTFIDChanged();
                }
            }
        }
        private global::System.Int16 _TFID;
        partial void OnTFIDChanging(global::System.Int16 value);
        partial void OnTFIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan StartTime
        {
            get
            {
                return _StartTime;
            }
            set
            {
                OnStartTimeChanging(value);
                ReportPropertyChanging("StartTime");
                _StartTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartTime");
                OnStartTimeChanged();
            }
        }
        private global::System.TimeSpan _StartTime;
        partial void OnStartTimeChanging(global::System.TimeSpan value);
        partial void OnStartTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan EndTime
        {
            get
            {
                return _EndTime;
            }
            set
            {
                OnEndTimeChanging(value);
                ReportPropertyChanging("EndTime");
                _EndTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndTime");
                OnEndTimeChanged();
            }
        }
        private global::System.TimeSpan _EndTime;
        partial void OnEndTimeChanging(global::System.TimeSpan value);
        partial void OnEndTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_Purpose
        {
            get
            {
                return _V_Purpose;
            }
            set
            {
                OnV_PurposeChanging(value);
                ReportPropertyChanging("V_Purpose");
                _V_Purpose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_Purpose");
                OnV_PurposeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_Purpose;
        partial void OnV_PurposeChanging(Nullable<global::System.Int64> value);
        partial void OnV_PurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EffectivelyDate
        {
            get
            {
                return _EffectivelyDate;
            }
            set
            {
                OnEffectivelyDateChanging(value);
                ReportPropertyChanging("EffectivelyDate");
                _EffectivelyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EffectivelyDate");
                OnEffectivelyDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EffectivelyDate;
        partial void OnEffectivelyDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEffectivelyDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpiredDate
        {
            get
            {
                return _ExpiredDate;
            }
            set
            {
                OnExpiredDateChanging(value);
                ReportPropertyChanging("ExpiredDate");
                _ExpiredDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiredDate");
                OnExpiredDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpiredDate;
        partial void OnExpiredDateChanging(Nullable<global::System.DateTime> value);
        partial void OnExpiredDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_refTimeFrame", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_refTimeFrame", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_refTimeFrame", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BusySchedule_refTimeFrame", "BusySchedule")]
        public EntityCollection<BusySchedule> BusySchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BusySchedule>("SureHisModel.FK_BusySchedule_refTimeFrame", "BusySchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BusySchedule>("SureHisModel.FK_BusySchedule_refTimeFrame", "BusySchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refTimeFrame_refShift", "refShift")]
        public refShift refShift
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_refTimeFrame_refShift", "refShift").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_refTimeFrame_refShift", "refShift").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refShift> refShiftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_refTimeFrame_refShift", "refShift");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refShift>("SureHisModel.FK_refTimeFrame_refShift", "refShift", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refTransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refTransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refTransactionType object.
        /// </summary>
        /// <param name="transTypeID">Initial value of the TransTypeID property.</param>
        /// <param name="transTypeName">Initial value of the TransTypeName property.</param>
        public static refTransactionType CreaterefTransactionType(global::System.Int64 transTypeID, global::System.String transTypeName)
        {
            refTransactionType refTransactionType = new refTransactionType();
            refTransactionType.TransTypeID = transTypeID;
            refTransactionType.TransTypeName = transTypeName;
            return refTransactionType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TransTypeID
        {
            get
            {
                return _TransTypeID;
            }
            set
            {
                if (_TransTypeID != value)
                {
                    OnTransTypeIDChanging(value);
                    ReportPropertyChanging("TransTypeID");
                    _TransTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransTypeID");
                    OnTransTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _TransTypeID;
        partial void OnTransTypeIDChanging(global::System.Int64 value);
        partial void OnTransTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransTypeName
        {
            get
            {
                return _TransTypeName;
            }
            set
            {
                OnTransTypeNameChanging(value);
                ReportPropertyChanging("TransTypeName");
                _TransTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransTypeName");
                OnTransTypeNameChanged();
            }
        }
        private global::System.String _TransTypeName;
        partial void OnTransTypeNameChanging(global::System.String value);
        partial void OnTransTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TransTypeDesc
        {
            get
            {
                return _TransTypeDesc;
            }
            set
            {
                OnTransTypeDescChanging(value);
                ReportPropertyChanging("TransTypeDesc");
                _TransTypeDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TransTypeDesc");
                OnTransTypeDescChanged();
            }
        }
        private global::System.String _TransTypeDesc;
        partial void OnTransTypeDescChanging(global::System.String value);
        partial void OnTransTypeDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientTransaction_refTransactionType", "PatientTransaction")]
        public EntityCollection<PatientTransaction> PatientTransaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_refTransactionType", "PatientTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientTransaction>("SureHisModel.FK_PatientTransaction_refTransactionType", "PatientTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refTypeAbsent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refTypeAbsent : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refTypeAbsent object.
        /// </summary>
        /// <param name="tAbsID">Initial value of the TAbsID property.</param>
        /// <param name="tAbsCode">Initial value of the TAbsCode property.</param>
        public static refTypeAbsent CreaterefTypeAbsent(global::System.Byte tAbsID, global::System.String tAbsCode)
        {
            refTypeAbsent refTypeAbsent = new refTypeAbsent();
            refTypeAbsent.TAbsID = tAbsID;
            refTypeAbsent.TAbsCode = tAbsCode;
            return refTypeAbsent;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TAbsID
        {
            get
            {
                return _TAbsID;
            }
            set
            {
                if (_TAbsID != value)
                {
                    OnTAbsIDChanging(value);
                    ReportPropertyChanging("TAbsID");
                    _TAbsID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TAbsID");
                    OnTAbsIDChanged();
                }
            }
        }
        private global::System.Byte _TAbsID;
        partial void OnTAbsIDChanging(global::System.Byte value);
        partial void OnTAbsIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TAbsCode
        {
            get
            {
                return _TAbsCode;
            }
            set
            {
                OnTAbsCodeChanging(value);
                ReportPropertyChanging("TAbsCode");
                _TAbsCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TAbsCode");
                OnTAbsCodeChanged();
            }
        }
        private global::System.String _TAbsCode;
        partial void OnTAbsCodeChanging(global::System.String value);
        partial void OnTAbsCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TAbsDesc
        {
            get
            {
                return _TAbsDesc;
            }
            set
            {
                OnTAbsDescChanging(value);
                ReportPropertyChanging("TAbsDesc");
                _TAbsDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TAbsDesc");
                OnTAbsDescChanged();
            }
        }
        private global::System.String _TAbsDesc;
        partial void OnTAbsDescChanging(global::System.String value);
        partial void OnTAbsDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsNotEffect
        {
            get
            {
                return _IsNotEffect;
            }
            set
            {
                OnIsNotEffectChanging(value);
                ReportPropertyChanging("IsNotEffect");
                _IsNotEffect = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsNotEffect");
                OnIsNotEffectChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsNotEffect;
        partial void OnIsNotEffectChanging(Nullable<global::System.Boolean> value);
        partial void OnIsNotEffectChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeAnnualLeave_refTypeAbsent", "EmployeeAnnualLeave")]
        public EntityCollection<EmployeeAnnualLeave> EmployeeAnnualLeave
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeAnnualLeave>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "EmployeeAnnualLeave");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeAnnualLeave>("SureHisModel.FK_EmployeeAnnualLeave_refTypeAbsent", "EmployeeAnnualLeave", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmployeeLeaveTaken_refTypeAbsent", "EmployeeLeaveTaken")]
        public EntityCollection<EmployeeLeaveTaken> EmployeeLeaveTaken
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeLeaveTaken>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "EmployeeLeaveTaken");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeLeaveTaken>("SureHisModel.FK_EmployeeLeaveTaken_refTypeAbsent", "EmployeeLeaveTaken", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpWorkSchedule_refTypeAbsent", "EmpWorkSchedule")]
        public EntityCollection<EmpWorkSchedule> EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpWorkSchedule>("SureHisModel.FK_EmpWorkSchedule_refTypeAbsent", "EmpWorkSchedule", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refUnitOfMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refUnitOfMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refUnitOfMeasure object.
        /// </summary>
        /// <param name="uOMNo">Initial value of the UOMNo property.</param>
        /// <param name="uOMCode">Initial value of the UOMCode property.</param>
        /// <param name="uOMName">Initial value of the UOMName property.</param>
        /// <param name="uOMSymbol">Initial value of the UOMSymbol property.</param>
        /// <param name="isBaseUnit">Initial value of the IsBaseUnit property.</param>
        public static refUnitOfMeasure CreaterefUnitOfMeasure(global::System.Int64 uOMNo, global::System.String uOMCode, global::System.String uOMName, global::System.String uOMSymbol, global::System.Boolean isBaseUnit)
        {
            refUnitOfMeasure refUnitOfMeasure = new refUnitOfMeasure();
            refUnitOfMeasure.UOMNo = uOMNo;
            refUnitOfMeasure.UOMCode = uOMCode;
            refUnitOfMeasure.UOMName = uOMName;
            refUnitOfMeasure.UOMSymbol = uOMSymbol;
            refUnitOfMeasure.IsBaseUnit = isBaseUnit;
            return refUnitOfMeasure;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UOMNo
        {
            get
            {
                return _UOMNo;
            }
            set
            {
                if (_UOMNo != value)
                {
                    OnUOMNoChanging(value);
                    ReportPropertyChanging("UOMNo");
                    _UOMNo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UOMNo");
                    OnUOMNoChanged();
                }
            }
        }
        private global::System.Int64 _UOMNo;
        partial void OnUOMNoChanging(global::System.Int64 value);
        partial void OnUOMNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UOMCode
        {
            get
            {
                return _UOMCode;
            }
            set
            {
                OnUOMCodeChanging(value);
                ReportPropertyChanging("UOMCode");
                _UOMCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UOMCode");
                OnUOMCodeChanged();
            }
        }
        private global::System.String _UOMCode;
        partial void OnUOMCodeChanging(global::System.String value);
        partial void OnUOMCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UOMName
        {
            get
            {
                return _UOMName;
            }
            set
            {
                OnUOMNameChanging(value);
                ReportPropertyChanging("UOMName");
                _UOMName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UOMName");
                OnUOMNameChanged();
            }
        }
        private global::System.String _UOMName;
        partial void OnUOMNameChanging(global::System.String value);
        partial void OnUOMNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UOMSymbol
        {
            get
            {
                return _UOMSymbol;
            }
            set
            {
                OnUOMSymbolChanging(value);
                ReportPropertyChanging("UOMSymbol");
                _UOMSymbol = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UOMSymbol");
                OnUOMSymbolChanged();
            }
        }
        private global::System.String _UOMSymbol;
        partial void OnUOMSymbolChanging(global::System.String value);
        partial void OnUOMSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_UOMCategory
        {
            get
            {
                return _V_UOMCategory;
            }
            set
            {
                OnV_UOMCategoryChanging(value);
                ReportPropertyChanging("V_UOMCategory");
                _V_UOMCategory = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_UOMCategory");
                OnV_UOMCategoryChanged();
            }
        }
        private Nullable<global::System.Int64> _V_UOMCategory;
        partial void OnV_UOMCategoryChanging(Nullable<global::System.Int64> value);
        partial void OnV_UOMCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UOMDesc
        {
            get
            {
                return _UOMDesc;
            }
            set
            {
                OnUOMDescChanging(value);
                ReportPropertyChanging("UOMDesc");
                _UOMDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UOMDesc");
                OnUOMDescChanged();
            }
        }
        private global::System.String _UOMDesc;
        partial void OnUOMDescChanging(global::System.String value);
        partial void OnUOMDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBaseUnit
        {
            get
            {
                return _IsBaseUnit;
            }
            set
            {
                OnIsBaseUnitChanging(value);
                ReportPropertyChanging("IsBaseUnit");
                _IsBaseUnit = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBaseUnit");
                OnIsBaseUnitChanged();
            }
        }
        private global::System.Boolean _IsBaseUnit;
        partial void OnIsBaseUnitChanging(global::System.Boolean value);
        partial void OnIsBaseUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> MCLID
        {
            get
            {
                return _MCLID;
            }
            set
            {
                OnMCLIDChanging(value);
                ReportPropertyChanging("MCLID");
                _MCLID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MCLID");
                OnMCLIDChanged();
            }
        }
        private Nullable<global::System.Int64> _MCLID;
        partial void OnMCLIDChanging(Nullable<global::System.Int64> value);
        partial void OnMCLIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> PrefID
        {
            get
            {
                return _PrefID;
            }
            set
            {
                OnPrefIDChanging(value);
                ReportPropertyChanging("PrefID");
                _PrefID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrefID");
                OnPrefIDChanged();
            }
        }
        private Nullable<global::System.Byte> _PrefID;
        partial void OnPrefIDChanging(Nullable<global::System.Byte> value);
        partial void OnPrefIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure", "Drug")]
        public EntityCollection<Drug> Drug
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_02", "Drug")]
        public EntityCollection<Drug> Drug1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure_02", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Drug_refUnitOfMeasure_03", "Drug")]
        public EntityCollection<Drug> Drug2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "Drug");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Drug>("SureHisModel.FK_Drug_refUnitOfMeasure_03", "Drug", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DrugConfign_refUnitOfMeasure", "DrugConfign")]
        public EntityCollection<DrugConfign> DrugConfign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "DrugConfign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DrugConfign>("SureHisModel.FK_DrugConfign_refUnitOfMeasure", "DrugConfign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ParaClinicalExamType_refUnitOfMeasure", "MedLabTest")]
        public EntityCollection<MedLabTest> MedLabTest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "MedLabTest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabTest>("SureHisModel.FK_ParaClinicalExamType_refUnitOfMeasure", "MedLabTest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ConversionMS_refUnitOfMeasure", "MesrtConv")]
        public EntityCollection<MesrtConv> MesrtConv
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MesrtConv>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "MesrtConv");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MesrtConv>("SureHisModel.FK_ConversionMS_refUnitOfMeasure", "MesrtConv", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_refUnitOfMeasure", "PatientVitalSign")]
        public EntityCollection<PatientVitalSign> PatientVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "PatientVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_refUnitOfMeasure", "PatientVitalSign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement")]
        public refCLMeasurement refCLMeasurement
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCLMeasurement>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCLMeasurement>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refCLMeasurement> refCLMeasurementReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refCLMeasurement>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refCLMeasurement>("SureHisModel.FK_refUnitOfMeasure_refCLMeasurement", "refCLMeasurement", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refUnitOfMeasure", "refLimVitalSign")]
        public EntityCollection<refLimVitalSign> refLimVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refLimVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refUnitOfMeasure", "refLimVitalSign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refUnitOfMeasure_SIPrefix", "refSIPrefix")]
        public refSIPrefix refSIPrefix
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSIPrefix>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refSIPrefix").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSIPrefix>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refSIPrefix").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refSIPrefix> refSIPrefixReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refSIPrefix>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refSIPrefix");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refSIPrefix>("SureHisModel.FK_refUnitOfMeasure_SIPrefix", "refSIPrefix", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refVitalSign")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refVitalSign : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refVitalSign object.
        /// </summary>
        /// <param name="vitSignID">Initial value of the VitSignID property.</param>
        /// <param name="vitSignCode">Initial value of the VitSignCode property.</param>
        /// <param name="vitSignName">Initial value of the VitSignName property.</param>
        public static refVitalSign CreaterefVitalSign(global::System.Int64 vitSignID, global::System.String vitSignCode, global::System.String vitSignName)
        {
            refVitalSign refVitalSign = new refVitalSign();
            refVitalSign.VitSignID = vitSignID;
            refVitalSign.VitSignCode = vitSignCode;
            refVitalSign.VitSignName = vitSignName;
            return refVitalSign;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 VitSignID
        {
            get
            {
                return _VitSignID;
            }
            set
            {
                if (_VitSignID != value)
                {
                    OnVitSignIDChanging(value);
                    ReportPropertyChanging("VitSignID");
                    _VitSignID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VitSignID");
                    OnVitSignIDChanged();
                }
            }
        }
        private global::System.Int64 _VitSignID;
        partial void OnVitSignIDChanging(global::System.Int64 value);
        partial void OnVitSignIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VitSignCode
        {
            get
            {
                return _VitSignCode;
            }
            set
            {
                OnVitSignCodeChanging(value);
                ReportPropertyChanging("VitSignCode");
                _VitSignCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VitSignCode");
                OnVitSignCodeChanged();
            }
        }
        private global::System.String _VitSignCode;
        partial void OnVitSignCodeChanging(global::System.String value);
        partial void OnVitSignCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VitSignName
        {
            get
            {
                return _VitSignName;
            }
            set
            {
                OnVitSignNameChanging(value);
                ReportPropertyChanging("VitSignName");
                _VitSignName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("VitSignName");
                OnVitSignNameChanged();
            }
        }
        private global::System.String _VitSignName;
        partial void OnVitSignNameChanging(global::System.String value);
        partial void OnVitSignNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VNVitSignName
        {
            get
            {
                return _VNVitSignName;
            }
            set
            {
                OnVNVitSignNameChanging(value);
                ReportPropertyChanging("VNVitSignName");
                _VNVitSignName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VNVitSignName");
                OnVNVitSignNameChanged();
            }
        }
        private global::System.String _VNVitSignName;
        partial void OnVNVitSignNameChanging(global::System.String value);
        partial void OnVNVitSignNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientVitalSign_refVitalSign", "PatientVitalSign")]
        public EntityCollection<PatientVitalSign> PatientVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "PatientVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientVitalSign>("SureHisModel.FK_PatientVitalSign_refVitalSign", "PatientVitalSign", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refLimVitalSign_refVitalSign", "refLimVitalSign")]
        public EntityCollection<refLimVitalSign> refLimVitalSign
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refLimVitalSign");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<refLimVitalSign>("SureHisModel.FK_refLimVitalSign_refVitalSign", "refLimVitalSign", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="refWard")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class refWard : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new refWard object.
        /// </summary>
        /// <param name="wardID">Initial value of the WardID property.</param>
        /// <param name="wardName">Initial value of the WardName property.</param>
        public static refWard CreaterefWard(global::System.String wardID, global::System.String wardName)
        {
            refWard refWard = new refWard();
            refWard.WardID = wardID;
            refWard.WardName = wardName;
            return refWard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistrictID
        {
            get
            {
                return _DistrictID;
            }
            set
            {
                OnDistrictIDChanging(value);
                ReportPropertyChanging("DistrictID");
                _DistrictID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistrictID");
                OnDistrictIDChanged();
            }
        }
        private global::System.String _DistrictID;
        partial void OnDistrictIDChanging(global::System.String value);
        partial void OnDistrictIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WardID
        {
            get
            {
                return _WardID;
            }
            set
            {
                if (_WardID != value)
                {
                    OnWardIDChanging(value);
                    ReportPropertyChanging("WardID");
                    _WardID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("WardID");
                    OnWardIDChanged();
                }
            }
        }
        private global::System.String _WardID;
        partial void OnWardIDChanging(global::System.String value);
        partial void OnWardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WardName
        {
            get
            {
                return _WardName;
            }
            set
            {
                OnWardNameChanging(value);
                ReportPropertyChanging("WardName");
                _WardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WardName");
                OnWardNameChanged();
            }
        }
        private global::System.String _WardName;
        partial void OnWardNameChanging(global::System.String value);
        partial void OnWardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WardLevel
        {
            get
            {
                return _WardLevel;
            }
            set
            {
                OnWardLevelChanging(value);
                ReportPropertyChanging("WardLevel");
                _WardLevel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WardLevel");
                OnWardLevelChanged();
            }
        }
        private global::System.String _WardLevel;
        partial void OnWardLevelChanging(global::System.String value);
        partial void OnWardLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Person_refWard", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("SureHisModel.FK_Person_refWard", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("SureHisModel.FK_Person_refWard", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_refWard_refDistrict", "refDistrict")]
        public refDistrict refDistrict
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_refWard_refDistrict", "refDistrict").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_refWard_refDistrict", "refDistrict").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDistrict> refDistrictReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDistrict>("SureHisModel.FK_refWard_refDistrict", "refDistrict");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDistrict>("SureHisModel.FK_refWard_refDistrict", "refDistrict", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="RegistrationInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegistrationInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegistrationInfo object.
        /// </summary>
        /// <param name="regInfoID">Initial value of the RegInfoID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="mobilePhoneNumber">Initial value of the MobilePhoneNumber property.</param>
        /// <param name="emailAddress">Initial value of the EmailAddress property.</param>
        public static RegistrationInfo CreateRegistrationInfo(global::System.Int64 regInfoID, global::System.String lastName, global::System.String firstName, global::System.String mobilePhoneNumber, global::System.String emailAddress)
        {
            RegistrationInfo registrationInfo = new RegistrationInfo();
            registrationInfo.RegInfoID = regInfoID;
            registrationInfo.LastName = lastName;
            registrationInfo.FirstName = firstName;
            registrationInfo.MobilePhoneNumber = mobilePhoneNumber;
            registrationInfo.EmailAddress = emailAddress;
            return registrationInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegInfoID
        {
            get
            {
                return _RegInfoID;
            }
            set
            {
                if (_RegInfoID != value)
                {
                    OnRegInfoIDChanging(value);
                    ReportPropertyChanging("RegInfoID");
                    _RegInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegInfoID");
                    OnRegInfoIDChanged();
                }
            }
        }
        private global::System.Int64 _RegInfoID;
        partial void OnRegInfoIDChanging(global::System.Int64 value);
        partial void OnRegInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PtID;
        partial void OnPtIDChanging(Nullable<global::System.Int64> value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MobilePhoneNumber
        {
            get
            {
                return _MobilePhoneNumber;
            }
            set
            {
                OnMobilePhoneNumberChanging(value);
                ReportPropertyChanging("MobilePhoneNumber");
                _MobilePhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MobilePhoneNumber");
                OnMobilePhoneNumberChanged();
            }
        }
        private global::System.String _MobilePhoneNumber;
        partial void OnMobilePhoneNumberChanging(global::System.String value);
        partial void OnMobilePhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DOB
        {
            get
            {
                return _DOB;
            }
            set
            {
                OnDOBChanging(value);
                ReportPropertyChanging("DOB");
                _DOB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DOB");
                OnDOBChanged();
            }
        }
        private Nullable<global::System.DateTime> _DOB;
        partial void OnDOBChanging(Nullable<global::System.DateTime> value);
        partial void OnDOBChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IDNumber
        {
            get
            {
                return _IDNumber;
            }
            set
            {
                OnIDNumberChanging(value);
                ReportPropertyChanging("IDNumber");
                _IDNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IDNumber");
                OnIDNumberChanged();
            }
        }
        private global::System.String _IDNumber;
        partial void OnIDNumberChanging(global::System.String value);
        partial void OnIDNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PPN
        {
            get
            {
                return _PPN;
            }
            set
            {
                OnPPNChanging(value);
                ReportPropertyChanging("PPN");
                _PPN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PPN");
                OnPPNChanged();
            }
        }
        private global::System.String _PPN;
        partial void OnPPNChanging(global::System.String value);
        partial void OnPPNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> ReqCfmBySMS
        {
            get
            {
                return _ReqCfmBySMS;
            }
            set
            {
                OnReqCfmBySMSChanging(value);
                ReportPropertyChanging("ReqCfmBySMS");
                _ReqCfmBySMS = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReqCfmBySMS");
                OnReqCfmBySMSChanged();
            }
        }
        private Nullable<global::System.Boolean> _ReqCfmBySMS;
        partial void OnReqCfmBySMSChanging(Nullable<global::System.Boolean> value);
        partial void OnReqCfmBySMSChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OTP
        {
            get
            {
                return _OTP;
            }
            set
            {
                OnOTPChanging(value);
                ReportPropertyChanging("OTP");
                _OTP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OTP");
                OnOTPChanged();
            }
        }
        private global::System.String _OTP;
        partial void OnOTPChanging(global::System.String value);
        partial void OnOTPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private Nullable<global::System.Int64> _Gender;
        partial void OnGenderChanging(Nullable<global::System.Int64> value);
        partial void OnGenderChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OnlineQueue_RegistrationInfo", "OnlineQueue")]
        public EntityCollection<OnlineQueue> OnlineQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OnlineQueue>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "OnlineQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OnlineQueue>("SureHisModel.FK_OnlineQueue_RegistrationInfo", "OnlineQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegistrationInfo_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_RegistrationInfo_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_RegistrationInfo_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_RegistrationInfo_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_RegistrationInfo_Patient", "Patient", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegistrationInfo_refPersGender", "refPersGender")]
        public refPersGender refPersGender
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_RegistrationInfo_refPersGender", "refPersGender").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_RegistrationInfo_refPersGender", "refPersGender").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refPersGender> refPersGenderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refPersGender>("SureHisModel.FK_RegistrationInfo_refPersGender", "refPersGender");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refPersGender>("SureHisModel.FK_RegistrationInfo_refPersGender", "refPersGender", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="RegQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RegQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RegQueue object.
        /// </summary>
        /// <param name="regQueueID">Initial value of the RegQueueID property.</param>
        /// <param name="sequenceNo">Initial value of the SequenceNo property.</param>
        /// <param name="isWaiting">Initial value of the IsWaiting property.</param>
        /// <param name="numOfRep">Initial value of the NumOfRep property.</param>
        public static RegQueue CreateRegQueue(global::System.Int64 regQueueID, global::System.Int64 sequenceNo, global::System.Boolean isWaiting, global::System.Byte numOfRep)
        {
            RegQueue regQueue = new RegQueue();
            regQueue.RegQueueID = regQueueID;
            regQueue.SequenceNo = sequenceNo;
            regQueue.IsWaiting = isWaiting;
            regQueue.NumOfRep = numOfRep;
            return regQueue;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RegQueueID
        {
            get
            {
                return _RegQueueID;
            }
            set
            {
                if (_RegQueueID != value)
                {
                    OnRegQueueIDChanging(value);
                    ReportPropertyChanging("RegQueueID");
                    _RegQueueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RegQueueID");
                    OnRegQueueIDChanged();
                }
            }
        }
        private global::System.Int64 _RegQueueID;
        partial void OnRegQueueIDChanging(global::System.Int64 value);
        partial void OnRegQueueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SequenceNo
        {
            get
            {
                return _SequenceNo;
            }
            set
            {
                OnSequenceNoChanging(value);
                ReportPropertyChanging("SequenceNo");
                _SequenceNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SequenceNo");
                OnSequenceNoChanged();
            }
        }
        private global::System.Int64 _SequenceNo;
        partial void OnSequenceNoChanging(global::System.Int64 value);
        partial void OnSequenceNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PatientCode
        {
            get
            {
                return _PatientCode;
            }
            set
            {
                OnPatientCodeChanging(value);
                ReportPropertyChanging("PatientCode");
                _PatientCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PatientCode");
                OnPatientCodeChanged();
            }
        }
        private global::System.String _PatientCode;
        partial void OnPatientCodeChanging(global::System.String value);
        partial void OnPatientCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> QueueUpDate
        {
            get
            {
                return _QueueUpDate;
            }
            set
            {
                OnQueueUpDateChanging(value);
                ReportPropertyChanging("QueueUpDate");
                _QueueUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QueueUpDate");
                OnQueueUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _QueueUpDate;
        partial void OnQueueUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnQueueUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SID;
        partial void OnSIDChanging(Nullable<global::System.Int64> value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWaiting
        {
            get
            {
                return _IsWaiting;
            }
            set
            {
                OnIsWaitingChanging(value);
                ReportPropertyChanging("IsWaiting");
                _IsWaiting = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWaiting");
                OnIsWaitingChanged();
            }
        }
        private global::System.Boolean _IsWaiting;
        partial void OnIsWaitingChanging(global::System.Boolean value);
        partial void OnIsWaitingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> GroupHCNo
        {
            get
            {
                return _GroupHCNo;
            }
            set
            {
                OnGroupHCNoChanging(value);
                ReportPropertyChanging("GroupHCNo");
                _GroupHCNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupHCNo");
                OnGroupHCNoChanged();
            }
        }
        private Nullable<global::System.Int64> _GroupHCNo;
        partial void OnGroupHCNoChanging(Nullable<global::System.Int64> value);
        partial void OnGroupHCNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RCEmpID
        {
            get
            {
                return _RCEmpID;
            }
            set
            {
                OnRCEmpIDChanging(value);
                ReportPropertyChanging("RCEmpID");
                _RCEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RCEmpID");
                OnRCEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RCEmpID;
        partial void OnRCEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnRCEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private Nullable<global::System.Int64> _WDID;
        partial void OnWDIDChanging(Nullable<global::System.Int64> value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte NumOfRep
        {
            get
            {
                return _NumOfRep;
            }
            set
            {
                OnNumOfRepChanging(value);
                ReportPropertyChanging("NumOfRep");
                _NumOfRep = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumOfRep");
                OnNumOfRepChanged();
            }
        }
        private global::System.Byte _NumOfRep;
        partial void OnNumOfRepChanging(global::System.Byte value);
        partial void OnNumOfRepChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegQueue_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_RegQueue_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_RegQueue_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_RegQueue_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_RegQueue_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegQueue_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_RegQueue_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_RegQueue_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_RegQueue_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_RegQueue_WardInDept", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ReminderNotices")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReminderNotices : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReminderNotices object.
        /// </summary>
        /// <param name="noticesID">Initial value of the NoticesID property.</param>
        /// <param name="noticesContents">Initial value of the NoticesContents property.</param>
        /// <param name="v_ReminderNoticesTypes">Initial value of the V_ReminderNoticesTypes property.</param>
        public static ReminderNotices CreateReminderNotices(global::System.Int64 noticesID, global::System.String noticesContents, global::System.Int64 v_ReminderNoticesTypes)
        {
            ReminderNotices reminderNotices = new ReminderNotices();
            reminderNotices.NoticesID = noticesID;
            reminderNotices.NoticesContents = noticesContents;
            reminderNotices.V_ReminderNoticesTypes = v_ReminderNoticesTypes;
            return reminderNotices;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 NoticesID
        {
            get
            {
                return _NoticesID;
            }
            set
            {
                if (_NoticesID != value)
                {
                    OnNoticesIDChanging(value);
                    ReportPropertyChanging("NoticesID");
                    _NoticesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NoticesID");
                    OnNoticesIDChanged();
                }
            }
        }
        private global::System.Int64 _NoticesID;
        partial void OnNoticesIDChanging(global::System.Int64 value);
        partial void OnNoticesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NoticesContents
        {
            get
            {
                return _NoticesContents;
            }
            set
            {
                OnNoticesContentsChanging(value);
                ReportPropertyChanging("NoticesContents");
                _NoticesContents = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NoticesContents");
                OnNoticesContentsChanged();
            }
        }
        private global::System.String _NoticesContents;
        partial void OnNoticesContentsChanging(global::System.String value);
        partial void OnNoticesContentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_ReminderNoticesTypes
        {
            get
            {
                return _V_ReminderNoticesTypes;
            }
            set
            {
                OnV_ReminderNoticesTypesChanging(value);
                ReportPropertyChanging("V_ReminderNoticesTypes");
                _V_ReminderNoticesTypes = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_ReminderNoticesTypes");
                OnV_ReminderNoticesTypesChanged();
            }
        }
        private global::System.Int64 _V_ReminderNoticesTypes;
        partial void OnV_ReminderNoticesTypesChanging(global::System.Int64 value);
        partial void OnV_ReminderNoticesTypesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsBuiltIn
        {
            get
            {
                return _IsBuiltIn;
            }
            set
            {
                OnIsBuiltInChanging(value);
                ReportPropertyChanging("IsBuiltIn");
                _IsBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBuiltIn");
                OnIsBuiltInChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsBuiltIn;
        partial void OnIsBuiltInChanging(Nullable<global::System.Boolean> value);
        partial void OnIsBuiltInChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Alert_Reminder", "Alert")]
        public EntityCollection<Alert> Alert
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Alert>("SureHisModel.FK_Alert_Reminder", "Alert");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Alert>("SureHisModel.FK_Alert_Reminder", "Alert", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="RescrUsedInOperation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RescrUsedInOperation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RescrUsedInOperation object.
        /// </summary>
        /// <param name="rescrID">Initial value of the RescrID property.</param>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="wSID">Initial value of the WSID property.</param>
        /// <param name="isMasterRole">Initial value of the IsMasterRole property.</param>
        public static RescrUsedInOperation CreateRescrUsedInOperation(global::System.Int64 rescrID, global::System.Int64 roomID, global::System.Int64 wSID, global::System.Boolean isMasterRole)
        {
            RescrUsedInOperation rescrUsedInOperation = new RescrUsedInOperation();
            rescrUsedInOperation.RescrID = rescrID;
            rescrUsedInOperation.RoomID = roomID;
            rescrUsedInOperation.WSID = wSID;
            rescrUsedInOperation.IsMasterRole = isMasterRole;
            return rescrUsedInOperation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RescrID
        {
            get
            {
                return _RescrID;
            }
            set
            {
                if (_RescrID != value)
                {
                    OnRescrIDChanging(value);
                    ReportPropertyChanging("RescrID");
                    _RescrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RescrID");
                    OnRescrIDChanged();
                }
            }
        }
        private global::System.Int64 _RescrID;
        partial void OnRescrIDChanging(global::System.Int64 value);
        partial void OnRescrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private global::System.Int64 _RoomID;
        partial void OnRoomIDChanging(global::System.Int64 value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WSID
        {
            get
            {
                return _WSID;
            }
            set
            {
                OnWSIDChanging(value);
                ReportPropertyChanging("WSID");
                _WSID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WSID");
                OnWSIDChanged();
            }
        }
        private global::System.Int64 _WSID;
        partial void OnWSIDChanging(global::System.Int64 value);
        partial void OnWSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HCRmBlockID
        {
            get
            {
                return _HCRmBlockID;
            }
            set
            {
                OnHCRmBlockIDChanging(value);
                ReportPropertyChanging("HCRmBlockID");
                _HCRmBlockID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCRmBlockID");
                OnHCRmBlockIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HCRmBlockID;
        partial void OnHCRmBlockIDChanging(Nullable<global::System.Int64> value);
        partial void OnHCRmBlockIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsMasterRole
        {
            get
            {
                return _IsMasterRole;
            }
            set
            {
                OnIsMasterRoleChanging(value);
                ReportPropertyChanging("IsMasterRole");
                _IsMasterRole = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMasterRole");
                OnIsMasterRoleChanged();
            }
        }
        private global::System.Boolean _IsMasterRole;
        partial void OnIsMasterRoleChanging(global::System.Boolean value);
        partial void OnIsMasterRoleChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule")]
        public EmpWorkSchedule EmpWorkSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmpWorkSchedule> EmpWorkScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmpWorkSchedule>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmpWorkSchedule>("SureHisModel.FK_RescrUsedInOperation_EmpWorkSchedule", "EmpWorkSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock")]
        public HCRoomBlock HCRoomBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCRoomBlock> HCRoomBlockReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCRoomBlock>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCRoomBlock>("SureHisModel.FK_RescrUsedInOperation_HCRoomBlock", "HCRoomBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_HealthCareQueue_RescrUsedInOperation", "HealthCareQueue")]
        public EntityCollection<HealthCareQueue> HealthCareQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<HealthCareQueue>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "HealthCareQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<HealthCareQueue>("SureHisModel.FK_HealthCareQueue_RescrUsedInOperation", "HealthCareQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RoomAllocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ResearchPartnership")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResearchPartnership : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResearchPartnership object.
        /// </summary>
        /// <param name="partnershipID">Initial value of the PartnershipID property.</param>
        /// <param name="partnershipName">Initial value of the PartnershipName property.</param>
        /// <param name="partnershipContactInfo">Initial value of the PartnershipContactInfo property.</param>
        public static ResearchPartnership CreateResearchPartnership(global::System.Int64 partnershipID, global::System.String partnershipName, global::System.String partnershipContactInfo)
        {
            ResearchPartnership researchPartnership = new ResearchPartnership();
            researchPartnership.PartnershipID = partnershipID;
            researchPartnership.PartnershipName = partnershipName;
            researchPartnership.PartnershipContactInfo = partnershipContactInfo;
            return researchPartnership;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PartnershipID
        {
            get
            {
                return _PartnershipID;
            }
            set
            {
                if (_PartnershipID != value)
                {
                    OnPartnershipIDChanging(value);
                    ReportPropertyChanging("PartnershipID");
                    _PartnershipID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartnershipID");
                    OnPartnershipIDChanged();
                }
            }
        }
        private global::System.Int64 _PartnershipID;
        partial void OnPartnershipIDChanging(global::System.Int64 value);
        partial void OnPartnershipIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartnershipName
        {
            get
            {
                return _PartnershipName;
            }
            set
            {
                OnPartnershipNameChanging(value);
                ReportPropertyChanging("PartnershipName");
                _PartnershipName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartnershipName");
                OnPartnershipNameChanged();
            }
        }
        private global::System.String _PartnershipName;
        partial void OnPartnershipNameChanging(global::System.String value);
        partial void OnPartnershipNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartnershipContactInfo
        {
            get
            {
                return _PartnershipContactInfo;
            }
            set
            {
                OnPartnershipContactInfoChanging(value);
                ReportPropertyChanging("PartnershipContactInfo");
                _PartnershipContactInfo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartnershipContactInfo");
                OnPartnershipContactInfoChanged();
            }
        }
        private global::System.String _PartnershipContactInfo;
        partial void OnPartnershipContactInfoChanging(global::System.String value);
        partial void OnPartnershipContactInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnershipNotes
        {
            get
            {
                return _PartnershipNotes;
            }
            set
            {
                OnPartnershipNotesChanging(value);
                ReportPropertyChanging("PartnershipNotes");
                _PartnershipNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnershipNotes");
                OnPartnershipNotesChanged();
            }
        }
        private global::System.String _PartnershipNotes;
        partial void OnPartnershipNotesChanging(global::System.String value);
        partial void OnPartnershipNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedicalServiceItems_ResearchPartnership", "MedicalServiceItem")]
        public EntityCollection<MedicalServiceItem> MedicalServiceItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedicalServiceItem>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "MedicalServiceItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedicalServiceItem>("SureHisModel.FK_MedicalServiceItems_ResearchPartnership", "MedicalServiceItem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Resource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Resource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Resource object.
        /// </summary>
        /// <param name="mDRscTypeID">Initial value of the MDRscTypeID property.</param>
        /// <param name="rscrID">Initial value of the RscrID property.</param>
        /// <param name="rscrName">Initial value of the RscrName property.</param>
        /// <param name="rscrNameBrand">Initial value of the RscrNameBrand property.</param>
        /// <param name="rscrFunctions">Initial value of the RscrFunctions property.</param>
        /// <param name="rscrTechInfo">Initial value of the RscrTechInfo property.</param>
        public static Resource CreateResource(global::System.Int64 mDRscTypeID, global::System.Int64 rscrID, global::System.String rscrName, global::System.String rscrNameBrand, global::System.String rscrFunctions, global::System.String rscrTechInfo)
        {
            Resource resource = new Resource();
            resource.MDRscTypeID = mDRscTypeID;
            resource.RscrID = rscrID;
            resource.RscrName = rscrName;
            resource.RscrNameBrand = rscrNameBrand;
            resource.RscrFunctions = rscrFunctions;
            resource.RscrTechInfo = rscrTechInfo;
            return resource;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                OnSupplierIDChanging(value);
                ReportPropertyChanging("SupplierID");
                _SupplierID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SupplierID");
                OnSupplierIDChanged();
            }
        }
        private Nullable<global::System.Int64> _SupplierID;
        partial void OnSupplierIDChanging(Nullable<global::System.Int64> value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MDRscTypeID
        {
            get
            {
                return _MDRscTypeID;
            }
            set
            {
                OnMDRscTypeIDChanging(value);
                ReportPropertyChanging("MDRscTypeID");
                _MDRscTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MDRscTypeID");
                OnMDRscTypeIDChanged();
            }
        }
        private global::System.Int64 _MDRscTypeID;
        partial void OnMDRscTypeIDChanging(global::System.Int64 value);
        partial void OnMDRscTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RscrID
        {
            get
            {
                return _RscrID;
            }
            set
            {
                if (_RscrID != value)
                {
                    OnRscrIDChanging(value);
                    ReportPropertyChanging("RscrID");
                    _RscrID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RscrID");
                    OnRscrIDChanged();
                }
            }
        }
        private global::System.Int64 _RscrID;
        partial void OnRscrIDChanging(global::System.Int64 value);
        partial void OnRscrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RscrName
        {
            get
            {
                return _RscrName;
            }
            set
            {
                OnRscrNameChanging(value);
                ReportPropertyChanging("RscrName");
                _RscrName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RscrName");
                OnRscrNameChanged();
            }
        }
        private global::System.String _RscrName;
        partial void OnRscrNameChanging(global::System.String value);
        partial void OnRscrNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLocatable
        {
            get
            {
                return _IsLocatable;
            }
            set
            {
                OnIsLocatableChanging(value);
                ReportPropertyChanging("IsLocatable");
                _IsLocatable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLocatable");
                OnIsLocatableChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLocatable;
        partial void OnIsLocatableChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLocatableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RscrNameBrand
        {
            get
            {
                return _RscrNameBrand;
            }
            set
            {
                OnRscrNameBrandChanging(value);
                ReportPropertyChanging("RscrNameBrand");
                _RscrNameBrand = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RscrNameBrand");
                OnRscrNameBrandChanged();
            }
        }
        private global::System.String _RscrNameBrand;
        partial void OnRscrNameBrandChanging(global::System.String value);
        partial void OnRscrNameBrandChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RscrFunctions
        {
            get
            {
                return _RscrFunctions;
            }
            set
            {
                OnRscrFunctionsChanging(value);
                ReportPropertyChanging("RscrFunctions");
                _RscrFunctions = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RscrFunctions");
                OnRscrFunctionsChanged();
            }
        }
        private global::System.String _RscrFunctions;
        partial void OnRscrFunctionsChanging(global::System.String value);
        partial void OnRscrFunctionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RscrTechInfo
        {
            get
            {
                return _RscrTechInfo;
            }
            set
            {
                OnRscrTechInfoChanging(value);
                ReportPropertyChanging("RscrTechInfo");
                _RscrTechInfo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RscrTechInfo");
                OnRscrTechInfoChanged();
            }
        }
        private global::System.String _RscrTechInfo;
        partial void OnRscrTechInfoChanging(global::System.String value);
        partial void OnRscrTechInfoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DeprecTypeID
        {
            get
            {
                return _DeprecTypeID;
            }
            set
            {
                OnDeprecTypeIDChanging(value);
                ReportPropertyChanging("DeprecTypeID");
                _DeprecTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeprecTypeID");
                OnDeprecTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DeprecTypeID;
        partial void OnDeprecTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnDeprecTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> RscrDeprecRate
        {
            get
            {
                return _RscrDeprecRate;
            }
            set
            {
                OnRscrDeprecRateChanging(value);
                ReportPropertyChanging("RscrDeprecRate");
                _RscrDeprecRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RscrDeprecRate");
                OnRscrDeprecRateChanged();
            }
        }
        private Nullable<global::System.Double> _RscrDeprecRate;
        partial void OnRscrDeprecRateChanging(Nullable<global::System.Double> value);
        partial void OnRscrDeprecRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RscrValue
        {
            get
            {
                return _RscrValue;
            }
            set
            {
                OnRscrValueChanging(value);
                ReportPropertyChanging("RscrValue");
                _RscrValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RscrValue");
                OnRscrValueChanged();
            }
        }
        private global::System.String _RscrValue;
        partial void OnRscrValueChanging(global::System.String value);
        partial void OnRscrValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginOfRscr
        {
            get
            {
                return _OriginOfRscr;
            }
            set
            {
                OnOriginOfRscrChanging(value);
                ReportPropertyChanging("OriginOfRscr");
                _OriginOfRscr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginOfRscr");
                OnOriginOfRscrChanged();
            }
        }
        private global::System.String _OriginOfRscr;
        partial void OnOriginOfRscrChanging(global::System.String value);
        partial void OnOriginOfRscrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_MDRscrPurpose
        {
            get
            {
                return _V_MDRscrPurpose;
            }
            set
            {
                OnV_MDRscrPurposeChanging(value);
                ReportPropertyChanging("V_MDRscrPurpose");
                _V_MDRscrPurpose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MDRscrPurpose");
                OnV_MDRscrPurposeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_MDRscrPurpose;
        partial void OnV_MDRscrPurposeChanging(Nullable<global::System.Int64> value);
        partial void OnV_MDRscrPurposeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_MedDeviceStd
        {
            get
            {
                return _V_MedDeviceStd;
            }
            set
            {
                OnV_MedDeviceStdChanging(value);
                ReportPropertyChanging("V_MedDeviceStd");
                _V_MedDeviceStd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_MedDeviceStd");
                OnV_MedDeviceStdChanged();
            }
        }
        private Nullable<global::System.Int64> _V_MedDeviceStd;
        partial void OnV_MedDeviceStdChanging(Nullable<global::System.Int64> value);
        partial void OnV_MedDeviceStdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_PotentialRisk
        {
            get
            {
                return _V_PotentialRisk;
            }
            set
            {
                OnV_PotentialRiskChanging(value);
                ReportPropertyChanging("V_PotentialRisk");
                _V_PotentialRisk = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_PotentialRisk");
                OnV_PotentialRiskChanged();
            }
        }
        private Nullable<global::System.Int64> _V_PotentialRisk;
        partial void OnV_PotentialRiskChanging(Nullable<global::System.Int64> value);
        partial void OnV_PotentialRiskChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AppliedMedStandard_Resource", "AppliedMedStandard")]
        public EntityCollection<AppliedMedStandard> AppliedMedStandard
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AppliedMedStandard>("SureHisModel.FK_AppliedMedStandard_Resource", "AppliedMedStandard");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AppliedMedStandard>("SureHisModel.FK_AppliedMedStandard_Resource", "AppliedMedStandard", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContactDetails_Resource", "ContactDetails")]
        public EntityCollection<ContactDetails> ContactDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactDetails>("SureHisModel.FK_ContactDetails_Resource", "ContactDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactDetails>("SureHisModel.FK_ContactDetails_Resource", "ContactDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DisposableMDResource_Resource", "DisposableMDResource")]
        public EntityCollection<DisposableMDResource> DisposableMDResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DisposableMDResource>("SureHisModel.FK_DisposableMDResource_Resource", "DisposableMDResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DisposableMDResource>("SureHisModel.FK_DisposableMDResource_Resource", "DisposableMDResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_refDepreciationType", "refDepreciationType")]
        public refDepreciationType refDepreciationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDepreciationType>("SureHisModel.FK_Resource_refDepreciationType", "refDepreciationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDepreciationType>("SureHisModel.FK_Resource_refDepreciationType", "refDepreciationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refDepreciationType> refDepreciationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refDepreciationType>("SureHisModel.FK_Resource_refDepreciationType", "refDepreciationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refDepreciationType>("SureHisModel.FK_Resource_refDepreciationType", "refDepreciationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_refMedEquipResourceType", "refMedEquipResourceType")]
        public refMedEquipResourceType refMedEquipResourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_Resource_refMedEquipResourceType", "refMedEquipResourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_Resource_refMedEquipResourceType", "refMedEquipResourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refMedEquipResourceType> refMedEquipResourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refMedEquipResourceType>("SureHisModel.FK_Resource_refMedEquipResourceType", "refMedEquipResourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refMedEquipResourceType>("SureHisModel.FK_Resource_refMedEquipResourceType", "refMedEquipResourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Resource_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Resource_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("SureHisModel.FK_Resource_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("SureHisModel.FK_Resource_Supplier", "Supplier", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ResourceLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ResourceLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ResourceLog object.
        /// </summary>
        /// <param name="resLogID">Initial value of the ResLogID property.</param>
        public static ResourceLog CreateResourceLog(global::System.Int64 resLogID)
        {
            ResourceLog resourceLog = new ResourceLog();
            resourceLog.ResLogID = resLogID;
            return resourceLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ResLogID
        {
            get
            {
                return _ResLogID;
            }
            set
            {
                if (_ResLogID != value)
                {
                    OnResLogIDChanging(value);
                    ReportPropertyChanging("ResLogID");
                    _ResLogID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ResLogID");
                    OnResLogIDChanged();
                }
            }
        }
        private global::System.Int64 _ResLogID;
        partial void OnResLogIDChanging(global::System.Int64 value);
        partial void OnResLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                OnRoomIDChanging(value);
                ReportPropertyChanging("RoomID");
                _RoomID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RoomID");
                OnRoomIDChanged();
            }
        }
        private Nullable<global::System.Int64> _RoomID;
        partial void OnRoomIDChanging(Nullable<global::System.Int64> value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TrackedDateTime
        {
            get
            {
                return _TrackedDateTime;
            }
            set
            {
                OnTrackedDateTimeChanging(value);
                ReportPropertyChanging("TrackedDateTime");
                _TrackedDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackedDateTime");
                OnTrackedDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _TrackedDateTime;
        partial void OnTrackedDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnTrackedDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_TriggerEvent
        {
            get
            {
                return _V_TriggerEvent;
            }
            set
            {
                OnV_TriggerEventChanging(value);
                ReportPropertyChanging("V_TriggerEvent");
                _V_TriggerEvent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_TriggerEvent");
                OnV_TriggerEventChanged();
            }
        }
        private Nullable<global::System.Int64> _V_TriggerEvent;
        partial void OnV_TriggerEventChanging(Nullable<global::System.Int64> value);
        partial void OnV_TriggerEventChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_SeverityLevel
        {
            get
            {
                return _V_SeverityLevel;
            }
            set
            {
                OnV_SeverityLevelChanging(value);
                ReportPropertyChanging("V_SeverityLevel");
                _V_SeverityLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_SeverityLevel");
                OnV_SeverityLevelChanged();
            }
        }
        private Nullable<global::System.Int64> _V_SeverityLevel;
        partial void OnV_SeverityLevelChanging(Nullable<global::System.Int64> value);
        partial void OnV_SeverityLevelChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ResourceLog_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_ResourceLog_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_ResourceLog_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_ResourceLog_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_ResourceLog_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ResourceLog_RoomAllocation", "RoomAllocation")]
        public RoomAllocation RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_ResourceLog_RoomAllocation", "RoomAllocation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_ResourceLog_RoomAllocation", "RoomAllocation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RoomAllocation> RoomAllocationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RoomAllocation>("SureHisModel.FK_ResourceLog_RoomAllocation", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RoomAllocation>("SureHisModel.FK_ResourceLog_RoomAllocation", "RoomAllocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="RoomAllocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoomAllocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoomAllocation object.
        /// </summary>
        /// <param name="roomID">Initial value of the RoomID property.</param>
        /// <param name="wDID">Initial value of the WDID property.</param>
        /// <param name="aRescrID">Initial value of the ARescrID property.</param>
        /// <param name="locationName">Initial value of the LocationName property.</param>
        /// <param name="locationDesc">Initial value of the LocationDesc property.</param>
        /// <param name="v_TreatmentRoomFeatures">Initial value of the V_TreatmentRoomFeatures property.</param>
        public static RoomAllocation CreateRoomAllocation(global::System.Int64 roomID, global::System.Int64 wDID, global::System.Int64 aRescrID, global::System.String locationName, global::System.String locationDesc, global::System.Int64 v_TreatmentRoomFeatures)
        {
            RoomAllocation roomAllocation = new RoomAllocation();
            roomAllocation.RoomID = roomID;
            roomAllocation.WDID = wDID;
            roomAllocation.ARescrID = aRescrID;
            roomAllocation.LocationName = locationName;
            roomAllocation.LocationDesc = locationDesc;
            roomAllocation.V_TreatmentRoomFeatures = v_TreatmentRoomFeatures;
            return roomAllocation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RoomID
        {
            get
            {
                return _RoomID;
            }
            set
            {
                if (_RoomID != value)
                {
                    OnRoomIDChanging(value);
                    ReportPropertyChanging("RoomID");
                    _RoomID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoomID");
                    OnRoomIDChanged();
                }
            }
        }
        private global::System.Int64 _RoomID;
        partial void OnRoomIDChanging(global::System.Int64 value);
        partial void OnRoomIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                OnWDIDChanging(value);
                ReportPropertyChanging("WDID");
                _WDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WDID");
                OnWDIDChanged();
            }
        }
        private global::System.Int64 _WDID;
        partial void OnWDIDChanging(global::System.Int64 value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ARescrID
        {
            get
            {
                return _ARescrID;
            }
            set
            {
                OnARescrIDChanging(value);
                ReportPropertyChanging("ARescrID");
                _ARescrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ARescrID");
                OnARescrIDChanged();
            }
        }
        private global::System.Int64 _ARescrID;
        partial void OnARescrIDChanging(global::System.Int64 value);
        partial void OnARescrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationName
        {
            get
            {
                return _LocationName;
            }
            set
            {
                OnLocationNameChanging(value);
                ReportPropertyChanging("LocationName");
                _LocationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationName");
                OnLocationNameChanged();
            }
        }
        private global::System.String _LocationName;
        partial void OnLocationNameChanging(global::System.String value);
        partial void OnLocationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LocationDesc
        {
            get
            {
                return _LocationDesc;
            }
            set
            {
                OnLocationDescChanging(value);
                ReportPropertyChanging("LocationDesc");
                _LocationDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LocationDesc");
                OnLocationDescChanged();
            }
        }
        private global::System.String _LocationDesc;
        partial void OnLocationDescChanging(global::System.String value);
        partial void OnLocationDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SetupDate
        {
            get
            {
                return _SetupDate;
            }
            set
            {
                OnSetupDateChanging(value);
                ReportPropertyChanging("SetupDate");
                _SetupDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SetupDate");
                OnSetupDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SetupDate;
        partial void OnSetupDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSetupDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_TreatmentRoomFeatures
        {
            get
            {
                return _V_TreatmentRoomFeatures;
            }
            set
            {
                OnV_TreatmentRoomFeaturesChanging(value);
                ReportPropertyChanging("V_TreatmentRoomFeatures");
                _V_TreatmentRoomFeatures = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_TreatmentRoomFeatures");
                OnV_TreatmentRoomFeaturesChanged();
            }
        }
        private global::System.Int64 _V_TreatmentRoomFeatures;
        partial void OnV_TreatmentRoomFeaturesChanging(global::System.Int64 value);
        partial void OnV_TreatmentRoomFeaturesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isAvailable
        {
            get
            {
                return _isAvailable;
            }
            set
            {
                OnisAvailableChanging(value);
                ReportPropertyChanging("isAvailable");
                _isAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isAvailable");
                OnisAvailableChanged();
            }
        }
        private Nullable<global::System.Boolean> _isAvailable;
        partial void OnisAvailableChanging(Nullable<global::System.Boolean> value);
        partial void OnisAvailableChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allocation_ArchitectureResources", "ArchitectureResources")]
        public ArchitectureResources ArchitectureResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_Allocation_ArchitectureResources", "ArchitectureResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_Allocation_ArchitectureResources", "ArchitectureResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ArchitectureResources> ArchitectureResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ArchitectureResources>("SureHisModel.FK_Allocation_ArchitectureResources", "ArchitectureResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ArchitectureResources>("SureHisModel.FK_Allocation_ArchitectureResources", "ArchitectureResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AssignMedEquip_RoomAllocation", "AssignMedEquip")]
        public EntityCollection<AssignMedEquip> AssignMedEquip
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssignMedEquip>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "AssignMedEquip");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssignMedEquip>("SureHisModel.FK_AssignMedEquip_RoomAllocation", "AssignMedEquip", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_BedInRoom_RoomAllocation", "BedInRoom")]
        public EntityCollection<BedInRoom> BedInRoom
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BedInRoom>("SureHisModel.FK_BedInRoom_RoomAllocation", "BedInRoom");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BedInRoom>("SureHisModel.FK_BedInRoom_RoomAllocation", "BedInRoom", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_DHCRoomBlock_RoomAllocation", "DHCRoomBlock")]
        public EntityCollection<DHCRoomBlock> DHCRoomBlock
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DHCRoomBlock>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "DHCRoomBlock");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DHCRoomBlock>("SureHisModel.FK_DHCRoomBlock_RoomAllocation", "DHCRoomBlock", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientSpecimen_RoomAllocation", "PatientSpecimen")]
        public EntityCollection<PatientSpecimen> PatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "PatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientSpecimen>("SureHisModel.FK_PatientSpecimen_RoomAllocation", "PatientSpecimen", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RescrUsedInOperation_RoomAllocation", "RescrUsedInOperation")]
        public EntityCollection<RescrUsedInOperation> RescrUsedInOperation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RescrUsedInOperation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RescrUsedInOperation>("SureHisModel.FK_RescrUsedInOperation_RoomAllocation", "RescrUsedInOperation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ResourceLog_RoomAllocation", "ResourceLog")]
        public EntityCollection<ResourceLog> ResourceLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ResourceLog>("SureHisModel.FK_ResourceLog_RoomAllocation", "ResourceLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ResourceLog>("SureHisModel.FK_ResourceLog_RoomAllocation", "ResourceLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allocation_WardInDept", "WardInDept")]
        public WardInDept WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Allocation_WardInDept", "WardInDept").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Allocation_WardInDept", "WardInDept").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<WardInDept> WardInDeptReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<WardInDept>("SureHisModel.FK_Allocation_WardInDept", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<WardInDept>("SureHisModel.FK_Allocation_WardInDept", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="RxHoldConsultation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RxHoldConsultation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RxHoldConsultation object.
        /// </summary>
        /// <param name="rxHCID">Initial value of the RxHCID property.</param>
        /// <param name="hCDateTime">Initial value of the HCDateTime property.</param>
        /// <param name="empID">Initial value of the EmpID property.</param>
        public static RxHoldConsultation CreateRxHoldConsultation(global::System.Int64 rxHCID, global::System.DateTime hCDateTime, global::System.Int64 empID)
        {
            RxHoldConsultation rxHoldConsultation = new RxHoldConsultation();
            rxHoldConsultation.RxHCID = rxHCID;
            rxHoldConsultation.HCDateTime = hCDateTime;
            rxHoldConsultation.EmpID = empID;
            return rxHoldConsultation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 RxHCID
        {
            get
            {
                return _RxHCID;
            }
            set
            {
                if (_RxHCID != value)
                {
                    OnRxHCIDChanging(value);
                    ReportPropertyChanging("RxHCID");
                    _RxHCID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RxHCID");
                    OnRxHCIDChanged();
                }
            }
        }
        private global::System.Int64 _RxHCID;
        partial void OnRxHCIDChanging(global::System.Int64 value);
        partial void OnRxHCIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime HCDateTime
        {
            get
            {
                return _HCDateTime;
            }
            set
            {
                OnHCDateTimeChanging(value);
                ReportPropertyChanging("HCDateTime");
                _HCDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HCDateTime");
                OnHCDateTimeChanged();
            }
        }
        private global::System.DateTime _HCDateTime;
        partial void OnHCDateTimeChanging(global::System.DateTime value);
        partial void OnHCDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private global::System.Int64 _EmpID;
        partial void OnEmpIDChanging(global::System.Int64 value);
        partial void OnEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HCReason
        {
            get
            {
                return _V_HCReason;
            }
            set
            {
                OnV_HCReasonChanging(value);
                ReportPropertyChanging("V_HCReason");
                _V_HCReason = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HCReason");
                OnV_HCReasonChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HCReason;
        partial void OnV_HCReasonChanging(Nullable<global::System.Int64> value);
        partial void OnV_HCReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HCForm
        {
            get
            {
                return _V_HCForm;
            }
            set
            {
                OnV_HCFormChanging(value);
                ReportPropertyChanging("V_HCForm");
                _V_HCForm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HCForm");
                OnV_HCFormChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HCForm;
        partial void OnV_HCFormChanging(Nullable<global::System.Int64> value);
        partial void OnV_HCFormChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_HCResult
        {
            get
            {
                return _V_HCResult;
            }
            set
            {
                OnV_HCResultChanging(value);
                ReportPropertyChanging("V_HCResult");
                _V_HCResult = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_HCResult");
                OnV_HCResultChanged();
            }
        }
        private Nullable<global::System.Int64> _V_HCResult;
        partial void OnV_HCResultChanging(Nullable<global::System.Int64> value);
        partial void OnV_HCResultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PresID
        {
            get
            {
                return _PresID;
            }
            set
            {
                OnPresIDChanging(value);
                ReportPropertyChanging("PresID");
                _PresID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PresID");
                OnPresIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PresID;
        partial void OnPresIDChanging(Nullable<global::System.Int64> value);
        partial void OnPresIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RxHoldConsultation_Prescription", "Prescription")]
        public Prescription Prescription
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_RxHoldConsultation_Prescription", "Prescription").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_RxHoldConsultation_Prescription", "Prescription").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Prescription> PrescriptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Prescription>("SureHisModel.FK_RxHoldConsultation_Prescription", "Prescription");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Prescription>("SureHisModel.FK_RxHoldConsultation_Prescription", "Prescription", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ScheduleDoingTaskLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ScheduleDoingTaskLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ScheduleDoingTaskLog object.
        /// </summary>
        /// <param name="scheduleTaskID">Initial value of the ScheduleTaskID property.</param>
        /// <param name="scheduleTaskName">Initial value of the ScheduleTaskName property.</param>
        public static ScheduleDoingTaskLog CreateScheduleDoingTaskLog(global::System.Int64 scheduleTaskID, global::System.String scheduleTaskName)
        {
            ScheduleDoingTaskLog scheduleDoingTaskLog = new ScheduleDoingTaskLog();
            scheduleDoingTaskLog.ScheduleTaskID = scheduleTaskID;
            scheduleDoingTaskLog.ScheduleTaskName = scheduleTaskName;
            return scheduleDoingTaskLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ScheduleTaskID
        {
            get
            {
                return _ScheduleTaskID;
            }
            set
            {
                if (_ScheduleTaskID != value)
                {
                    OnScheduleTaskIDChanging(value);
                    ReportPropertyChanging("ScheduleTaskID");
                    _ScheduleTaskID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ScheduleTaskID");
                    OnScheduleTaskIDChanged();
                }
            }
        }
        private global::System.Int64 _ScheduleTaskID;
        partial void OnScheduleTaskIDChanging(global::System.Int64 value);
        partial void OnScheduleTaskIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ScheduleTaskName
        {
            get
            {
                return _ScheduleTaskName;
            }
            set
            {
                OnScheduleTaskNameChanging(value);
                ReportPropertyChanging("ScheduleTaskName");
                _ScheduleTaskName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ScheduleTaskName");
                OnScheduleTaskNameChanged();
            }
        }
        private global::System.String _ScheduleTaskName;
        partial void OnScheduleTaskNameChanging(global::System.String value);
        partial void OnScheduleTaskNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastScheduleDtm
        {
            get
            {
                return _LastScheduleDtm;
            }
            set
            {
                OnLastScheduleDtmChanging(value);
                ReportPropertyChanging("LastScheduleDtm");
                _LastScheduleDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastScheduleDtm");
                OnLastScheduleDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastScheduleDtm;
        partial void OnLastScheduleDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnLastScheduleDtmChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="SeparationOfBlood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SeparationOfBlood : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SeparationOfBlood object.
        /// </summary>
        /// <param name="sepnBloodID">Initial value of the SepnBloodID property.</param>
        /// <param name="v_BloodComponent">Initial value of the V_BloodComponent property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        public static SeparationOfBlood CreateSeparationOfBlood(global::System.Int64 sepnBloodID, global::System.Int64 v_BloodComponent, global::System.Double percentage)
        {
            SeparationOfBlood separationOfBlood = new SeparationOfBlood();
            separationOfBlood.SepnBloodID = sepnBloodID;
            separationOfBlood.V_BloodComponent = v_BloodComponent;
            separationOfBlood.Percentage = percentage;
            return separationOfBlood;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SepnBloodID
        {
            get
            {
                return _SepnBloodID;
            }
            set
            {
                if (_SepnBloodID != value)
                {
                    OnSepnBloodIDChanging(value);
                    ReportPropertyChanging("SepnBloodID");
                    _SepnBloodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SepnBloodID");
                    OnSepnBloodIDChanged();
                }
            }
        }
        private global::System.Int64 _SepnBloodID;
        partial void OnSepnBloodIDChanging(global::System.Int64 value);
        partial void OnSepnBloodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BloodBankID
        {
            get
            {
                return _BloodBankID;
            }
            set
            {
                OnBloodBankIDChanging(value);
                ReportPropertyChanging("BloodBankID");
                _BloodBankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodBankID");
                OnBloodBankIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BloodBankID;
        partial void OnBloodBankIDChanging(Nullable<global::System.Int64> value);
        partial void OnBloodBankIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_BloodComponent
        {
            get
            {
                return _V_BloodComponent;
            }
            set
            {
                OnV_BloodComponentChanging(value);
                ReportPropertyChanging("V_BloodComponent");
                _V_BloodComponent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_BloodComponent");
                OnV_BloodComponentChanged();
            }
        }
        private global::System.Int64 _V_BloodComponent;
        partial void OnV_BloodComponentChanging(global::System.Int64 value);
        partial void OnV_BloodComponentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Double _Percentage;
        partial void OnPercentageChanging(global::System.Double value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SeparationOfBlood_Bloodbank", "Bloodbank")]
        public Bloodbank Bloodbank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "Bloodbank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "Bloodbank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bloodbank> BloodbankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "Bloodbank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bloodbank>("SureHisModel.FK_SeparationOfBlood_Bloodbank", "Bloodbank", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="ServerLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServerLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServerLog object.
        /// </summary>
        /// <param name="logEntryID">Initial value of the LogEntryID property.</param>
        public static ServerLog CreateServerLog(global::System.Int64 logEntryID)
        {
            ServerLog serverLog = new ServerLog();
            serverLog.LogEntryID = logEntryID;
            return serverLog;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 LogEntryID
        {
            get
            {
                return _LogEntryID;
            }
            set
            {
                if (_LogEntryID != value)
                {
                    OnLogEntryIDChanging(value);
                    ReportPropertyChanging("LogEntryID");
                    _LogEntryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogEntryID");
                    OnLogEntryIDChanged();
                }
            }
        }
        private global::System.Int64 _LogEntryID;
        partial void OnLogEntryIDChanging(global::System.Int64 value);
        partial void OnLogEntryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClientIDAddress
        {
            get
            {
                return _ClientIDAddress;
            }
            set
            {
                OnClientIDAddressChanging(value);
                ReportPropertyChanging("ClientIDAddress");
                _ClientIDAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientIDAddress");
                OnClientIDAddressChanged();
            }
        }
        private global::System.String _ClientIDAddress;
        partial void OnClientIDAddressChanging(global::System.String value);
        partial void OnClientIDAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AccessDateTime
        {
            get
            {
                return _AccessDateTime;
            }
            set
            {
                OnAccessDateTimeChanging(value);
                ReportPropertyChanging("AccessDateTime");
                _AccessDateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessDateTime");
                OnAccessDateTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _AccessDateTime;
        partial void OnAccessDateTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnAccessDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_AccessType
        {
            get
            {
                return _V_AccessType;
            }
            set
            {
                OnV_AccessTypeChanging(value);
                ReportPropertyChanging("V_AccessType");
                _V_AccessType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AccessType");
                OnV_AccessTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_AccessType;
        partial void OnV_AccessTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_AccessTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ServerLog_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ServerLog_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ServerLog_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_ServerLog_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("SureHisModel.FK_ServerLog_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Session")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Session : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Session object.
        /// </summary>
        /// <param name="sessID">Initial value of the SessID property.</param>
        /// <param name="sessSetting">Initial value of the SessSetting property.</param>
        public static Session CreateSession(global::System.Int64 sessID, global::System.String sessSetting)
        {
            Session session = new Session();
            session.SessID = sessID;
            session.SessSetting = sessSetting;
            return session;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SessID
        {
            get
            {
                return _SessID;
            }
            set
            {
                if (_SessID != value)
                {
                    OnSessIDChanging(value);
                    ReportPropertyChanging("SessID");
                    _SessID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SessID");
                    OnSessIDChanged();
                }
            }
        }
        private global::System.Int64 _SessID;
        partial void OnSessIDChanging(global::System.Int64 value);
        partial void OnSessIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int64> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int64> value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LoginTime
        {
            get
            {
                return _LoginTime;
            }
            set
            {
                OnLoginTimeChanging(value);
                ReportPropertyChanging("LoginTime");
                _LoginTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LoginTime");
                OnLoginTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LoginTime;
        partial void OnLoginTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLoginTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogoutTime
        {
            get
            {
                return _LogoutTime;
            }
            set
            {
                OnLogoutTimeChanging(value);
                ReportPropertyChanging("LogoutTime");
                _LogoutTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogoutTime");
                OnLogoutTimeChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogoutTime;
        partial void OnLogoutTimeChanging(Nullable<global::System.DateTime> value);
        partial void OnLogoutTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HotAddress
        {
            get
            {
                return _HotAddress;
            }
            set
            {
                OnHotAddressChanging(value);
                ReportPropertyChanging("HotAddress");
                _HotAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HotAddress");
                OnHotAddressChanged();
            }
        }
        private global::System.String _HotAddress;
        partial void OnHotAddressChanging(global::System.String value);
        partial void OnHotAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> SessKey
        {
            get
            {
                return _SessKey;
            }
            set
            {
                OnSessKeyChanging(value);
                ReportPropertyChanging("SessKey");
                _SessKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SessKey");
                OnSessKeyChanged();
            }
        }
        private Nullable<global::System.Guid> _SessKey;
        partial void OnSessKeyChanging(Nullable<global::System.Guid> value);
        partial void OnSessKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SessSetting
        {
            get
            {
                return _SessSetting;
            }
            set
            {
                OnSessSettingChanging(value);
                ReportPropertyChanging("SessSetting");
                _SessSetting = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SessSetting");
                OnSessSettingChanged();
            }
        }
        private global::System.String _SessSetting;
        partial void OnSessSettingChanging(global::System.String value);
        partial void OnSessSettingChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Session_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_Session_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_Session_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_Session_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("SureHisModel.FK_Session_UserAccount", "UserAccount", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="SocialAndHealthInsurance")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SocialAndHealthInsurance : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SocialAndHealthInsurance object.
        /// </summary>
        /// <param name="sHInsEmpID">Initial value of the SHInsEmpID property.</param>
        /// <param name="socialInsNo">Initial value of the SocialInsNo property.</param>
        public static SocialAndHealthInsurance CreateSocialAndHealthInsurance(global::System.Int64 sHInsEmpID, global::System.String socialInsNo)
        {
            SocialAndHealthInsurance socialAndHealthInsurance = new SocialAndHealthInsurance();
            socialAndHealthInsurance.SHInsEmpID = sHInsEmpID;
            socialAndHealthInsurance.SocialInsNo = socialInsNo;
            return socialAndHealthInsurance;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SHInsEmpID
        {
            get
            {
                return _SHInsEmpID;
            }
            set
            {
                if (_SHInsEmpID != value)
                {
                    OnSHInsEmpIDChanging(value);
                    ReportPropertyChanging("SHInsEmpID");
                    _SHInsEmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SHInsEmpID");
                    OnSHInsEmpIDChanged();
                }
            }
        }
        private global::System.Int64 _SHInsEmpID;
        partial void OnSHInsEmpIDChanging(global::System.Int64 value);
        partial void OnSHInsEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SocialInsNo
        {
            get
            {
                return _SocialInsNo;
            }
            set
            {
                OnSocialInsNoChanging(value);
                ReportPropertyChanging("SocialInsNo");
                _SocialInsNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SocialInsNo");
                OnSocialInsNoChanged();
            }
        }
        private global::System.String _SocialInsNo;
        partial void OnSocialInsNoChanging(global::System.String value);
        partial void OnSocialInsNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SocialInsIssuedDate
        {
            get
            {
                return _SocialInsIssuedDate;
            }
            set
            {
                OnSocialInsIssuedDateChanging(value);
                ReportPropertyChanging("SocialInsIssuedDate");
                _SocialInsIssuedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SocialInsIssuedDate");
                OnSocialInsIssuedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SocialInsIssuedDate;
        partial void OnSocialInsIssuedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSocialInsIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SocialInsIssuedPlace
        {
            get
            {
                return _SocialInsIssuedPlace;
            }
            set
            {
                OnSocialInsIssuedPlaceChanging(value);
                ReportPropertyChanging("SocialInsIssuedPlace");
                _SocialInsIssuedPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SocialInsIssuedPlace");
                OnSocialInsIssuedPlaceChanged();
            }
        }
        private global::System.String _SocialInsIssuedPlace;
        partial void OnSocialInsIssuedPlaceChanging(global::System.String value);
        partial void OnSocialInsIssuedPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HealthInsNo
        {
            get
            {
                return _HealthInsNo;
            }
            set
            {
                OnHealthInsNoChanging(value);
                ReportPropertyChanging("HealthInsNo");
                _HealthInsNo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HealthInsNo");
                OnHealthInsNoChanged();
            }
        }
        private global::System.String _HealthInsNo;
        partial void OnHealthInsNoChanging(global::System.String value);
        partial void OnHealthInsNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> HealthInsIssedDate
        {
            get
            {
                return _HealthInsIssedDate;
            }
            set
            {
                OnHealthInsIssedDateChanging(value);
                ReportPropertyChanging("HealthInsIssedDate");
                _HealthInsIssedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HealthInsIssedDate");
                OnHealthInsIssedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _HealthInsIssedDate;
        partial void OnHealthInsIssedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnHealthInsIssedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HealthInsIssuedPlace
        {
            get
            {
                return _HealthInsIssuedPlace;
            }
            set
            {
                OnHealthInsIssuedPlaceChanging(value);
                ReportPropertyChanging("HealthInsIssuedPlace");
                _HealthInsIssuedPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HealthInsIssuedPlace");
                OnHealthInsIssuedPlaceChanged();
            }
        }
        private global::System.String _HealthInsIssuedPlace;
        partial void OnHealthInsIssuedPlaceChanging(global::System.String value);
        partial void OnHealthInsIssuedPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EmpID
        {
            get
            {
                return _EmpID;
            }
            set
            {
                OnEmpIDChanging(value);
                ReportPropertyChanging("EmpID");
                _EmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmpID");
                OnEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EmpID;
        partial void OnEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SocialAndHealthInsurance_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_SocialAndHealthInsurance_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="SpecifiedParaclinical")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecifiedParaclinical : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecifiedParaclinical object.
        /// </summary>
        /// <param name="specParClinID">Initial value of the SpecParClinID property.</param>
        /// <param name="parClinExamGroupID">Initial value of the ParClinExamGroupID property.</param>
        /// <param name="iCDID">Initial value of the ICDID property.</param>
        public static SpecifiedParaclinical CreateSpecifiedParaclinical(global::System.Int64 specParClinID, global::System.Int64 parClinExamGroupID, global::System.Int64 iCDID)
        {
            SpecifiedParaclinical specifiedParaclinical = new SpecifiedParaclinical();
            specifiedParaclinical.SpecParClinID = specParClinID;
            specifiedParaclinical.ParClinExamGroupID = parClinExamGroupID;
            specifiedParaclinical.ICDID = iCDID;
            return specifiedParaclinical;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SpecParClinID
        {
            get
            {
                return _SpecParClinID;
            }
            set
            {
                if (_SpecParClinID != value)
                {
                    OnSpecParClinIDChanging(value);
                    ReportPropertyChanging("SpecParClinID");
                    _SpecParClinID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecParClinID");
                    OnSpecParClinIDChanged();
                }
            }
        }
        private global::System.Int64 _SpecParClinID;
        partial void OnSpecParClinIDChanging(global::System.Int64 value);
        partial void OnSpecParClinIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ParClinExamGroupID
        {
            get
            {
                return _ParClinExamGroupID;
            }
            set
            {
                OnParClinExamGroupIDChanging(value);
                ReportPropertyChanging("ParClinExamGroupID");
                _ParClinExamGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParClinExamGroupID");
                OnParClinExamGroupIDChanged();
            }
        }
        private global::System.Int64 _ParClinExamGroupID;
        partial void OnParClinExamGroupIDChanging(global::System.Int64 value);
        partial void OnParClinExamGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ICDID
        {
            get
            {
                return _ICDID;
            }
            set
            {
                OnICDIDChanging(value);
                ReportPropertyChanging("ICDID");
                _ICDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICDID");
                OnICDIDChanged();
            }
        }
        private global::System.Int64 _ICDID;
        partial void OnICDIDChanging(global::System.Int64 value);
        partial void OnICDIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecifiedParaclinical_ICD10", "ICD10")]
        public ICD10 ICD10
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD10Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_SpecifiedParaclinical_ICD10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup")]
        public ParaClinicalExamGroup ParaClinicalExamGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalExamGroup> ParaClinicalExamGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalExamGroup>("SureHisModel.FK_SpecifiedParaclinical_ParaClinicalExamGroup", "ParaClinicalExamGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="SpecMedRecTmp")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecMedRecTmp : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecMedRecTmp object.
        /// </summary>
        /// <param name="specMDTmpID">Initial value of the SpecMDTmpID property.</param>
        /// <param name="deptID">Initial value of the DeptID property.</param>
        /// <param name="mDTmpID">Initial value of the MDTmpID property.</param>
        public static SpecMedRecTmp CreateSpecMedRecTmp(global::System.Int64 specMDTmpID, global::System.Int64 deptID, global::System.Int64 mDTmpID)
        {
            SpecMedRecTmp specMedRecTmp = new SpecMedRecTmp();
            specMedRecTmp.SpecMDTmpID = specMDTmpID;
            specMedRecTmp.DeptID = deptID;
            specMedRecTmp.MDTmpID = mDTmpID;
            return specMedRecTmp;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SpecMDTmpID
        {
            get
            {
                return _SpecMDTmpID;
            }
            set
            {
                if (_SpecMDTmpID != value)
                {
                    OnSpecMDTmpIDChanging(value);
                    ReportPropertyChanging("SpecMDTmpID");
                    _SpecMDTmpID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SpecMDTmpID");
                    OnSpecMDTmpIDChanged();
                }
            }
        }
        private global::System.Int64 _SpecMDTmpID;
        partial void OnSpecMDTmpIDChanging(global::System.Int64 value);
        partial void OnSpecMDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 DeptID
        {
            get
            {
                return _DeptID;
            }
            set
            {
                OnDeptIDChanging(value);
                ReportPropertyChanging("DeptID");
                _DeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeptID");
                OnDeptIDChanged();
            }
        }
        private global::System.Int64 _DeptID;
        partial void OnDeptIDChanging(global::System.Int64 value);
        partial void OnDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 MDTmpID
        {
            get
            {
                return _MDTmpID;
            }
            set
            {
                OnMDTmpIDChanging(value);
                ReportPropertyChanging("MDTmpID");
                _MDTmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MDTmpID");
                OnMDTmpIDChanged();
            }
        }
        private global::System.Int64 _MDTmpID;
        partial void OnMDTmpIDChanging(global::System.Int64 value);
        partial void OnMDTmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecMDTmpDesc
        {
            get
            {
                return _SpecMDTmpDesc;
            }
            set
            {
                OnSpecMDTmpDescChanging(value);
                ReportPropertyChanging("SpecMDTmpDesc");
                _SpecMDTmpDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecMDTmpDesc");
                OnSpecMDTmpDescChanged();
            }
        }
        private global::System.String _SpecMDTmpDesc;
        partial void OnSpecMDTmpDescChanging(global::System.String value);
        partial void OnSpecMDTmpDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp")]
        public MedRecTmp MedRecTmp
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedRecTmp> MedRecTmpReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedRecTmp>("SureHisModel.FK_SpecMedRecordTemp_MedRecordTemp", "MedRecTmp", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="StdKSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StdKSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StdKSection object.
        /// </summary>
        /// <param name="stdKSectD">Initial value of the StdKSectD property.</param>
        /// <param name="v_DocType">Initial value of the V_DocType property.</param>
        /// <param name="stdKSectTile">Initial value of the StdKSectTile property.</param>
        /// <param name="filePathLocation">Initial value of the FilePathLocation property.</param>
        public static StdKSection CreateStdKSection(global::System.Int64 stdKSectD, global::System.Int64 v_DocType, global::System.String stdKSectTile, global::System.String filePathLocation)
        {
            StdKSection stdKSection = new StdKSection();
            stdKSection.StdKSectD = stdKSectD;
            stdKSection.V_DocType = v_DocType;
            stdKSection.StdKSectTile = stdKSectTile;
            stdKSection.FilePathLocation = filePathLocation;
            return stdKSection;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 StdKSectD
        {
            get
            {
                return _StdKSectD;
            }
            set
            {
                if (_StdKSectD != value)
                {
                    OnStdKSectDChanging(value);
                    ReportPropertyChanging("StdKSectD");
                    _StdKSectD = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StdKSectD");
                    OnStdKSectDChanged();
                }
            }
        }
        private global::System.Int64 _StdKSectD;
        partial void OnStdKSectDChanging(global::System.Int64 value);
        partial void OnStdKSectDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_DocType
        {
            get
            {
                return _V_DocType;
            }
            set
            {
                OnV_DocTypeChanging(value);
                ReportPropertyChanging("V_DocType");
                _V_DocType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DocType");
                OnV_DocTypeChanged();
            }
        }
        private global::System.Int64 _V_DocType;
        partial void OnV_DocTypeChanging(global::System.Int64 value);
        partial void OnV_DocTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StdKSectTile
        {
            get
            {
                return _StdKSectTile;
            }
            set
            {
                OnStdKSectTileChanging(value);
                ReportPropertyChanging("StdKSectTile");
                _StdKSectTile = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("StdKSectTile");
                OnStdKSectTileChanged();
            }
        }
        private global::System.String _StdKSectTile;
        partial void OnStdKSectTileChanging(global::System.String value);
        partial void OnStdKSectTileChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StdKSectSummary
        {
            get
            {
                return _StdKSectSummary;
            }
            set
            {
                OnStdKSectSummaryChanging(value);
                ReportPropertyChanging("StdKSectSummary");
                _StdKSectSummary = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StdKSectSummary");
                OnStdKSectSummaryChanged();
            }
        }
        private global::System.String _StdKSectSummary;
        partial void OnStdKSectSummaryChanging(global::System.String value);
        partial void OnStdKSectSummaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePathLocation
        {
            get
            {
                return _FilePathLocation;
            }
            set
            {
                OnFilePathLocationChanging(value);
                ReportPropertyChanging("FilePathLocation");
                _FilePathLocation = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePathLocation");
                OnFilePathLocationChanged();
            }
        }
        private global::System.String _FilePathLocation;
        partial void OnFilePathLocationChanging(global::System.String value);
        partial void OnFilePathLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ContractDocument_StdKSection", "ContractDocument")]
        public EntityCollection<ContractDocument> ContractDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_StdKSection", "ContractDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractDocument>("SureHisModel.FK_ContractDocument_StdKSection", "ContractDocument", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplierID">Initial value of the SupplierID property.</param>
        /// <param name="supplierName">Initial value of the SupplierName property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="cityStatetZipCode">Initial value of the CityStatetZipCode property.</param>
        /// <param name="contctPerson">Initial value of the ContctPerson property.</param>
        /// <param name="certificateAgency">Initial value of the CertificateAgency property.</param>
        public static Supplier CreateSupplier(global::System.Int64 supplierID, global::System.String supplierName, global::System.String address, global::System.String cityStatetZipCode, global::System.String contctPerson, global::System.String certificateAgency)
        {
            Supplier supplier = new Supplier();
            supplier.SupplierID = supplierID;
            supplier.SupplierName = supplierName;
            supplier.Address = address;
            supplier.CityStatetZipCode = cityStatetZipCode;
            supplier.ContctPerson = contctPerson;
            supplier.CertificateAgency = certificateAgency;
            return supplier;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SupplierID
        {
            get
            {
                return _SupplierID;
            }
            set
            {
                if (_SupplierID != value)
                {
                    OnSupplierIDChanging(value);
                    ReportPropertyChanging("SupplierID");
                    _SupplierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SupplierID");
                    OnSupplierIDChanged();
                }
            }
        }
        private global::System.Int64 _SupplierID;
        partial void OnSupplierIDChanging(global::System.Int64 value);
        partial void OnSupplierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupplierName
        {
            get
            {
                return _SupplierName;
            }
            set
            {
                OnSupplierNameChanging(value);
                ReportPropertyChanging("SupplierName");
                _SupplierName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SupplierName");
                OnSupplierNameChanged();
            }
        }
        private global::System.String _SupplierName;
        partial void OnSupplierNameChanging(global::System.String value);
        partial void OnSupplierNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isGlobalSupplier
        {
            get
            {
                return _isGlobalSupplier;
            }
            set
            {
                OnisGlobalSupplierChanging(value);
                ReportPropertyChanging("isGlobalSupplier");
                _isGlobalSupplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isGlobalSupplier");
                OnisGlobalSupplierChanged();
            }
        }
        private Nullable<global::System.Boolean> _isGlobalSupplier;
        partial void OnisGlobalSupplierChanging(Nullable<global::System.Boolean> value);
        partial void OnisGlobalSupplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CityStatetZipCode
        {
            get
            {
                return _CityStatetZipCode;
            }
            set
            {
                OnCityStatetZipCodeChanging(value);
                ReportPropertyChanging("CityStatetZipCode");
                _CityStatetZipCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CityStatetZipCode");
                OnCityStatetZipCodeChanged();
            }
        }
        private global::System.String _CityStatetZipCode;
        partial void OnCityStatetZipCodeChanging(global::System.String value);
        partial void OnCityStatetZipCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContctPerson
        {
            get
            {
                return _ContctPerson;
            }
            set
            {
                OnContctPersonChanging(value);
                ReportPropertyChanging("ContctPerson");
                _ContctPerson = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContctPerson");
                OnContctPersonChanged();
            }
        }
        private global::System.String _ContctPerson;
        partial void OnContctPersonChanging(global::System.String value);
        partial void OnContctPersonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FaxNumber
        {
            get
            {
                return _FaxNumber;
            }
            set
            {
                OnFaxNumberChanging(value);
                ReportPropertyChanging("FaxNumber");
                _FaxNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FaxNumber");
                OnFaxNumberChanged();
            }
        }
        private global::System.String _FaxNumber;
        partial void OnFaxNumberChanging(global::System.String value);
        partial void OnFaxNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EmailAddress
        {
            get
            {
                return _EmailAddress;
            }
            set
            {
                OnEmailAddressChanging(value);
                ReportPropertyChanging("EmailAddress");
                _EmailAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EmailAddress");
                OnEmailAddressChanged();
            }
        }
        private global::System.String _EmailAddress;
        partial void OnEmailAddressChanging(global::System.String value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WensiteURL
        {
            get
            {
                return _WensiteURL;
            }
            set
            {
                OnWensiteURLChanging(value);
                ReportPropertyChanging("WensiteURL");
                _WensiteURL = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WensiteURL");
                OnWensiteURLChanged();
            }
        }
        private global::System.String _WensiteURL;
        partial void OnWensiteURLChanging(global::System.String value);
        partial void OnWensiteURLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CertificateAgency
        {
            get
            {
                return _CertificateAgency;
            }
            set
            {
                OnCertificateAgencyChanging(value);
                ReportPropertyChanging("CertificateAgency");
                _CertificateAgency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CertificateAgency");
                OnCertificateAgencyChanged();
            }
        }
        private global::System.String _CertificateAgency;
        partial void OnCertificateAgencyChanging(global::System.String value);
        partial void OnCertificateAgencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SupplierDesc
        {
            get
            {
                return _SupplierDesc;
            }
            set
            {
                OnSupplierDescChanging(value);
                ReportPropertyChanging("SupplierDesc");
                _SupplierDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SupplierDesc");
                OnSupplierDescChanged();
            }
        }
        private global::System.String _SupplierDesc;
        partial void OnSupplierDescChanging(global::System.String value);
        partial void OnSupplierDescChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Contract_Supplier", "Contract")]
        public EntityCollection<Contract> Contract
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contract>("SureHisModel.FK_Contract_Supplier", "Contract");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contract>("SureHisModel.FK_Contract_Supplier", "Contract", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Resource_Supplier", "Resource")]
        public EntityCollection<Resource> Resource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Resource>("SureHisModel.FK_Resource_Supplier", "Resource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Resource>("SureHisModel.FK_Resource_Supplier", "Resource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="SymptomIndicator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SymptomIndicator : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SymptomIndicator object.
        /// </summary>
        /// <param name="sxIndicatorID">Initial value of the SxIndicatorID property.</param>
        /// <param name="iCDID">Initial value of the ICDID property.</param>
        /// <param name="pHProbID">Initial value of the PHProbID property.</param>
        public static SymptomIndicator CreateSymptomIndicator(global::System.Int64 sxIndicatorID, global::System.Int64 iCDID, global::System.Int64 pHProbID)
        {
            SymptomIndicator symptomIndicator = new SymptomIndicator();
            symptomIndicator.SxIndicatorID = sxIndicatorID;
            symptomIndicator.ICDID = iCDID;
            symptomIndicator.PHProbID = pHProbID;
            return symptomIndicator;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SxIndicatorID
        {
            get
            {
                return _SxIndicatorID;
            }
            set
            {
                if (_SxIndicatorID != value)
                {
                    OnSxIndicatorIDChanging(value);
                    ReportPropertyChanging("SxIndicatorID");
                    _SxIndicatorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SxIndicatorID");
                    OnSxIndicatorIDChanged();
                }
            }
        }
        private global::System.Int64 _SxIndicatorID;
        partial void OnSxIndicatorIDChanging(global::System.Int64 value);
        partial void OnSxIndicatorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ICDID
        {
            get
            {
                return _ICDID;
            }
            set
            {
                OnICDIDChanging(value);
                ReportPropertyChanging("ICDID");
                _ICDID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ICDID");
                OnICDIDChanged();
            }
        }
        private global::System.Int64 _ICDID;
        partial void OnICDIDChanging(global::System.Int64 value);
        partial void OnICDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PHProbID
        {
            get
            {
                return _PHProbID;
            }
            set
            {
                OnPHProbIDChanging(value);
                ReportPropertyChanging("PHProbID");
                _PHProbID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PHProbID");
                OnPHProbIDChanged();
            }
        }
        private global::System.Int64 _PHProbID;
        partial void OnPHProbIDChanging(global::System.Int64 value);
        partial void OnPHProbIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SymptomIndicator_IDC10", "ICD10")]
        public ICD10 ICD10
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SymptomIndicator_IDC10", "ICD10").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SymptomIndicator_IDC10", "ICD10").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ICD10> ICD10Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ICD10>("SureHisModel.FK_SymptomIndicator_IDC10", "ICD10");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ICD10>("SureHisModel.FK_SymptomIndicator_IDC10", "ICD10", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_SymptomIndicator_refProblem", "refProblem")]
        public refProblem refProblem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_SymptomIndicator_refProblem", "refProblem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_SymptomIndicator_refProblem", "refProblem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refProblem> refProblemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refProblem>("SureHisModel.FK_SymptomIndicator_refProblem", "refProblem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refProblem>("SureHisModel.FK_SymptomIndicator_refProblem", "refProblem", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="TechnicalInspectionAgency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TechnicalInspectionAgency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TechnicalInspectionAgency object.
        /// </summary>
        /// <param name="tIANo">Initial value of the TIANo property.</param>
        /// <param name="tecInspAgencyName">Initial value of the TecInspAgencyName property.</param>
        /// <param name="tecInspAgencyAddress">Initial value of the TecInspAgencyAddress property.</param>
        /// <param name="tecInspAgencyWebSite">Initial value of the TecInspAgencyWebSite property.</param>
        public static TechnicalInspectionAgency CreateTechnicalInspectionAgency(global::System.Int64 tIANo, global::System.String tecInspAgencyName, global::System.String tecInspAgencyAddress, global::System.String tecInspAgencyWebSite)
        {
            TechnicalInspectionAgency technicalInspectionAgency = new TechnicalInspectionAgency();
            technicalInspectionAgency.TIANo = tIANo;
            technicalInspectionAgency.TecInspAgencyName = tecInspAgencyName;
            technicalInspectionAgency.TecInspAgencyAddress = tecInspAgencyAddress;
            technicalInspectionAgency.TecInspAgencyWebSite = tecInspAgencyWebSite;
            return technicalInspectionAgency;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TIANo
        {
            get
            {
                return _TIANo;
            }
            set
            {
                if (_TIANo != value)
                {
                    OnTIANoChanging(value);
                    ReportPropertyChanging("TIANo");
                    _TIANo = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TIANo");
                    OnTIANoChanged();
                }
            }
        }
        private global::System.Int64 _TIANo;
        partial void OnTIANoChanging(global::System.Int64 value);
        partial void OnTIANoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyName
        {
            get
            {
                return _TecInspAgencyName;
            }
            set
            {
                OnTecInspAgencyNameChanging(value);
                ReportPropertyChanging("TecInspAgencyName");
                _TecInspAgencyName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TecInspAgencyName");
                OnTecInspAgencyNameChanged();
            }
        }
        private global::System.String _TecInspAgencyName;
        partial void OnTecInspAgencyNameChanging(global::System.String value);
        partial void OnTecInspAgencyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyAddress
        {
            get
            {
                return _TecInspAgencyAddress;
            }
            set
            {
                OnTecInspAgencyAddressChanging(value);
                ReportPropertyChanging("TecInspAgencyAddress");
                _TecInspAgencyAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TecInspAgencyAddress");
                OnTecInspAgencyAddressChanged();
            }
        }
        private global::System.String _TecInspAgencyAddress;
        partial void OnTecInspAgencyAddressChanging(global::System.String value);
        partial void OnTecInspAgencyAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyEmail
        {
            get
            {
                return _TecInspAgencyEmail;
            }
            set
            {
                OnTecInspAgencyEmailChanging(value);
                ReportPropertyChanging("TecInspAgencyEmail");
                _TecInspAgencyEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TecInspAgencyEmail");
                OnTecInspAgencyEmailChanged();
            }
        }
        private global::System.String _TecInspAgencyEmail;
        partial void OnTecInspAgencyEmailChanging(global::System.String value);
        partial void OnTecInspAgencyEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyPhone
        {
            get
            {
                return _TecInspAgencyPhone;
            }
            set
            {
                OnTecInspAgencyPhoneChanging(value);
                ReportPropertyChanging("TecInspAgencyPhone");
                _TecInspAgencyPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TecInspAgencyPhone");
                OnTecInspAgencyPhoneChanged();
            }
        }
        private global::System.String _TecInspAgencyPhone;
        partial void OnTecInspAgencyPhoneChanging(global::System.String value);
        partial void OnTecInspAgencyPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyFax
        {
            get
            {
                return _TecInspAgencyFax;
            }
            set
            {
                OnTecInspAgencyFaxChanging(value);
                ReportPropertyChanging("TecInspAgencyFax");
                _TecInspAgencyFax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TecInspAgencyFax");
                OnTecInspAgencyFaxChanged();
            }
        }
        private global::System.String _TecInspAgencyFax;
        partial void OnTecInspAgencyFaxChanging(global::System.String value);
        partial void OnTecInspAgencyFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyWebSite
        {
            get
            {
                return _TecInspAgencyWebSite;
            }
            set
            {
                OnTecInspAgencyWebSiteChanging(value);
                ReportPropertyChanging("TecInspAgencyWebSite");
                _TecInspAgencyWebSite = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TecInspAgencyWebSite");
                OnTecInspAgencyWebSiteChanged();
            }
        }
        private global::System.String _TecInspAgencyWebSite;
        partial void OnTecInspAgencyWebSiteChanging(global::System.String value);
        partial void OnTecInspAgencyWebSiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TecInspAgencyNotes
        {
            get
            {
                return _TecInspAgencyNotes;
            }
            set
            {
                OnTecInspAgencyNotesChanging(value);
                ReportPropertyChanging("TecInspAgencyNotes");
                _TecInspAgencyNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TecInspAgencyNotes");
                OnTecInspAgencyNotesChanged();
            }
        }
        private global::System.String _TecInspAgencyNotes;
        partial void OnTecInspAgencyNotesChanging(global::System.String value);
        partial void OnTecInspAgencyNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "ExamMaintenanceHistory")]
        public EntityCollection<ExamMaintenanceHistory> ExamMaintenanceHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ExamMaintenanceHistory>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "ExamMaintenanceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ExamMaintenanceHistory>("SureHisModel.FK_ExamMaintenanceHistory_TechnicalInspectionAgency", "ExamMaintenanceHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="TestBlood")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestBlood : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestBlood object.
        /// </summary>
        /// <param name="testBloodID">Initial value of the TestBloodID property.</param>
        /// <param name="testDate">Initial value of the TestDate property.</param>
        /// <param name="estEmpID">Initial value of the EstEmpID property.</param>
        /// <param name="v_TestResults">Initial value of the V_TestResults property.</param>
        public static TestBlood CreateTestBlood(global::System.Int64 testBloodID, global::System.DateTime testDate, global::System.Int64 estEmpID, global::System.Int64 v_TestResults)
        {
            TestBlood testBlood = new TestBlood();
            testBlood.TestBloodID = testBloodID;
            testBlood.TestDate = testDate;
            testBlood.EstEmpID = estEmpID;
            testBlood.V_TestResults = v_TestResults;
            return testBlood;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TestBloodID
        {
            get
            {
                return _TestBloodID;
            }
            set
            {
                if (_TestBloodID != value)
                {
                    OnTestBloodIDChanging(value);
                    ReportPropertyChanging("TestBloodID");
                    _TestBloodID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TestBloodID");
                    OnTestBloodIDChanged();
                }
            }
        }
        private global::System.Int64 _TestBloodID;
        partial void OnTestBloodIDChanging(global::System.Int64 value);
        partial void OnTestBloodIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TestDate
        {
            get
            {
                return _TestDate;
            }
            set
            {
                OnTestDateChanging(value);
                ReportPropertyChanging("TestDate");
                _TestDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDate");
                OnTestDateChanged();
            }
        }
        private global::System.DateTime _TestDate;
        partial void OnTestDateChanging(global::System.DateTime value);
        partial void OnTestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private global::System.Int64 _EstEmpID;
        partial void OnEstEmpIDChanging(global::System.Int64 value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_TestResults
        {
            get
            {
                return _V_TestResults;
            }
            set
            {
                OnV_TestResultsChanging(value);
                ReportPropertyChanging("V_TestResults");
                _V_TestResults = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_TestResults");
                OnV_TestResultsChanged();
            }
        }
        private global::System.Int64 _V_TestResults;
        partial void OnV_TestResultsChanging(global::System.Int64 value);
        partial void OnV_TestResultsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BloodBankID
        {
            get
            {
                return _BloodBankID;
            }
            set
            {
                OnBloodBankIDChanging(value);
                ReportPropertyChanging("BloodBankID");
                _BloodBankID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BloodBankID");
                OnBloodBankIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BloodBankID;
        partial void OnBloodBankIDChanging(Nullable<global::System.Int64> value);
        partial void OnBloodBankIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestBlood_Bloodbank", "Bloodbank")]
        public Bloodbank Bloodbank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_TestBlood_Bloodbank", "Bloodbank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_TestBlood_Bloodbank", "Bloodbank").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bloodbank> BloodbankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bloodbank>("SureHisModel.FK_TestBlood_Bloodbank", "Bloodbank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bloodbank>("SureHisModel.FK_TestBlood_Bloodbank", "Bloodbank", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestBlood_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestBlood_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestBlood_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestBlood_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_TestBlood_Employee", "Employee", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="TestOnPatientSpecimen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TestOnPatientSpecimen : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TestOnPatientSpecimen object.
        /// </summary>
        /// <param name="ptSpecTestID">Initial value of the PtSpecTestID property.</param>
        /// <param name="clinReqID">Initial value of the ClinReqID property.</param>
        /// <param name="ptSpecID">Initial value of the PtSpecID property.</param>
        public static TestOnPatientSpecimen CreateTestOnPatientSpecimen(global::System.Int64 ptSpecTestID, global::System.Int64 clinReqID, global::System.Int64 ptSpecID)
        {
            TestOnPatientSpecimen testOnPatientSpecimen = new TestOnPatientSpecimen();
            testOnPatientSpecimen.PtSpecTestID = ptSpecTestID;
            testOnPatientSpecimen.ClinReqID = clinReqID;
            testOnPatientSpecimen.PtSpecID = ptSpecID;
            return testOnPatientSpecimen;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtSpecTestID
        {
            get
            {
                return _PtSpecTestID;
            }
            set
            {
                if (_PtSpecTestID != value)
                {
                    OnPtSpecTestIDChanging(value);
                    ReportPropertyChanging("PtSpecTestID");
                    _PtSpecTestID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PtSpecTestID");
                    OnPtSpecTestIDChanged();
                }
            }
        }
        private global::System.Int64 _PtSpecTestID;
        partial void OnPtSpecTestIDChanging(global::System.Int64 value);
        partial void OnPtSpecTestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ClinReqID
        {
            get
            {
                return _ClinReqID;
            }
            set
            {
                OnClinReqIDChanging(value);
                ReportPropertyChanging("ClinReqID");
                _ClinReqID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinReqID");
                OnClinReqIDChanged();
            }
        }
        private global::System.Int64 _ClinReqID;
        partial void OnClinReqIDChanging(global::System.Int64 value);
        partial void OnClinReqIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtSpecID
        {
            get
            {
                return _PtSpecID;
            }
            set
            {
                OnPtSpecIDChanging(value);
                ReportPropertyChanging("PtSpecID");
                _PtSpecID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtSpecID");
                OnPtSpecIDChanged();
            }
        }
        private global::System.Int64 _PtSpecID;
        partial void OnPtSpecIDChanging(global::System.Int64 value);
        partial void OnPtSpecIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TestDtm
        {
            get
            {
                return _TestDtm;
            }
            set
            {
                OnTestDtmChanging(value);
                ReportPropertyChanging("TestDtm");
                _TestDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TestDtm");
                OnTestDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _TestDtm;
        partial void OnTestDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnTestDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DiagPlace
        {
            get
            {
                return _DiagPlace;
            }
            set
            {
                OnDiagPlaceChanging(value);
                ReportPropertyChanging("DiagPlace");
                _DiagPlace = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DiagPlace");
                OnDiagPlaceChanged();
            }
        }
        private global::System.String _DiagPlace;
        partial void OnDiagPlaceChanging(global::System.String value);
        partial void OnDiagPlaceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_pClinSceneCtg
        {
            get
            {
                return _V_pClinSceneCtg;
            }
            set
            {
                OnV_pClinSceneCtgChanging(value);
                ReportPropertyChanging("V_pClinSceneCtg");
                _V_pClinSceneCtg = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_pClinSceneCtg");
                OnV_pClinSceneCtgChanged();
            }
        }
        private Nullable<global::System.Int64> _V_pClinSceneCtg;
        partial void OnV_pClinSceneCtgChanging(Nullable<global::System.Int64> value);
        partial void OnV_pClinSceneCtgChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> ClinicalDoctorID
        {
            get
            {
                return _ClinicalDoctorID;
            }
            set
            {
                OnClinicalDoctorIDChanging(value);
                ReportPropertyChanging("ClinicalDoctorID");
                _ClinicalDoctorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClinicalDoctorID");
                OnClinicalDoctorIDChanged();
            }
        }
        private Nullable<global::System.Int64> _ClinicalDoctorID;
        partial void OnClinicalDoctorIDChanging(Nullable<global::System.Int64> value);
        partial void OnClinicalDoctorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Dignosis
        {
            get
            {
                return _Dignosis;
            }
            set
            {
                OnDignosisChanging(value);
                ReportPropertyChanging("Dignosis");
                _Dignosis = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Dignosis");
                OnDignosisChanged();
            }
        }
        private global::System.String _Dignosis;
        partial void OnDignosisChanging(global::System.String value);
        partial void OnDignosisChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TxRec
        {
            get
            {
                return _TxRec;
            }
            set
            {
                OnTxRecChanging(value);
                ReportPropertyChanging("TxRec");
                _TxRec = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TxRec");
                OnTxRecChanged();
            }
        }
        private global::System.String _TxRec;
        partial void OnTxRecChanging(global::System.String value);
        partial void OnTxRecChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isExportedPDF
        {
            get
            {
                return _isExportedPDF;
            }
            set
            {
                OnisExportedPDFChanging(value);
                ReportPropertyChanging("isExportedPDF");
                _isExportedPDF = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isExportedPDF");
                OnisExportedPDFChanged();
            }
        }
        private Nullable<global::System.Boolean> _isExportedPDF;
        partial void OnisExportedPDFChanging(Nullable<global::System.Boolean> value);
        partial void OnisExportedPDFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PublishedDate
        {
            get
            {
                return _PublishedDate;
            }
            set
            {
                OnPublishedDateChanging(value);
                ReportPropertyChanging("PublishedDate");
                _PublishedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PublishedDate");
                OnPublishedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PublishedDate;
        partial void OnPublishedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPublishedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EquipMDSrcrID
        {
            get
            {
                return _EquipMDSrcrID;
            }
            set
            {
                OnEquipMDSrcrIDChanging(value);
                ReportPropertyChanging("EquipMDSrcrID");
                _EquipMDSrcrID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquipMDSrcrID");
                OnEquipMDSrcrIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EquipMDSrcrID;
        partial void OnEquipMDSrcrIDChanging(Nullable<global::System.Int64> value);
        partial void OnEquipMDSrcrIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PerfmEmpID
        {
            get
            {
                return _PerfmEmpID;
            }
            set
            {
                OnPerfmEmpIDChanging(value);
                ReportPropertyChanging("PerfmEmpID");
                _PerfmEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PerfmEmpID");
                OnPerfmEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PerfmEmpID;
        partial void OnPerfmEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnPerfmEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_Employee_02", "Employee")]
        public Employee Employee1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> Employee1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("SureHisModel.FK_TestOnPatientSpecimen_Employee_02", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources")]
        public MedicalEquimentsResources MedicalEquimentsResources
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MedicalEquimentsResources> MedicalEquimentsResourcesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MedicalEquimentsResources>("SureHisModel.FK_TestOnPatientSpecimen_MedicalEquimentsResources", "MedicalEquimentsResources", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_MedLabRepository_TestOnPatientSpecimen", "MedLabRepository")]
        public EntityCollection<MedLabRepository> MedLabRepository
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MedLabRepository>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "MedLabRepository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MedLabRepository>("SureHisModel.FK_MedLabRepository_TestOnPatientSpecimen", "MedLabRepository", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq")]
        public ParaClinicalReq ParaClinicalReq
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ParaClinicalReq> ParaClinicalReqReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ParaClinicalReq>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ParaClinicalReq>("SureHisModel.FK_TestOnPatientSpecimen_ParaClinicalReq", "ParaClinicalReq", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PatientRequestOnSpecimen_PatientSpecimenTest", "PatientMedLabTestResult")]
        public EntityCollection<PatientMedLabTestResult> PatientMedLabTestResult
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "PatientMedLabTestResult");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PatientMedLabTestResult>("SureHisModel.FK_PatientRequestOnSpecimen_PatientSpecimenTest", "PatientMedLabTestResult", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen")]
        public PatientSpecimen PatientSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PatientSpecimen> PatientSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PatientSpecimen>("SureHisModel.FK_TestOnPatientSpecimen_PatientSpecimen", "PatientSpecimen", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Trigs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Trigs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Trigs object.
        /// </summary>
        /// <param name="tblName">Initial value of the tblName property.</param>
        public static Trigs CreateTrigs(global::System.String tblName)
        {
            Trigs trigs = new Trigs();
            trigs.tblName = tblName;
            return trigs;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String tblName
        {
            get
            {
                return _tblName;
            }
            set
            {
                if (_tblName != value)
                {
                    OntblNameChanging(value);
                    ReportPropertyChanging("tblName");
                    _tblName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("tblName");
                    OntblNameChanged();
                }
            }
        }
        private global::System.String _tblName;
        partial void OntblNameChanging(global::System.String value);
        partial void OntblNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String fID
        {
            get
            {
                return _fID;
            }
            set
            {
                OnfIDChanging(value);
                ReportPropertyChanging("fID");
                _fID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("fID");
                OnfIDChanged();
            }
        }
        private global::System.String _fID;
        partial void OnfIDChanging(global::System.String value);
        partial void OnfIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Desc
        {
            get
            {
                return _Desc;
            }
            set
            {
                OnDescChanging(value);
                ReportPropertyChanging("Desc");
                _Desc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Desc");
                OnDescChanged();
            }
        }
        private global::System.String _Desc;
        partial void OnDescChanging(global::System.String value);
        partial void OnDescChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="UserAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserAccount object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="accountNameEmailAddress">Initial value of the AccountNameEmailAddress property.</param>
        /// <param name="accountPwd">Initial value of the AccountPwd property.</param>
        public static UserAccount CreateUserAccount(global::System.Int64 accountID, global::System.String accountNameEmailAddress, global::System.String accountPwd)
        {
            UserAccount userAccount = new UserAccount();
            userAccount.AccountID = accountID;
            userAccount.AccountNameEmailAddress = accountNameEmailAddress;
            userAccount.AccountPwd = accountPwd;
            return userAccount;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int64 _AccountID;
        partial void OnAccountIDChanging(global::System.Int64 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNameEmailAddress
        {
            get
            {
                return _AccountNameEmailAddress;
            }
            set
            {
                OnAccountNameEmailAddressChanging(value);
                ReportPropertyChanging("AccountNameEmailAddress");
                _AccountNameEmailAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNameEmailAddress");
                OnAccountNameEmailAddressChanged();
            }
        }
        private global::System.String _AccountNameEmailAddress;
        partial void OnAccountNameEmailAddressChanging(global::System.String value);
        partial void OnAccountNameEmailAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountPwd
        {
            get
            {
                return _AccountPwd;
            }
            set
            {
                OnAccountPwdChanging(value);
                ReportPropertyChanging("AccountPwd");
                _AccountPwd = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountPwd");
                OnAccountPwdChanged();
            }
        }
        private global::System.String _AccountPwd;
        partial void OnAccountPwdChanging(global::System.String value);
        partial void OnAccountPwdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PersonID;
        partial void OnPersonIDChanging(Nullable<global::System.Int64> value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActivated
        {
            get
            {
                return _IsActivated;
            }
            set
            {
                OnIsActivatedChanging(value);
                ReportPropertyChanging("IsActivated");
                _IsActivated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActivated");
                OnIsActivatedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActivated;
        partial void OnIsActivatedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActivatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ActivationCode
        {
            get
            {
                return _ActivationCode;
            }
            set
            {
                OnActivationCodeChanging(value);
                ReportPropertyChanging("ActivationCode");
                _ActivationCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ActivationCode");
                OnActivationCodeChanged();
            }
        }
        private global::System.String _ActivationCode;
        partial void OnActivationCodeChanging(global::System.String value);
        partial void OnActivationCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ActivatedDtm
        {
            get
            {
                return _ActivatedDtm;
            }
            set
            {
                OnActivatedDtmChanging(value);
                ReportPropertyChanging("ActivatedDtm");
                _ActivatedDtm = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivatedDtm");
                OnActivatedDtmChanged();
            }
        }
        private Nullable<global::System.DateTime> _ActivatedDtm;
        partial void OnActivatedDtmChanging(Nullable<global::System.DateTime> value);
        partial void OnActivatedDtmChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateOfRegistration
        {
            get
            {
                return _DateOfRegistration;
            }
            set
            {
                OnDateOfRegistrationChanging(value);
                ReportPropertyChanging("DateOfRegistration");
                _DateOfRegistration = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfRegistration");
                OnDateOfRegistrationChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateOfRegistration;
        partial void OnDateOfRegistrationChanging(Nullable<global::System.DateTime> value);
        partial void OnDateOfRegistrationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isBlocked
        {
            get
            {
                return _isBlocked;
            }
            set
            {
                OnisBlockedChanging(value);
                ReportPropertyChanging("isBlocked");
                _isBlocked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isBlocked");
                OnisBlockedChanged();
            }
        }
        private Nullable<global::System.Boolean> _isBlocked;
        partial void OnisBlockedChanging(Nullable<global::System.Boolean> value);
        partial void OnisBlockedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> isBuiltIn
        {
            get
            {
                return _isBuiltIn;
            }
            set
            {
                OnisBuiltInChanging(value);
                ReportPropertyChanging("isBuiltIn");
                _isBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("isBuiltIn");
                OnisBuiltInChanged();
            }
        }
        private Nullable<global::System.Boolean> _isBuiltIn;
        partial void OnisBuiltInChanging(Nullable<global::System.Boolean> value);
        partial void OnisBuiltInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> PrimaryRoleID
        {
            get
            {
                return _PrimaryRoleID;
            }
            set
            {
                OnPrimaryRoleIDChanging(value);
                ReportPropertyChanging("PrimaryRoleID");
                _PrimaryRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryRoleID");
                OnPrimaryRoleIDChanged();
            }
        }
        private Nullable<global::System.Int64> _PrimaryRoleID;
        partial void OnPrimaryRoleIDChanging(Nullable<global::System.Int64> value);
        partial void OnPrimaryRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ForgotPwdCode
        {
            get
            {
                return _ForgotPwdCode;
            }
            set
            {
                OnForgotPwdCodeChanging(value);
                ReportPropertyChanging("ForgotPwdCode");
                _ForgotPwdCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ForgotPwdCode");
                OnForgotPwdCodeChanged();
            }
        }
        private global::System.String _ForgotPwdCode;
        partial void OnForgotPwdCodeChanging(global::System.String value);
        partial void OnForgotPwdCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RequestDateForPWD
        {
            get
            {
                return _RequestDateForPWD;
            }
            set
            {
                OnRequestDateForPWDChanging(value);
                ReportPropertyChanging("RequestDateForPWD");
                _RequestDateForPWD = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequestDateForPWD");
                OnRequestDateForPWDChanged();
            }
        }
        private Nullable<global::System.DateTime> _RequestDateForPWD;
        partial void OnRequestDateForPWDChanging(Nullable<global::System.DateTime> value);
        partial void OnRequestDateForPWDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> V_AccountType
        {
            get
            {
                return _V_AccountType;
            }
            set
            {
                OnV_AccountTypeChanging(value);
                ReportPropertyChanging("V_AccountType");
                _V_AccountType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_AccountType");
                OnV_AccountTypeChanged();
            }
        }
        private Nullable<global::System.Int64> _V_AccountType;
        partial void OnV_AccountTypeChanging(Nullable<global::System.Int64> value);
        partial void OnV_AccountTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_AdmNoTempHolding_UserAccount", "AdmNoTempHolding")]
        public EntityCollection<AdmNoTempHolding> AdmNoTempHolding
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "AdmNoTempHolding");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AdmNoTempHolding>("SureHisModel.FK_AdmNoTempHolding_UserAccount", "AdmNoTempHolding", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ASPNetUser_UserAccount", "ASPNetUser")]
        public EntityCollection<ASPNetUser> ASPNetUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ASPNetUser>("SureHisModel.FK_ASPNetUser_UserAccount", "ASPNetUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ASPNetUser>("SureHisModel.FK_ASPNetUser_UserAccount", "ASPNetUser", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UserAccount_Person", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_UserAccount_Person", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_UserAccount_Person", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("SureHisModel.FK_UserAccount_Person", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("SureHisModel.FK_UserAccount_Person", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_ServerLog_UserAccount", "ServerLog")]
        public EntityCollection<ServerLog> ServerLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServerLog>("SureHisModel.FK_ServerLog_UserAccount", "ServerLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServerLog>("SureHisModel.FK_ServerLog_UserAccount", "ServerLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Session_UserAccount", "Session")]
        public EntityCollection<Session> Session
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Session>("SureHisModel.FK_Session_UserAccount", "Session");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Session>("SureHisModel.FK_Session_UserAccount", "Session", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UsersInGroup_UserAccount", "UsersInGroup")]
        public EntityCollection<UsersInGroup> UsersInGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInGroup>("SureHisModel.FK_UsersInGroup_UserAccount", "UsersInGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInGroup>("SureHisModel.FK_UsersInGroup_UserAccount", "UsersInGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="UserGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserGroup object.
        /// </summary>
        /// <param name="userGroupID">Initial value of the UserGroupID property.</param>
        /// <param name="userGroupName">Initial value of the UserGroupName property.</param>
        /// <param name="isBuiltIn">Initial value of the IsBuiltIn property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static UserGroup CreateUserGroup(global::System.Int64 userGroupID, global::System.String userGroupName, global::System.Boolean isBuiltIn, global::System.Boolean isActive)
        {
            UserGroup userGroup = new UserGroup();
            userGroup.UserGroupID = userGroupID;
            userGroup.UserGroupName = userGroupName;
            userGroup.IsBuiltIn = isBuiltIn;
            userGroup.IsActive = isActive;
            return userGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserGroupID
        {
            get
            {
                return _UserGroupID;
            }
            set
            {
                if (_UserGroupID != value)
                {
                    OnUserGroupIDChanging(value);
                    ReportPropertyChanging("UserGroupID");
                    _UserGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGroupID");
                    OnUserGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _UserGroupID;
        partial void OnUserGroupIDChanging(global::System.Int64 value);
        partial void OnUserGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserGroupName
        {
            get
            {
                return _UserGroupName;
            }
            set
            {
                OnUserGroupNameChanging(value);
                ReportPropertyChanging("UserGroupName");
                _UserGroupName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserGroupName");
                OnUserGroupNameChanged();
            }
        }
        private global::System.String _UserGroupName;
        partial void OnUserGroupNameChanging(global::System.String value);
        partial void OnUserGroupNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsBuiltIn
        {
            get
            {
                return _IsBuiltIn;
            }
            set
            {
                OnIsBuiltInChanging(value);
                ReportPropertyChanging("IsBuiltIn");
                _IsBuiltIn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsBuiltIn");
                OnIsBuiltInChanged();
            }
        }
        private global::System.Boolean _IsBuiltIn;
        partial void OnIsBuiltInChanging(global::System.Boolean value);
        partial void OnIsBuiltInChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MajorFuncDesc
        {
            get
            {
                return _MajorFuncDesc;
            }
            set
            {
                OnMajorFuncDescChanging(value);
                ReportPropertyChanging("MajorFuncDesc");
                _MajorFuncDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MajorFuncDesc");
                OnMajorFuncDescChanged();
            }
        }
        private global::System.String _MajorFuncDesc;
        partial void OnMajorFuncDescChanging(global::System.String value);
        partial void OnMajorFuncDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_PrivilegeRole_UserGroup", "PrivilegeRole")]
        public EntityCollection<PrivilegeRole> PrivilegeRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PrivilegeRole>("SureHisModel.FK_PrivilegeRole_UserGroup", "PrivilegeRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PrivilegeRole>("SureHisModel.FK_PrivilegeRole_UserGroup", "PrivilegeRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UsersInGroup_UserGroup", "UsersInGroup")]
        public EntityCollection<UsersInGroup> UsersInGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UsersInGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UsersInGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UsersInGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UsersInGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="UsersInGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersInGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersInGroup object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="userGroupID">Initial value of the UserGroupID property.</param>
        public static UsersInGroup CreateUsersInGroup(global::System.Int64 accountID, global::System.Int64 userGroupID)
        {
            UsersInGroup usersInGroup = new UsersInGroup();
            usersInGroup.AccountID = accountID;
            usersInGroup.UserGroupID = userGroupID;
            return usersInGroup;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int64 _AccountID;
        partial void OnAccountIDChanging(global::System.Int64 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserGroupID
        {
            get
            {
                return _UserGroupID;
            }
            set
            {
                if (_UserGroupID != value)
                {
                    OnUserGroupIDChanging(value);
                    ReportPropertyChanging("UserGroupID");
                    _UserGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserGroupID");
                    OnUserGroupIDChanged();
                }
            }
        }
        private global::System.Int64 _UserGroupID;
        partial void OnUserGroupIDChanging(global::System.Int64 value);
        partial void OnUserGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ToDate
        {
            get
            {
                return _ToDate;
            }
            set
            {
                OnToDateChanging(value);
                ReportPropertyChanging("ToDate");
                _ToDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ToDate");
                OnToDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ToDate;
        partial void OnToDateChanging(Nullable<global::System.DateTime> value);
        partial void OnToDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UsersInGroup_UserAccount", "UserAccount")]
        public UserAccount UserAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_UsersInGroup_UserAccount", "UserAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_UsersInGroup_UserAccount", "UserAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserAccount> UserAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserAccount>("SureHisModel.FK_UsersInGroup_UserAccount", "UserAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserAccount>("SureHisModel.FK_UsersInGroup_UserAccount", "UserAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_UsersInGroup_UserGroup", "UserGroup")]
        public UserGroup UserGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UserGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UserGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserGroup> UserGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UserGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserGroup>("SureHisModel.FK_UsersInGroup_UserGroup", "UserGroup", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="Ward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ward : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ward object.
        /// </summary>
        /// <param name="wID">Initial value of the WID property.</param>
        /// <param name="wName">Initial value of the WName property.</param>
        /// <param name="isCommon">Initial value of the IsCommon property.</param>
        public static Ward CreateWard(global::System.Int64 wID, global::System.String wName, global::System.Boolean isCommon)
        {
            Ward ward = new Ward();
            ward.WID = wID;
            ward.WName = wName;
            ward.IsCommon = isCommon;
            return ward;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WID
        {
            get
            {
                return _WID;
            }
            set
            {
                if (_WID != value)
                {
                    OnWIDChanging(value);
                    ReportPropertyChanging("WID");
                    _WID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WID");
                    OnWIDChanged();
                }
            }
        }
        private global::System.Int64 _WID;
        partial void OnWIDChanging(global::System.Int64 value);
        partial void OnWIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WName
        {
            get
            {
                return _WName;
            }
            set
            {
                OnWNameChanging(value);
                ReportPropertyChanging("WName");
                _WName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WName");
                OnWNameChanged();
            }
        }
        private global::System.String _WName;
        partial void OnWNameChanging(global::System.String value);
        partial void OnWNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String WDesc
        {
            get
            {
                return _WDesc;
            }
            set
            {
                OnWDescChanging(value);
                ReportPropertyChanging("WDesc");
                _WDesc = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("WDesc");
                OnWDescChanged();
            }
        }
        private global::System.String _WDesc;
        partial void OnWDescChanging(global::System.String value);
        partial void OnWDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCommon
        {
            get
            {
                return _IsCommon;
            }
            set
            {
                OnIsCommonChanging(value);
                ReportPropertyChanging("IsCommon");
                _IsCommon = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCommon");
                OnIsCommonChanged();
            }
        }
        private global::System.Boolean _IsCommon;
        partial void OnIsCommonChanging(global::System.Boolean value);
        partial void OnIsCommonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsClinicWard
        {
            get
            {
                return _IsClinicWard;
            }
            set
            {
                OnIsClinicWardChanging(value);
                ReportPropertyChanging("IsClinicWard");
                _IsClinicWard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsClinicWard");
                OnIsClinicWardChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsClinicWard;
        partial void OnIsClinicWardChanging(Nullable<global::System.Boolean> value);
        partial void OnIsClinicWardChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WardInDept_Ward", "WardInDept")]
        public EntityCollection<WardInDept> WardInDept
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WardInDept>("SureHisModel.FK_WardInDept_Ward", "WardInDept");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WardInDept>("SureHisModel.FK_WardInDept_Ward", "WardInDept", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="WardInDept")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WardInDept : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WardInDept object.
        /// </summary>
        /// <param name="wDID">Initial value of the WDID property.</param>
        /// <param name="wID">Initial value of the WID property.</param>
        /// <param name="hosDeptID">Initial value of the HosDeptID property.</param>
        public static WardInDept CreateWardInDept(global::System.Int64 wDID, global::System.Int64 wID, global::System.Int64 hosDeptID)
        {
            WardInDept wardInDept = new WardInDept();
            wardInDept.WDID = wDID;
            wardInDept.WID = wID;
            wardInDept.HosDeptID = hosDeptID;
            return wardInDept;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                if (_WDID != value)
                {
                    OnWDIDChanging(value);
                    ReportPropertyChanging("WDID");
                    _WDID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WDID");
                    OnWDIDChanged();
                }
            }
        }
        private global::System.Int64 _WDID;
        partial void OnWDIDChanging(global::System.Int64 value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WID
        {
            get
            {
                return _WID;
            }
            set
            {
                OnWIDChanging(value);
                ReportPropertyChanging("WID");
                _WID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WID");
                OnWIDChanged();
            }
        }
        private global::System.Int64 _WID;
        partial void OnWIDChanging(global::System.Int64 value);
        partial void OnWIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private global::System.Int64 _HosDeptID;
        partial void OnHosDeptIDChanging(global::System.Int64 value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDate
        {
            get
            {
                return _ModifiedDate;
            }
            set
            {
                OnModifiedDateChanging(value);
                ReportPropertyChanging("ModifiedDate");
                _ModifiedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDate");
                OnModifiedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDate;
        partial void OnModifiedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EstEmpID
        {
            get
            {
                return _EstEmpID;
            }
            set
            {
                OnEstEmpIDChanging(value);
                ReportPropertyChanging("EstEmpID");
                _EstEmpID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EstEmpID");
                OnEstEmpIDChanged();
            }
        }
        private Nullable<global::System.Int64> _EstEmpID;
        partial void OnEstEmpIDChanging(Nullable<global::System.Int64> value);
        partial void OnEstEmpIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Appointment_WardInDept", "Appointment")]
        public EntityCollection<Appointment> Appointment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Appointment>("SureHisModel.FK_Appointment_WardInDept", "Appointment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Appointment>("SureHisModel.FK_Appointment_WardInDept", "Appointment", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_EmpAllocation_WardInDept", "EmpAllocation")]
        public EntityCollection<EmpAllocation> EmpAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmpAllocation>("SureHisModel.FK_EmpAllocation_WardInDept", "EmpAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmpAllocation>("SureHisModel.FK_EmpAllocation_WardInDept", "EmpAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WardInDept_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WardInDept_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WardInDept_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WardInDept_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_WardInDept_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_InsuranceRegQueue_WardInDept", "InsuranceRegQueue")]
        public EntityCollection<InsuranceRegQueue> InsuranceRegQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InsuranceRegQueue>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "InsuranceRegQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InsuranceRegQueue>("SureHisModel.FK_InsuranceRegQueue_WardInDept", "InsuranceRegQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_OpSkedDistibution_WardInDept", "OpSkedDistibution")]
        public EntityCollection<OpSkedDistibution> OpSkedDistibution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_WardInDept", "OpSkedDistibution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OpSkedDistibution>("SureHisModel.FK_OpSkedDistibution_WardInDept", "OpSkedDistibution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_RegQueue_WardInDept", "RegQueue")]
        public EntityCollection<RegQueue> RegQueue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RegQueue>("SureHisModel.FK_RegQueue_WardInDept", "RegQueue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RegQueue>("SureHisModel.FK_RegQueue_WardInDept", "RegQueue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_Allocation_WardInDept", "RoomAllocation")]
        public EntityCollection<RoomAllocation> RoomAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoomAllocation>("SureHisModel.FK_Allocation_WardInDept", "RoomAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoomAllocation>("SureHisModel.FK_Allocation_WardInDept", "RoomAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WardInDept_Ward", "Ward")]
        public Ward Ward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("SureHisModel.FK_WardInDept_Ward", "Ward").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("SureHisModel.FK_WardInDept_Ward", "Ward").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ward> WardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ward>("SureHisModel.FK_WardInDept_Ward", "Ward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ward>("SureHisModel.FK_WardInDept_Ward", "Ward", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="WorkingDay")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkingDay : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkingDay object.
        /// </summary>
        /// <param name="wDID">Initial value of the WDID property.</param>
        /// <param name="v_WorkingDay">Initial value of the V_WorkingDay property.</param>
        /// <param name="dateObserved">Initial value of the DateObserved property.</param>
        public static WorkingDay CreateWorkingDay(global::System.Int64 wDID, global::System.Int64 v_WorkingDay, global::System.DateTime dateObserved)
        {
            WorkingDay workingDay = new WorkingDay();
            workingDay.WDID = wDID;
            workingDay.V_WorkingDay = v_WorkingDay;
            workingDay.DateObserved = dateObserved;
            return workingDay;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WDID
        {
            get
            {
                return _WDID;
            }
            set
            {
                if (_WDID != value)
                {
                    OnWDIDChanging(value);
                    ReportPropertyChanging("WDID");
                    _WDID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WDID");
                    OnWDIDChanged();
                }
            }
        }
        private global::System.Int64 _WDID;
        partial void OnWDIDChanging(global::System.Int64 value);
        partial void OnWDIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_WorkingDay
        {
            get
            {
                return _V_WorkingDay;
            }
            set
            {
                OnV_WorkingDayChanging(value);
                ReportPropertyChanging("V_WorkingDay");
                _V_WorkingDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_WorkingDay");
                OnV_WorkingDayChanged();
            }
        }
        private global::System.Int64 _V_WorkingDay;
        partial void OnV_WorkingDayChanging(global::System.Int64 value);
        partial void OnV_WorkingDayChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateObserved
        {
            get
            {
                return _DateObserved;
            }
            set
            {
                OnDateObservedChanging(value);
                ReportPropertyChanging("DateObserved");
                _DateObserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateObserved");
                OnDateObservedChanged();
            }
        }
        private global::System.DateTime _DateObserved;
        partial void OnDateObservedChanging(global::System.DateTime value);
        partial void OnDateObservedChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="WorkingSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkingSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkingSchedule object.
        /// </summary>
        /// <param name="workingSked">Initial value of the WorkingSked property.</param>
        /// <param name="v_DayName">Initial value of the V_DayName property.</param>
        /// <param name="sID">Initial value of the SID property.</param>
        public static WorkingSchedule CreateWorkingSchedule(global::System.Int64 workingSked, global::System.Int64 v_DayName, global::System.Int64 sID)
        {
            WorkingSchedule workingSchedule = new WorkingSchedule();
            workingSchedule.WorkingSked = workingSked;
            workingSchedule.V_DayName = v_DayName;
            workingSchedule.SID = sID;
            return workingSchedule;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WorkingSked
        {
            get
            {
                return _WorkingSked;
            }
            set
            {
                if (_WorkingSked != value)
                {
                    OnWorkingSkedChanging(value);
                    ReportPropertyChanging("WorkingSked");
                    _WorkingSked = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkingSked");
                    OnWorkingSkedChanged();
                }
            }
        }
        private global::System.Int64 _WorkingSked;
        partial void OnWorkingSkedChanging(global::System.Int64 value);
        partial void OnWorkingSkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosDeptID
        {
            get
            {
                return _HosDeptID;
            }
            set
            {
                OnHosDeptIDChanging(value);
                ReportPropertyChanging("HosDeptID");
                _HosDeptID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosDeptID");
                OnHosDeptIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosDeptID;
        partial void OnHosDeptIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosDeptIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> HosID
        {
            get
            {
                return _HosID;
            }
            set
            {
                OnHosIDChanging(value);
                ReportPropertyChanging("HosID");
                _HosID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HosID");
                OnHosIDChanged();
            }
        }
        private Nullable<global::System.Int64> _HosID;
        partial void OnHosIDChanging(Nullable<global::System.Int64> value);
        partial void OnHosIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 V_DayName
        {
            get
            {
                return _V_DayName;
            }
            set
            {
                OnV_DayNameChanging(value);
                ReportPropertyChanging("V_DayName");
                _V_DayName = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("V_DayName");
                OnV_DayNameChanged();
            }
        }
        private global::System.Int64 _V_DayName;
        partial void OnV_DayNameChanging(global::System.Int64 value);
        partial void OnV_DayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 SID
        {
            get
            {
                return _SID;
            }
            set
            {
                OnSIDChanging(value);
                ReportPropertyChanging("SID");
                _SID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SID");
                OnSIDChanged();
            }
        }
        private global::System.Int64 _SID;
        partial void OnSIDChanging(global::System.Int64 value);
        partial void OnSIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_HCProvider", "HCProvider")]
        public HCProvider HCProvider
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_WorkingSchedule_HCProvider", "HCProvider").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_WorkingSchedule_HCProvider", "HCProvider").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HCProvider> HCProviderReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HCProvider>("SureHisModel.FK_WorkingSchedule_HCProvider", "HCProvider");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HCProvider>("SureHisModel.FK_WorkingSchedule_HCProvider", "HCProvider", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist")]
        public HospitalSpecialist HospitalSpecialist
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<HospitalSpecialist> HospitalSpecialistReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<HospitalSpecialist>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<HospitalSpecialist>("SureHisModel.FK_WorkingSchedule_HospitalSpecialist", "HospitalSpecialist", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkingSchedule_refShift", "refShift")]
        public refShift refShift
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_WorkingSchedule_refShift", "refShift").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_WorkingSchedule_refShift", "refShift").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<refShift> refShiftReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<refShift>("SureHisModel.FK_WorkingSchedule_refShift", "refShift");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<refShift>("SureHisModel.FK_WorkingSchedule_refShift", "refShift", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SureHisModel", Name="WorkPlace")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WorkPlace : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WorkPlace object.
        /// </summary>
        /// <param name="workPlaceID">Initial value of the WorkPlaceID property.</param>
        /// <param name="ptID">Initial value of the PtID property.</param>
        /// <param name="oUID">Initial value of the OUID property.</param>
        /// <param name="isCurrently">Initial value of the IsCurrently property.</param>
        public static WorkPlace CreateWorkPlace(global::System.Int64 workPlaceID, global::System.Int64 ptID, global::System.Int64 oUID, global::System.Boolean isCurrently)
        {
            WorkPlace workPlace = new WorkPlace();
            workPlace.WorkPlaceID = workPlaceID;
            workPlace.PtID = ptID;
            workPlace.OUID = oUID;
            workPlace.IsCurrently = isCurrently;
            return workPlace;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 WorkPlaceID
        {
            get
            {
                return _WorkPlaceID;
            }
            set
            {
                if (_WorkPlaceID != value)
                {
                    OnWorkPlaceIDChanging(value);
                    ReportPropertyChanging("WorkPlaceID");
                    _WorkPlaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("WorkPlaceID");
                    OnWorkPlaceIDChanged();
                }
            }
        }
        private global::System.Int64 _WorkPlaceID;
        partial void OnWorkPlaceIDChanging(global::System.Int64 value);
        partial void OnWorkPlaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 PtID
        {
            get
            {
                return _PtID;
            }
            set
            {
                OnPtIDChanging(value);
                ReportPropertyChanging("PtID");
                _PtID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PtID");
                OnPtIDChanged();
            }
        }
        private global::System.Int64 _PtID;
        partial void OnPtIDChanging(global::System.Int64 value);
        partial void OnPtIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 OUID
        {
            get
            {
                return _OUID;
            }
            set
            {
                OnOUIDChanging(value);
                ReportPropertyChanging("OUID");
                _OUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OUID");
                OnOUIDChanged();
            }
        }
        private global::System.Int64 _OUID;
        partial void OnOUIDChanging(global::System.Int64 value);
        partial void OnOUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FromDate
        {
            get
            {
                return _FromDate;
            }
            set
            {
                OnFromDateChanging(value);
                ReportPropertyChanging("FromDate");
                _FromDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FromDate");
                OnFromDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FromDate;
        partial void OnFromDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFromDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCurrently
        {
            get
            {
                return _IsCurrently;
            }
            set
            {
                OnIsCurrentlyChanging(value);
                ReportPropertyChanging("IsCurrently");
                _IsCurrently = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsCurrently");
                OnIsCurrentlyChanged();
            }
        }
        private global::System.Boolean _IsCurrently;
        partial void OnIsCurrentlyChanging(global::System.Boolean value);
        partial void OnIsCurrentlyChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkPlace_Organization", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_WorkPlace_Organization", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_WorkPlace_Organization", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("SureHisModel.FK_WorkPlace_Organization", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("SureHisModel.FK_WorkPlace_Organization", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SureHisModel", "FK_WorkPlace_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_WorkPlace_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_WorkPlace_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("SureHisModel.FK_WorkPlace_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("SureHisModel.FK_WorkPlace_Patient", "Patient", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
